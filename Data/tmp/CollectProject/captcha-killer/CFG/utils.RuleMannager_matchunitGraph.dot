digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String"
    "r0 := @parameter1: entity.Rule"
    "$i0 = virtualinvoke r0.<entity.Rule: int getType()>()"
    "tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }"
    "$r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3)"
    "return $r16"
    "$r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()"
    "$r15 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r3, $r14)"
    "return $r15"
    "$i1 = virtualinvoke r0.<entity.Rule: int getnStart()>()"
    "$i2 = virtualinvoke r0.<entity.Rule: int getnEnd()>()"
    "$r13 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByPosistion(java.lang.String,int,int)>(r3, $i1, $i2)"
    "return $r13"
    "$r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>()"
    "$r11 = virtualinvoke r0.<entity.Rule: java.lang.String getStrEnd()>()"
    "$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByStartEndString(java.lang.String,java.lang.String,java.lang.String)>(r3, $r10, $r11)"
    "return $r12"
    "$r6 = new matcher.impl.JsonMatcher"
    "specialinvoke $r6.<matcher.impl.JsonMatcher: void <init>()>()"
    "r7 = $r6"
    "$r8 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()"
    "$r9 = virtualinvoke r7.<matcher.impl.JsonMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r8)"
    "return $r9"
    "$r1 = new matcher.impl.XmlMatcher"
    "specialinvoke $r1.<matcher.impl.XmlMatcher: void <init>()>()"
    "r2 = $r1"
    "$r4 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()"
    "$r5 = virtualinvoke r2.<matcher.impl.XmlMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r4)"
    "return $r5"
    "$r17 = new entity.MatchResult"
    "specialinvoke $r17.<entity.MatchResult: void <init>()>()"
    "r18 = $r17"
    "virtualinvoke r18.<entity.MatchResult: void setResult(java.lang.String)>(\"unkown rule type\")"
    "return r18"
    "r3 := @parameter0: java.lang.String"->"r0 := @parameter1: entity.Rule";
    "r0 := @parameter1: entity.Rule"->"$i0 = virtualinvoke r0.<entity.Rule: int getType()>()";
    "$i0 = virtualinvoke r0.<entity.Rule: int getType()>()"->"tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }";
    "tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }"->"$r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3)";
    "tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }"->"$r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()";
    "tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }"->"$i1 = virtualinvoke r0.<entity.Rule: int getnStart()>()";
    "tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }"->"$r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>()";
    "tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }"->"$r6 = new matcher.impl.JsonMatcher";
    "tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }"->"$r1 = new matcher.impl.XmlMatcher";
    "tableswitch($i0) {     case 0: goto $r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3);     case 1: goto $r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>();     case 2: goto $i1 = virtualinvoke r0.<entity.Rule: int getnStart()>();     case 3: goto $r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>();     case 4: goto $r6 = new matcher.impl.JsonMatcher;     case 5: goto $r1 = new matcher.impl.XmlMatcher;     default: goto $r17 = new entity.MatchResult; }"->"$r17 = new entity.MatchResult";
    "$r16 = staticinvoke <utils.RuleMannager: entity.MatchResult matchRsqData(java.lang.String)>(r3)"->"return $r16";
    "$r14 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()"->"$r15 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r3, $r14)";
    "$r15 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByRegular(java.lang.String,java.lang.String)>(r3, $r14)"->"return $r15";
    "$i1 = virtualinvoke r0.<entity.Rule: int getnStart()>()"->"$i2 = virtualinvoke r0.<entity.Rule: int getnEnd()>()";
    "$i2 = virtualinvoke r0.<entity.Rule: int getnEnd()>()"->"$r13 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByPosistion(java.lang.String,int,int)>(r3, $i1, $i2)";
    "$r13 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByPosistion(java.lang.String,int,int)>(r3, $i1, $i2)"->"return $r13";
    "$r10 = virtualinvoke r0.<entity.Rule: java.lang.String getStrStart()>()"->"$r11 = virtualinvoke r0.<entity.Rule: java.lang.String getStrEnd()>()";
    "$r11 = virtualinvoke r0.<entity.Rule: java.lang.String getStrEnd()>()"->"$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByStartEndString(java.lang.String,java.lang.String,java.lang.String)>(r3, $r10, $r11)";
    "$r12 = staticinvoke <utils.RuleMannager: entity.MatchResult matchByStartEndString(java.lang.String,java.lang.String,java.lang.String)>(r3, $r10, $r11)"->"return $r12";
    "$r6 = new matcher.impl.JsonMatcher"->"specialinvoke $r6.<matcher.impl.JsonMatcher: void <init>()>()";
    "specialinvoke $r6.<matcher.impl.JsonMatcher: void <init>()>()"->"r7 = $r6";
    "r7 = $r6"->"$r8 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()";
    "$r8 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()"->"$r9 = virtualinvoke r7.<matcher.impl.JsonMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r8)";
    "$r9 = virtualinvoke r7.<matcher.impl.JsonMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r8)"->"return $r9";
    "$r1 = new matcher.impl.XmlMatcher"->"specialinvoke $r1.<matcher.impl.XmlMatcher: void <init>()>()";
    "specialinvoke $r1.<matcher.impl.XmlMatcher: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"$r4 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()";
    "$r4 = virtualinvoke r0.<entity.Rule: java.lang.String getRule()>()"->"$r5 = virtualinvoke r2.<matcher.impl.XmlMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r4)";
    "$r5 = virtualinvoke r2.<matcher.impl.XmlMatcher: entity.MatchResult match(java.lang.String,java.lang.String)>(r3, $r4)"->"return $r5";
    "$r17 = new entity.MatchResult"->"specialinvoke $r17.<entity.MatchResult: void <init>()>()";
    "specialinvoke $r17.<entity.MatchResult: void <init>()>()"->"r18 = $r17";
    "r18 = $r17"->"virtualinvoke r18.<entity.MatchResult: void setResult(java.lang.String)>(\"unkown rule type\")";
    "virtualinvoke r18.<entity.MatchResult: void setResult(java.lang.String)>(\"unkown rule type\")"->"return r18";
}
