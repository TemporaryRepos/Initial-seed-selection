digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "$i0 = lengthof r0"
    "if $i0 >= 4 goto $r2 = r0[0]"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"proxy ip, port, username and password required!\")"
    "return"
    "$r2 = r0[0]"
    "$r1 = r0[1]"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1)"
    "$i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()"
    "$r5 = r0[2]"
    "$r4 = r0[3]"
    "staticinvoke <com.qcloud.cos.demo.ProxyDemo: void ProxyUploadDemo(java.lang.String,int,java.lang.String,java.lang.String)>($r2, $i1, $r5, $r4)"
    "r0 := @parameter0: java.lang.String[]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 >= 4 goto $r2 = r0[0]";
    "if $i0 >= 4 goto $r2 = r0[0]"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "if $i0 >= 4 goto $r2 = r0[0]"->"$r2 = r0[0]";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"proxy ip, port, username and password required!\")";
    "virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"proxy ip, port, username and password required!\")"->"return";
    "$r2 = r0[0]"->"$r1 = r0[1]";
    "$r1 = r0[1]"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r1)"->"$i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()";
    "$i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>()"->"$r5 = r0[2]";
    "$r5 = r0[2]"->"$r4 = r0[3]";
    "$r4 = r0[3]"->"staticinvoke <com.qcloud.cos.demo.ProxyDemo: void ProxyUploadDemo(java.lang.String,int,java.lang.String,java.lang.String)>($r2, $i1, $r5, $r4)";
    "staticinvoke <com.qcloud.cos.demo.ProxyDemo: void ProxyUploadDemo(java.lang.String,int,java.lang.String,java.lang.String)>($r2, $i1, $r5, $r4)"->"return";
}
