digraph "unitGraph" {
    "r14 := @parameter0: java.lang.String[]"
    "$r0 = staticinvoke <com.typesafe.config.ConfigFactory: com.typesafe.config.Config load(java.lang.String)>(\"samplehello.conf\")"
    "r1 = staticinvoke <akka.actor.ActorSystem: akka.actor.ActorSystem create(java.lang.String,com.typesafe.config.Config)>(\"deadwatch\", $r0)"
    "$r2 = newarray (java.lang.Object)[0]"
    "$r3 = staticinvoke <akka.actor.Props: akka.actor.Props create(java.lang.Class,java.lang.Object[])>(class \"Lch7/s4/MyWorker;\", $r2)"
    "r4 = virtualinvoke r1.<akka.actor.ActorSystem: akka.actor.ActorRef actorOf(akka.actor.Props,java.lang.String)>($r3, \"worker\")"
    "$r5 = newarray (java.lang.Object)[1]"
    "$r5[0] = r4"
    "$r6 = staticinvoke <akka.actor.Props: akka.actor.Props create(java.lang.Class,java.lang.Object[])>(class \"Lch7/s4/WatchActor;\", $r5)"
    "virtualinvoke r1.<akka.actor.ActorSystem: akka.actor.ActorRef actorOf(akka.actor.Props,java.lang.String)>($r6, \"watcher\")"
    "$r8 = <ch7.s4.MyWorker$Msg: ch7.s4.MyWorker$Msg WORKING>"
    "$r9 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()"
    "virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r8, $r9)"
    "$r10 = <ch7.s4.MyWorker$Msg: ch7.s4.MyWorker$Msg DONE>"
    "$r11 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()"
    "virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r10, $r11)"
    "$r12 = staticinvoke <akka.actor.PoisonPill: akka.actor.PoisonPill$ getInstance()>()"
    "$r13 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()"
    "virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r12, $r13)"
    "return"
    "r14 := @parameter0: java.lang.String[]"->"$r0 = staticinvoke <com.typesafe.config.ConfigFactory: com.typesafe.config.Config load(java.lang.String)>(\"samplehello.conf\")";
    "$r0 = staticinvoke <com.typesafe.config.ConfigFactory: com.typesafe.config.Config load(java.lang.String)>(\"samplehello.conf\")"->"r1 = staticinvoke <akka.actor.ActorSystem: akka.actor.ActorSystem create(java.lang.String,com.typesafe.config.Config)>(\"deadwatch\", $r0)";
    "r1 = staticinvoke <akka.actor.ActorSystem: akka.actor.ActorSystem create(java.lang.String,com.typesafe.config.Config)>(\"deadwatch\", $r0)"->"$r2 = newarray (java.lang.Object)[0]";
    "$r2 = newarray (java.lang.Object)[0]"->"$r3 = staticinvoke <akka.actor.Props: akka.actor.Props create(java.lang.Class,java.lang.Object[])>(class \"Lch7/s4/MyWorker;\", $r2)";
    "$r3 = staticinvoke <akka.actor.Props: akka.actor.Props create(java.lang.Class,java.lang.Object[])>(class \"Lch7/s4/MyWorker;\", $r2)"->"r4 = virtualinvoke r1.<akka.actor.ActorSystem: akka.actor.ActorRef actorOf(akka.actor.Props,java.lang.String)>($r3, \"worker\")";
    "r4 = virtualinvoke r1.<akka.actor.ActorSystem: akka.actor.ActorRef actorOf(akka.actor.Props,java.lang.String)>($r3, \"worker\")"->"$r5 = newarray (java.lang.Object)[1]";
    "$r5 = newarray (java.lang.Object)[1]"->"$r5[0] = r4";
    "$r5[0] = r4"->"$r6 = staticinvoke <akka.actor.Props: akka.actor.Props create(java.lang.Class,java.lang.Object[])>(class \"Lch7/s4/WatchActor;\", $r5)";
    "$r6 = staticinvoke <akka.actor.Props: akka.actor.Props create(java.lang.Class,java.lang.Object[])>(class \"Lch7/s4/WatchActor;\", $r5)"->"virtualinvoke r1.<akka.actor.ActorSystem: akka.actor.ActorRef actorOf(akka.actor.Props,java.lang.String)>($r6, \"watcher\")";
    "virtualinvoke r1.<akka.actor.ActorSystem: akka.actor.ActorRef actorOf(akka.actor.Props,java.lang.String)>($r6, \"watcher\")"->"$r8 = <ch7.s4.MyWorker$Msg: ch7.s4.MyWorker$Msg WORKING>";
    "$r8 = <ch7.s4.MyWorker$Msg: ch7.s4.MyWorker$Msg WORKING>"->"$r9 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()";
    "$r9 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()"->"virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r8, $r9)";
    "virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r8, $r9)"->"$r10 = <ch7.s4.MyWorker$Msg: ch7.s4.MyWorker$Msg DONE>";
    "$r10 = <ch7.s4.MyWorker$Msg: ch7.s4.MyWorker$Msg DONE>"->"$r11 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()";
    "$r11 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()"->"virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r10, $r11)";
    "virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r10, $r11)"->"$r12 = staticinvoke <akka.actor.PoisonPill: akka.actor.PoisonPill$ getInstance()>()";
    "$r12 = staticinvoke <akka.actor.PoisonPill: akka.actor.PoisonPill$ getInstance()>()"->"$r13 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()";
    "$r13 = staticinvoke <akka.actor.ActorRef: akka.actor.ActorRef noSender()>()"->"virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r12, $r13)";
    "virtualinvoke r4.<akka.actor.ActorRef: void tell(java.lang.Object,akka.actor.ActorRef)>($r12, $r13)"->"return";
}
