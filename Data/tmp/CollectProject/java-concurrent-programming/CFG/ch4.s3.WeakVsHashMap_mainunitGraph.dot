digraph "unitGraph" {
    "r30 := @parameter0: java.lang.String[]"
    "$r0 = new java.lang.String"
    "specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"a\")"
    "r31 = $r0"
    "$r1 = new java.lang.String"
    "specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"b\")"
    "r32 = $r1"
    "$r2 = new java.util.WeakHashMap"
    "specialinvoke $r2.<java.util.WeakHashMap: void <init>()>()"
    "r3 = $r2"
    "$r4 = new java.util.HashMap"
    "specialinvoke $r4.<java.util.HashMap: void <init>()>()"
    "r5 = $r4"
    "interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, \"aaa\")"
    "interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, \"bbb\")"
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, \"aaa\")"
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, \"bbb\")"
    "interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r31)"
    "staticinvoke <java.lang.System: void gc()>()"
    "$r6 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()"
    "r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()"
    "$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"
    "r33 = (java.util.Map$Entry) $r20"
    "$r22 = <java.lang.System: java.io.PrintStream out>"
    "$r21 = new java.lang.StringBuilder"
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"
    "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"map:\")"
    "$r24 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24)"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")"
    "$r27 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getValue()>()"
    "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r29)"
    "goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"
    "$r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()"
    "r34 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto return"
    "$r9 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()"
    "r10 = (java.util.Map$Entry) $r9"
    "$r12 = <java.lang.System: java.io.PrintStream out>"
    "$r11 = new java.lang.StringBuilder"
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"weakmap:\")"
    "$r14 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>()"
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")"
    "$r17 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>()"
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r19)"
    "goto [?= $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]"
    "return"
    "r30 := @parameter0: java.lang.String[]"->"$r0 = new java.lang.String";
    "$r0 = new java.lang.String"->"specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"a\")";
    "specialinvoke $r0.<java.lang.String: void <init>(java.lang.String)>(\"a\")"->"r31 = $r0";
    "r31 = $r0"->"$r1 = new java.lang.String";
    "$r1 = new java.lang.String"->"specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"b\")";
    "specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"b\")"->"r32 = $r1";
    "r32 = $r1"->"$r2 = new java.util.WeakHashMap";
    "$r2 = new java.util.WeakHashMap"->"specialinvoke $r2.<java.util.WeakHashMap: void <init>()>()";
    "specialinvoke $r2.<java.util.WeakHashMap: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new java.util.HashMap";
    "$r4 = new java.util.HashMap"->"specialinvoke $r4.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r4.<java.util.HashMap: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, \"aaa\")";
    "interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, \"aaa\")"->"interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, \"bbb\")";
    "interfaceinvoke r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, \"bbb\")"->"interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, \"aaa\")";
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r31, \"aaa\")"->"interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, \"bbb\")";
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, \"bbb\")"->"interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r31)";
    "interfaceinvoke r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r31)"->"staticinvoke <java.lang.System: void gc()>()";
    "staticinvoke <java.lang.System: void gc()>()"->"$r6 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()";
    "$r6 = interfaceinvoke r5.<java.util.Map: java.util.Set entrySet()>()"->"r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()";
    "r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()";
    "if $z0 == 0 goto $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()"->"$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()"->"$r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()";
    "$r20 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"->"r33 = (java.util.Map$Entry) $r20";
    "r33 = (java.util.Map$Entry) $r20"->"$r22 = <java.lang.System: java.io.PrintStream out>";
    "$r22 = <java.lang.System: java.io.PrintStream out>"->"$r21 = new java.lang.StringBuilder";
    "$r21 = new java.lang.StringBuilder"->"specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()"->"$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"map:\")";
    "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"map:\")"->"$r24 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r24 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24)";
    "$r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24)"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")"->"$r27 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getValue()>()";
    "$r27 = interfaceinvoke r33.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27)";
    "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r29)";
    "virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r29)"->"goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "$r8 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()"->"r34 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()";
    "r34 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto return";
    "if $z1 == 0 goto return"->"$r9 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto return"->"return";
    "$r9 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>()"->"r10 = (java.util.Map$Entry) $r9";
    "r10 = (java.util.Map$Entry) $r9"->"$r12 = <java.lang.System: java.io.PrintStream out>";
    "$r12 = <java.lang.System: java.io.PrintStream out>"->"$r11 = new java.lang.StringBuilder";
    "$r11 = new java.lang.StringBuilder"->"specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()"->"$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"weakmap:\")";
    "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"weakmap:\")"->"$r14 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>()";
    "$r14 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>()"->"$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)";
    "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")"->"$r17 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>()";
    "$r17 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>()"->"$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)";
    "$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r19)";
    "virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r19)"->"goto [?= $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>()";
}
