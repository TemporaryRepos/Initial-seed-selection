digraph "unitGraph" {
    "r0 := @parameter0: java.lang.Integer"
    "staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"
    "goto [?= $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()]"
    "$r2 := @caughtexception"
    "r3 = $r2"
    "virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>()"
    "$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"
    "$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"
    "$i2 = $i0 * $i1"
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "return $r1"
    "r0 := @parameter0: java.lang.Integer"->"staticinvoke <java.lang.Thread: void sleep(long)>(1000L)";
    "r0 := @parameter0: java.lang.Integer"->"$r2 := @caughtexception";
    "staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"->"goto [?= $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()]";
    "staticinvoke <java.lang.Thread: void sleep(long)>(1000L)"->"$r2 := @caughtexception";
    "goto [?= $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()]"->"$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "$r2 := @caughtexception"->"r3 = $r2";
    "r3 = $r2"->"virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>()";
    "virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>()"->"$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>()";
    "$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>()"->"$i2 = $i0 * $i1";
    "$i2 = $i0 * $i1"->"$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"return $r1";
}
