digraph "unitGraph" {
    "r5 := @this: ch3.s1.ReenterLock"
    "i2 = 0"
    "if i2 >= 10000000 goto return"
    "$r0 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()"
    "$i0 = <ch3.s1.ReenterLock: int i>"
    "$i1 = $i0 + 1"
    "<ch3.s1.ReenterLock: int i> = $i1"
    "$r1 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"
    "goto [?= i2 = i2 + 1]"
    "$r2 := @caughtexception"
    "r3 = $r2"
    "$r4 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"
    "throw r3"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "return"
    "r5 := @this: ch3.s1.ReenterLock"->"i2 = 0";
    "i2 = 0"->"if i2 >= 10000000 goto return";
    "if i2 >= 10000000 goto return"->"$r0 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>";
    "if i2 >= 10000000 goto return"->"return";
    "$r0 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()";
    "virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()"->"$i0 = <ch3.s1.ReenterLock: int i>";
    "virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()"->"$r2 := @caughtexception";
    "$i0 = <ch3.s1.ReenterLock: int i>"->"$i1 = $i0 + 1";
    "$i0 = <ch3.s1.ReenterLock: int i>"->"$r2 := @caughtexception";
    "$i1 = $i0 + 1"->"<ch3.s1.ReenterLock: int i> = $i1";
    "$i1 = $i0 + 1"->"$r2 := @caughtexception";
    "<ch3.s1.ReenterLock: int i> = $i1"->"$r1 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>";
    "<ch3.s1.ReenterLock: int i> = $i1"->"$r2 := @caughtexception";
    "$r1 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>()";
    "virtualinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"->"goto [?= i2 = i2 + 1]";
    "goto [?= i2 = i2 + 1]"->"i2 = i2 + 1";
    "$r2 := @caughtexception"->"r3 = $r2";
    "r3 = $r2"->"$r4 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>";
    "$r4 = <ch3.s1.ReenterLock: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>()";
    "virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"->"throw r3";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 10000000 goto return";
}
