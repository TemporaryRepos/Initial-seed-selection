digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "r0 = newarray (java.lang.Thread)[10]"
    "i0 = 0"
    "if i0 >= 10 goto i1 = 0"
    "$r5 = new java.lang.Thread"
    "$r6 = new ch4.s4.AtomicIntegerDemo$AddThread"
    "specialinvoke $r6.<ch4.s4.AtomicIntegerDemo$AddThread: void <init>()>()"
    "specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6)"
    "r0[i0] = $r5"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "i1 = 0"
    "if i1 >= 10 goto i2 = 0"
    "$r4 = r0[i1]"
    "virtualinvoke $r4.<java.lang.Thread: void start()>()"
    "i1 = i1 + 1"
    "i2 = 0"
    "if i2 >= 10 goto $r2 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = r0[i2]"
    "virtualinvoke $r3.<java.lang.Thread: void join()>()"
    "i2 = i2 + 1"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = <ch4.s4.AtomicIntegerDemo: java.util.concurrent.atomic.AtomicInteger i>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>($r1)"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"r0 = newarray (java.lang.Thread)[10]";
    "r0 = newarray (java.lang.Thread)[10]"->"i0 = 0";
    "i0 = 0"->"if i0 >= 10 goto i1 = 0";
    "if i0 >= 10 goto i1 = 0"->"$r5 = new java.lang.Thread";
    "if i0 >= 10 goto i1 = 0"->"i1 = 0";
    "$r5 = new java.lang.Thread"->"$r6 = new ch4.s4.AtomicIntegerDemo$AddThread";
    "$r6 = new ch4.s4.AtomicIntegerDemo$AddThread"->"specialinvoke $r6.<ch4.s4.AtomicIntegerDemo$AddThread: void <init>()>()";
    "specialinvoke $r6.<ch4.s4.AtomicIntegerDemo$AddThread: void <init>()>()"->"specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6)";
    "specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>($r6)"->"r0[i0] = $r5";
    "r0[i0] = $r5"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 >= 10 goto i1 = 0";
    "i1 = 0"->"if i1 >= 10 goto i2 = 0";
    "if i1 >= 10 goto i2 = 0"->"$r4 = r0[i1]";
    "if i1 >= 10 goto i2 = 0"->"i2 = 0";
    "$r4 = r0[i1]"->"virtualinvoke $r4.<java.lang.Thread: void start()>()";
    "virtualinvoke $r4.<java.lang.Thread: void start()>()"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= 10 goto i2 = 0";
    "i2 = 0"->"if i2 >= 10 goto $r2 = <java.lang.System: java.io.PrintStream out>";
    "if i2 >= 10 goto $r2 = <java.lang.System: java.io.PrintStream out>"->"$r3 = r0[i2]";
    "if i2 >= 10 goto $r2 = <java.lang.System: java.io.PrintStream out>"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r3 = r0[i2]"->"virtualinvoke $r3.<java.lang.Thread: void join()>()";
    "virtualinvoke $r3.<java.lang.Thread: void join()>()"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 10 goto $r2 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r1 = <ch4.s4.AtomicIntegerDemo: java.util.concurrent.atomic.AtomicInteger i>";
    "$r1 = <ch4.s4.AtomicIntegerDemo: java.util.concurrent.atomic.AtomicInteger i>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>($r1)";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.Object)>($r1)"->"return";
}
