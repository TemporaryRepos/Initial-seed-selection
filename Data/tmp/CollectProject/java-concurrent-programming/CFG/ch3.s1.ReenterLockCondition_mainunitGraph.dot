digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "$r0 = new ch3.s1.ReenterLockCondition"
    "specialinvoke $r0.<ch3.s1.ReenterLockCondition: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.lang.Thread"
    "specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r1)"
    "r3 = $r2"
    "virtualinvoke r3.<java.lang.Thread: void start()>()"
    "staticinvoke <java.lang.Thread: void sleep(long)>(2000L)"
    "$r4 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>()"
    "$r5 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.Condition condition>"
    "interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>()"
    "$r6 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"$r0 = new ch3.s1.ReenterLockCondition";
    "$r0 = new ch3.s1.ReenterLockCondition"->"specialinvoke $r0.<ch3.s1.ReenterLockCondition: void <init>()>()";
    "specialinvoke $r0.<ch3.s1.ReenterLockCondition: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.lang.Thread";
    "$r2 = new java.lang.Thread"->"specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r1)";
    "specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>(r1)"->"r3 = $r2";
    "r3 = $r2"->"virtualinvoke r3.<java.lang.Thread: void start()>()";
    "virtualinvoke r3.<java.lang.Thread: void start()>()"->"staticinvoke <java.lang.Thread: void sleep(long)>(2000L)";
    "staticinvoke <java.lang.Thread: void sleep(long)>(2000L)"->"$r4 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>";
    "$r4 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>()";
    "virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>()"->"$r5 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.Condition condition>";
    "$r5 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.Condition condition>"->"interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>()";
    "interfaceinvoke $r5.<java.util.concurrent.locks.Condition: void signal()>()"->"$r6 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>";
    "$r6 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>()";
    "virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"->"return";
}
