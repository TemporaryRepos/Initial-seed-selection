digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r9 := @parameter0: java.lang.String[];
$r0 = newarray (int)[9];
$r0[0] = 1;
$r0[1] = 3;
$r0[2] = 4;
$r0[3] = 5;
$r0[4] = 6;
$r0[5] = 7;
$r0[6] = 8;
$r0[7] = 9;
$r0[8] = 10;
r1 = $r0;
i6 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r1;
if i6 >= $i0 goto $r2 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>(r1);
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = r1[i6];
$i2 = $i1 % 2;
if $i2 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$i4 = r1[i6];
$i5 = $i4 + 1;
r1[i6] = $i5;
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$i3 = r1[i6];
virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i3);
i6 = i6 + 1;
goto [?= $i0 = lengthof r1];
"
    "Block 5:
[preds: 1 ] [succs: ]
$r2 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>(r1);
$r3 = staticinvoke <ch6.s1.Example3$lambda_main_0__127: java.util.function.IntUnaryOperator bootstrap$()>();
$r4 = interfaceinvoke $r2.<java.util.stream.IntStream: java.util.stream.IntStream map(java.util.function.IntUnaryOperator)>($r3);
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
$r7 = staticinvoke <ch6.s1.Example3$println__128: java.util.function.IntConsumer bootstrap$(java.io.PrintStream)>($r5);
interfaceinvoke $r4.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r7);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r9 := @parameter0: java.lang.String[];
$r0 = newarray (int)[9];
$r0[0] = 1;
$r0[1] = 3;
$r0[2] = 4;
$r0[3] = 5;
$r0[4] = 6;
$r0[5] = 7;
$r0[6] = 8;
$r0[7] = 9;
$r0[8] = 10;
r1 = $r0;
i6 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r1;
if i6 >= $i0 goto $r2 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>(r1);
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r1;
if i6 >= $i0 goto $r2 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>(r1);
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = r1[i6];
$i2 = $i1 % 2;
if $i2 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r1;
if i6 >= $i0 goto $r2 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>(r1);
"->"Block 5:
[preds: 1 ] [succs: ]
$r2 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>(r1);
$r3 = staticinvoke <ch6.s1.Example3$lambda_main_0__127: java.util.function.IntUnaryOperator bootstrap$()>();
$r4 = interfaceinvoke $r2.<java.util.stream.IntStream: java.util.stream.IntStream map(java.util.function.IntUnaryOperator)>($r3);
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
$r7 = staticinvoke <ch6.s1.Example3$println__128: java.util.function.IntConsumer bootstrap$(java.io.PrintStream)>($r5);
interfaceinvoke $r4.<java.util.stream.IntStream: void forEach(java.util.function.IntConsumer)>($r7);
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = r1[i6];
$i2 = $i1 % 2;
if $i2 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$i4 = r1[i6];
$i5 = $i4 + 1;
r1[i6] = $i5;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$i1 = r1[i6];
$i2 = $i1 % 2;
if $i2 == 0 goto $r8 = <java.lang.System: java.io.PrintStream out>;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$i3 = r1[i6];
virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i3);
i6 = i6 + 1;
goto [?= $i0 = lengthof r1];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$i4 = r1[i6];
$i5 = $i4 + 1;
r1[i6] = $i5;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$i3 = r1[i6];
virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i3);
i6 = i6 + 1;
goto [?= $i0 = lengthof r1];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$i3 = r1[i6];
virtualinvoke $r8.<java.io.PrintStream: void println(int)>($i3);
i6 = i6 + 1;
goto [?= $i0 = lengthof r1];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i0 = lengthof r1;
if i6 >= $i0 goto $r2 = staticinvoke <java.util.Arrays: java.util.stream.IntStream stream(int[])>(r1);
";
}
