digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r15 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r9 = <ch6.s2.ConstrMethodRef: ch6.s2.ConstrMethodRef$UserFactory uf>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"billy\");
$r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
$r14 = interfaceinvoke $r9.<ch6.s2.ConstrMethodRef$UserFactory: ch6.s2.ConstrMethodRef$User create(int,java.lang.String)>(i0, $r13);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
$r3 = staticinvoke <ch6.s2.ConstrMethodRef$getName__129: java.util.function.Function bootstrap$()>();
$r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r3);
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
$r7 = staticinvoke <ch6.s2.ConstrMethodRef$println__130: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r5);
interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r7);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r15 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r9 = <ch6.s2.ConstrMethodRef: ch6.s2.ConstrMethodRef$UserFactory uf>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"billy\");
$r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
$r14 = interfaceinvoke $r9.<ch6.s2.ConstrMethodRef$UserFactory: ch6.s2.ConstrMethodRef$User create(int,java.lang.String)>(i0, $r13);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
"->"Block 3:
[preds: 1 ] [succs: ]
$r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
$r3 = staticinvoke <ch6.s2.ConstrMethodRef$getName__129: java.util.function.Function bootstrap$()>();
$r4 = interfaceinvoke $r2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>($r3);
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();
$r7 = staticinvoke <ch6.s2.ConstrMethodRef$println__130: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r5);
interfaceinvoke $r4.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>($r7);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r9 = <ch6.s2.ConstrMethodRef: ch6.s2.ConstrMethodRef$UserFactory uf>;
$r8 = new java.lang.StringBuilder;
specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();
$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"billy\");
$r11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);
$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();
$r14 = interfaceinvoke $r9.<ch6.s2.ConstrMethodRef$UserFactory: ch6.s2.ConstrMethodRef$User create(int,java.lang.String)>(i0, $r13);
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r14);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>();
";
}
