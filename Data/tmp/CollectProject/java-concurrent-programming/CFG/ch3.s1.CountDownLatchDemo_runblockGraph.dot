digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 12 ]
r5 := @this: ch3.s1.CountDownLatchDemo;
"
    "Block 1:
[preds: 0 ] [succs: 2 12 ]
$r0 = new java.util.Random;
"
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
specialinvoke $r0.<java.util.Random: void <init>()>();
"
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(10);
"
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$i1 = $i0 * 1000;
"
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$l2 = (long) $i1;
"
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
staticinvoke <java.lang.Thread: void sleep(long)>($l2);
"
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"check complete!\");
"
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r2 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();
"
    "Block 11:
[preds: 10 ] [succs: 13 ]
goto [?= return];
"
    "Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
"
    "Block 13:
[preds: 11 12 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 12 ]
r5 := @this: ch3.s1.CountDownLatchDemo;
"->"Block 1:
[preds: 0 ] [succs: 2 12 ]
$r0 = new java.util.Random;
";
    "Block 0:
[preds: ] [succs: 1 12 ]
r5 := @this: ch3.s1.CountDownLatchDemo;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 12 ]
$r0 = new java.util.Random;
"->"Block 2:
[preds: 1 ] [succs: 3 12 ]
specialinvoke $r0.<java.util.Random: void <init>()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 12 ]
$r0 = new java.util.Random;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
specialinvoke $r0.<java.util.Random: void <init>()>();
"->"Block 3:
[preds: 2 ] [succs: 4 12 ]
$i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(10);
";
    "Block 2:
[preds: 1 ] [succs: 3 12 ]
specialinvoke $r0.<java.util.Random: void <init>()>();
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(10);
"->"Block 4:
[preds: 3 ] [succs: 5 12 ]
$i1 = $i0 * 1000;
";
    "Block 3:
[preds: 2 ] [succs: 4 12 ]
$i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(10);
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$i1 = $i0 * 1000;
"->"Block 5:
[preds: 4 ] [succs: 6 12 ]
$l2 = (long) $i1;
";
    "Block 4:
[preds: 3 ] [succs: 5 12 ]
$i1 = $i0 * 1000;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$l2 = (long) $i1;
"->"Block 6:
[preds: 5 ] [succs: 7 12 ]
staticinvoke <java.lang.Thread: void sleep(long)>($l2);
";
    "Block 5:
[preds: 4 ] [succs: 6 12 ]
$l2 = (long) $i1;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
staticinvoke <java.lang.Thread: void sleep(long)>($l2);
"->"Block 7:
[preds: 6 ] [succs: 8 12 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 6:
[preds: 5 ] [succs: 7 12 ]
staticinvoke <java.lang.Thread: void sleep(long)>($l2);
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"check complete!\");
";
    "Block 7:
[preds: 6 ] [succs: 8 12 ]
$r1 = <java.lang.System: java.io.PrintStream out>;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"check complete!\");
"->"Block 9:
[preds: 8 ] [succs: 10 12 ]
$r2 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
";
    "Block 8:
[preds: 7 ] [succs: 9 12 ]
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"check complete!\");
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r2 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();
";
    "Block 9:
[preds: 8 ] [succs: 10 12 ]
$r2 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();
"->"Block 11:
[preds: 10 ] [succs: 13 ]
goto [?= return];
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
virtualinvoke $r2.<java.util.concurrent.CountDownLatch: void countDown()>();
"->"Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 11:
[preds: 10 ] [succs: 13 ]
goto [?= return];
"->"Block 13:
[preds: 11 12 ] [succs: ]
return;
";
    "Block 12:
[preds: 0 1 2 3 4 5 6 7 8 9 10 ] [succs: 13 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
"->"Block 13:
[preds: 11 12 ] [succs: ]
return;
";
}
