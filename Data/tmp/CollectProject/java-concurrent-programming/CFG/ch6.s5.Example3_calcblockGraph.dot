digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.Integer;
"
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()];
"
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>();
"
    "Block 4:
[preds: 2 3 ] [succs: ]
$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i2 = $i0 * $i1;
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
return $r1;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.Integer;
"->"Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.Integer;
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
"->"Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()];
";
    "Block 1:
[preds: 0 ] [succs: 2 3 ]
staticinvoke <java.lang.Thread: void sleep(long)>(1000L);
"->"Block 3:
[preds: 0 1 ] [succs: 4 ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>()];
"->"Block 4:
[preds: 2 3 ] [succs: ]
$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i2 = $i0 * $i1;
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
return $r1;
";
    "Block 3:
[preds: 0 1 ] [succs: 4 ]
$r2 := @caughtexception;
r3 = $r2;
virtualinvoke r3.<java.lang.InterruptedException: void printStackTrace()>();
"->"Block 4:
[preds: 2 3 ] [succs: ]
$i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i1 = virtualinvoke r0.<java.lang.Integer: int intValue()>();
$i2 = $i0 * $i1;
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
return $r1;
";
}
