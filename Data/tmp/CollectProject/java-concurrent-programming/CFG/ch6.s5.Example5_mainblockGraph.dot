digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r11 := @parameter0: java.lang.String[];
$r0 = staticinvoke <ch6.s5.Example5$lambda_main_0__143: java.util.function.Supplier bootstrap$()>();
$r1 = staticinvoke <java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture supplyAsync(java.util.function.Supplier)>($r0);
$r2 = staticinvoke <ch6.s5.Example5$lambda_main_2__144: java.util.function.Function bootstrap$()>();
$r3 = virtualinvoke $r1.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenCompose(java.util.function.Function)>($r2);
$r4 = staticinvoke <ch6.s5.Example5$lambda_main_3__145: java.util.function.Function bootstrap$()>();
$r5 = virtualinvoke $r3.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenApply(java.util.function.Function)>($r4);
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();
$r8 = staticinvoke <ch6.s5.Example5$println__146: java.util.function.Consumer bootstrap$(java.io.PrintStream)>($r6);
r9 = virtualinvoke $r5.<java.util.concurrent.CompletableFuture: java.util.concurrent.CompletableFuture thenAccept(java.util.function.Consumer)>($r8);
virtualinvoke r9.<java.util.concurrent.CompletableFuture: java.lang.Object get()>();
return;
"
}
