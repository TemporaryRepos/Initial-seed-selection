digraph "unitGraph" {
    "r10 := @this: ch3.s1.ReenterLockCondition"
    "$r0 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()"
    "$r1 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.Condition condition>"
    "interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void await()>()"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Thread is going on\")"
    "$r3 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"
    "goto [?= return]"
    "$r7 := @caughtexception"
    "r8 = $r7"
    "virtualinvoke r8.<java.lang.InterruptedException: void printStackTrace()>()"
    "$r9 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"
    "$r4 := @caughtexception"
    "r5 = $r4"
    "$r6 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"
    "virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"
    "throw r5"
    "return"
    "r10 := @this: ch3.s1.ReenterLockCondition"->"$r7 := @caughtexception";
    "r10 := @this: ch3.s1.ReenterLockCondition"->"$r4 := @caughtexception";
    "r10 := @this: ch3.s1.ReenterLockCondition"->"$r0 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>";
    "$r0 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"->"$r7 := @caughtexception";
    "$r0 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"->"$r4 := @caughtexception";
    "$r0 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()";
    "virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()"->"$r7 := @caughtexception";
    "virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()"->"$r4 := @caughtexception";
    "virtualinvoke $r0.<java.util.concurrent.locks.ReentrantLock: void lock()>()"->"$r1 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.Condition condition>";
    "$r1 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.Condition condition>"->"$r7 := @caughtexception";
    "$r1 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.Condition condition>"->"$r4 := @caughtexception";
    "$r1 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.Condition condition>"->"interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void await()>()";
    "interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void await()>()"->"$r7 := @caughtexception";
    "interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void await()>()"->"$r4 := @caughtexception";
    "interfaceinvoke $r1.<java.util.concurrent.locks.Condition: void await()>()"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r7 := @caughtexception";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r4 := @caughtexception";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Thread is going on\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Thread is going on\")"->"$r7 := @caughtexception";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Thread is going on\")"->"$r4 := @caughtexception";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Thread is going on\")"->"$r3 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>";
    "$r3 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>()";
    "virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r7 := @caughtexception"->"r8 = $r7";
    "$r7 := @caughtexception"->"$r4 := @caughtexception";
    "r8 = $r7"->"virtualinvoke r8.<java.lang.InterruptedException: void printStackTrace()>()";
    "r8 = $r7"->"$r4 := @caughtexception";
    "virtualinvoke r8.<java.lang.InterruptedException: void printStackTrace()>()"->"$r9 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>";
    "virtualinvoke r8.<java.lang.InterruptedException: void printStackTrace()>()"->"$r4 := @caughtexception";
    "$r9 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>()";
    "virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r4 := @caughtexception"->"r5 = $r4";
    "r5 = $r4"->"$r6 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>";
    "$r6 = <ch3.s1.ReenterLockCondition: java.util.concurrent.locks.ReentrantLock lock>"->"virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>()";
    "virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>()"->"throw r5";
}
