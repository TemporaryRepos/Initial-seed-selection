digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r5 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(10);
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r1 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = <ch3.s1.CountDownLatchDemo: ch3.s1.CountDownLatchDemo demo>;
interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r1 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void await()>();
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Fire!\");
interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r5 := @parameter0: java.lang.String[];
r0 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(10);
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r1 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r1 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = <ch3.s1.CountDownLatchDemo: ch3.s1.CountDownLatchDemo demo>;
interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r1 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
"->"Block 3:
[preds: 1 ] [succs: ]
$r1 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
virtualinvoke $r1.<java.util.concurrent.CountDownLatch: void await()>();
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"Fire!\");
interfaceinvoke r0.<java.util.concurrent.ExecutorService: void shutdown()>();
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = <ch3.s1.CountDownLatchDemo: ch3.s1.CountDownLatchDemo demo>;
interfaceinvoke r0.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r3);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto $r1 = <ch3.s1.CountDownLatchDemo: java.util.concurrent.CountDownLatch end>;
";
}
