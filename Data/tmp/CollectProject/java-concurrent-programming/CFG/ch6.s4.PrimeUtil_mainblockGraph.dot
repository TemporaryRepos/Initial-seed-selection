digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r9 := @parameter0: java.lang.String[];
$r0 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(1, 1000000);
$r1 = staticinvoke <ch6.s4.PrimeUtil$isPrime__136: java.util.function.IntPredicate bootstrap$()>();
$r2 = interfaceinvoke $r0.<java.util.stream.IntStream: java.util.stream.IntStream filter(java.util.function.IntPredicate)>($r1);
l0 = interfaceinvoke $r2.<java.util.stream.IntStream: long count()>();
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println(long)>(l0);
$r4 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(1, 1000000);
$r5 = interfaceinvoke $r4.<java.util.stream.IntStream: java.util.stream.IntStream parallel()>();
$r6 = staticinvoke <ch6.s4.PrimeUtil$isPrime__137: java.util.function.IntPredicate bootstrap$()>();
$r7 = interfaceinvoke $r5.<java.util.stream.IntStream: java.util.stream.IntStream filter(java.util.function.IntPredicate)>($r6);
l1 = interfaceinvoke $r7.<java.util.stream.IntStream: long count()>();
$r8 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r8.<java.io.PrintStream: void println(long)>(l1);
return;
"
}
