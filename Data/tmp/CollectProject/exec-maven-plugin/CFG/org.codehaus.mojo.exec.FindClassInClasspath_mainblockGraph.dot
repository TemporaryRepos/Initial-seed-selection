digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String[];
r1 = r0;
i0 = lengthof r1;
i1 = 0;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r3 = r1[i1];
$z0 = staticinvoke <org.codehaus.mojo.exec.FindClassInClasspath: boolean isClassInClasspath(java.lang.String)>(r3);
if $z0 != 0 goto i1 = i1 + 1;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ERROR: class + \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found in classpath\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);
staticinvoke <java.lang.System: void exit(int)>(1);
"
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 1 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"OK\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.lang.String[];
r1 = r0;
i0 = lengthof r1;
i1 = 0;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r3 = r1[i1];
$z0 = staticinvoke <org.codehaus.mojo.exec.FindClassInClasspath: boolean isClassInClasspath(java.lang.String)>(r3);
if $z0 != 0 goto i1 = i1 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 1 ] [succs: ]
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"OK\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r3 = r1[i1];
$z0 = staticinvoke <org.codehaus.mojo.exec.FindClassInClasspath: boolean isClassInClasspath(java.lang.String)>(r3);
if $z0 != 0 goto i1 = i1 + 1;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ERROR: class + \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found in classpath\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);
staticinvoke <java.lang.System: void exit(int)>(1);
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r3 = r1[i1];
$z0 = staticinvoke <org.codehaus.mojo.exec.FindClassInClasspath: boolean isClassInClasspath(java.lang.String)>(r3);
if $z0 != 0 goto i1 = i1 + 1;
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
$r5 = <java.lang.System: java.io.PrintStream out>;
$r4 = new java.lang.StringBuilder;
specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ERROR: class + \");
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found in classpath\");
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);
staticinvoke <java.lang.System: void exit(int)>(1);
"->"Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 3 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>;
";
}
