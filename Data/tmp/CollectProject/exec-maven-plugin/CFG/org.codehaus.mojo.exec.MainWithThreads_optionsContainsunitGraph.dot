digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "r3 := @parameter1: java.lang.String"
    "r1 = r0"
    "i0 = lengthof r1"
    "i1 = 0"
    "if i1 >= i0 goto return 0"
    "r2 = r1[i1]"
    "$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3)"
    "if $z0 == 0 goto i1 = i1 + 1"
    "return 1"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return 0"
    "r0 := @parameter0: java.lang.String[]"->"r3 := @parameter1: java.lang.String";
    "r3 := @parameter1: java.lang.String"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto return 0";
    "if i1 >= i0 goto return 0"->"r2 = r1[i1]";
    "if i1 >= i0 goto return 0"->"return 0";
    "r2 = r1[i1]"->"$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3)";
    "$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r3)"->"if $z0 == 0 goto i1 = i1 + 1";
    "if $z0 == 0 goto i1 = i1 + 1"->"return 1";
    "if $z0 == 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto return 0";
}
