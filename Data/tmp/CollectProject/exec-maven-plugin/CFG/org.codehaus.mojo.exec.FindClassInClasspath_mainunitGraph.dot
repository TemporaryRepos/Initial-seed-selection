digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "r1 = r0"
    "i0 = lengthof r1"
    "i1 = 0"
    "if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>"
    "r3 = r1[i1]"
    "$z0 = staticinvoke <org.codehaus.mojo.exec.FindClassInClasspath: boolean isClassInClasspath(java.lang.String)>(r3)"
    "if $z0 != 0 goto i1 = i1 + 1"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ERROR: class + \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found in classpath\")"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9)"
    "staticinvoke <java.lang.System: void exit(int)>(1)"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"OK\")"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>";
    "if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>"->"r3 = r1[i1]";
    "if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "r3 = r1[i1]"->"$z0 = staticinvoke <org.codehaus.mojo.exec.FindClassInClasspath: boolean isClassInClasspath(java.lang.String)>(r3)";
    "$z0 = staticinvoke <org.codehaus.mojo.exec.FindClassInClasspath: boolean isClassInClasspath(java.lang.String)>(r3)"->"if $z0 != 0 goto i1 = i1 + 1";
    "if $z0 != 0 goto i1 = i1 + 1"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "if $z0 != 0 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"$r4 = new java.lang.StringBuilder";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ERROR: class + \")";
    "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ERROR: class + \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found in classpath\")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found in classpath\")"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9)";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9)"->"staticinvoke <java.lang.System: void exit(int)>(1)";
    "staticinvoke <java.lang.System: void exit(int)>(1)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto $r2 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"OK\")";
    "virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(\"OK\")"->"return";
}
