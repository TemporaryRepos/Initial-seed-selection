digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.lang.String[];
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Hello\");
r1 = $r0;
r3 = r2;
i0 = lengthof r3;
i1 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
r6 = r3[i1];
$r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"line.separator\");
$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.lang.String[];
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Hello\");
r1 = $r0;
r3 = r2;
i0 = lengthof r3;
i1 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
r6 = r3[i1];
$r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"line.separator\");
$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: ]
$r4 = <java.lang.System: java.io.PrintStream out>;
$r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
r6 = r3[i1];
$r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(\"line.separator\");
$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i1 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
}
