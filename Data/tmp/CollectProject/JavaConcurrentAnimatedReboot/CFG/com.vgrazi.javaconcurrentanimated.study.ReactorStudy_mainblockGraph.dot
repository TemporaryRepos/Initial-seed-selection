digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 7 ]
r35 := @parameter0: java.lang.String[];
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Main thread:\");
$r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
r6 = staticinvoke <rx.schedulers.Schedulers: rx.Scheduler trampoline()>();
"
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"
    "Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10 goto (branch);
"
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
"
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 2 7 ]
goto [?= (branch)];
"
    "Block 6:
[preds: 2 ] [succs: 8 ]
goto [?= $r7 = newarray (java.lang.String)[7]];
"
    "Block 7:
[preds: 0 1 5 2 3 4 ] [succs: 8 ]
$r34 := @caughtexception;
r36 = $r34;
virtualinvoke r36.<java.lang.InterruptedException: void printStackTrace()>();
"
    "Block 8:
[preds: 6 7 ] [succs: ]
$r7 = newarray (java.lang.String)[7];
$r7[0] = \"this\";
$r7[1] = \"is\";
$r7[2] = \"a\";
$r7[3] = \"test\";
$r7[4] = \"one\";
$r7[5] = \"two\";
$r7[6] = \"three\";
$r8 = staticinvoke <rx.Observable: rx.Observable 'from'(java.lang.Object[])>($r7);
r37 = virtualinvoke $r8.<rx.Observable: rx.Observable subscribeOn(rx.Scheduler)>(r6);
$r9 = newarray (java.lang.String)[6];
$r9[0] = \"four\";
$r9[1] = \"score\";
$r9[2] = \"and\";
$r9[3] = \"seven\";
$r9[4] = \"years\";
$r9[5] = \"ago\";
$r10 = staticinvoke <rx.Observable: rx.Observable 'from'(java.lang.Object[])>($r9);
r11 = virtualinvoke $r10.<rx.Observable: rx.Observable subscribeOn(rx.Scheduler)>(r6);
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"1111111111111publish\");
r13 = virtualinvoke r37.<rx.Observable: rx.observables.ConnectableObservable publish()>();
r14 = virtualinvoke r11.<rx.Observable: rx.observables.ConnectableObservable publish()>();
$r15 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_0__290: rx.functions.Action1 bootstrap$()>();
virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Subscription subscribe(rx.functions.Action1)>($r15);
$r17 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_1__291: rx.functions.Action1 bootstrap$()>();
virtualinvoke r14.<rx.observables.ConnectableObservable: rx.Subscription subscribe(rx.functions.Action1)>($r17);
$r19 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_2__292: rx.functions.Func2 bootstrap$()>();
$r20 = virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Observable zipWith(rx.Observable,rx.functions.Func2)>(r14, $r19);
$r21 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_3__293: rx.functions.Action1 bootstrap$()>();
virtualinvoke $r20.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r21);
virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Subscription connect()>();
virtualinvoke r14.<rx.observables.ConnectableObservable: rx.Subscription connect()>();
$r25 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>(\"22222222222222222 non publish\");
$r26 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_4__294: rx.functions.Action1 bootstrap$()>();
virtualinvoke r37.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r26);
$r28 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_5__295: rx.functions.Action1 bootstrap$()>();
virtualinvoke r11.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r28);
$r30 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_6__296: rx.functions.Func2 bootstrap$()>();
$r31 = virtualinvoke r37.<rx.Observable: rx.Observable zipWith(rx.Observable,rx.functions.Func2)>(r11, $r30);
$r32 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_7__297: rx.functions.Action1 bootstrap$()>();
virtualinvoke $r31.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r32);
return;
"
    "Block 0:
[preds: ] [succs: 1 7 ]
r35 := @parameter0: java.lang.String[];
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Main thread:\");
$r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
r6 = staticinvoke <rx.schedulers.Schedulers: rx.Scheduler trampoline()>();
"->"Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
";
    "Block 0:
[preds: ] [succs: 1 7 ]
r35 := @parameter0: java.lang.String[];
$r1 = <java.lang.System: java.io.PrintStream out>;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Main thread:\");
$r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);
r6 = staticinvoke <rx.schedulers.Schedulers: rx.Scheduler trampoline()>();
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: 8 ]
$r34 := @caughtexception;
r36 = $r34;
virtualinvoke r36.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"->"Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10 goto (branch);
";
    "Block 1:
[preds: 0 ] [succs: 2 7 ]
i0 = 0;
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: 8 ]
$r34 := @caughtexception;
r36 = $r34;
virtualinvoke r36.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10 goto (branch);
"->"Block 3:
[preds: 2 ] [succs: 4 7 ]
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
";
    "Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10 goto (branch);
"->"Block 6:
[preds: 2 ] [succs: 8 ]
goto [?= $r7 = newarray (java.lang.String)[7]];
";
    "Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10 goto (branch);
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: 8 ]
$r34 := @caughtexception;
r36 = $r34;
virtualinvoke r36.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
"->"Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 7 ]
staticinvoke <java.lang.Thread: void sleep(long)>(100L);
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: 8 ]
$r34 := @caughtexception;
r36 = $r34;
virtualinvoke r36.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"->"Block 5:
[preds: 4 ] [succs: 2 7 ]
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 7 ]
i0 = i0 + 1;
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: 8 ]
$r34 := @caughtexception;
r36 = $r34;
virtualinvoke r36.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 5:
[preds: 4 ] [succs: 2 7 ]
goto [?= (branch)];
"->"Block 2:
[preds: 1 5 ] [succs: 3 6 7 ]
if i0 >= 10 goto (branch);
";
    "Block 5:
[preds: 4 ] [succs: 2 7 ]
goto [?= (branch)];
"->"Block 7:
[preds: 0 1 5 2 3 4 ] [succs: 8 ]
$r34 := @caughtexception;
r36 = $r34;
virtualinvoke r36.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 6:
[preds: 2 ] [succs: 8 ]
goto [?= $r7 = newarray (java.lang.String)[7]];
"->"Block 8:
[preds: 6 7 ] [succs: ]
$r7 = newarray (java.lang.String)[7];
$r7[0] = \"this\";
$r7[1] = \"is\";
$r7[2] = \"a\";
$r7[3] = \"test\";
$r7[4] = \"one\";
$r7[5] = \"two\";
$r7[6] = \"three\";
$r8 = staticinvoke <rx.Observable: rx.Observable 'from'(java.lang.Object[])>($r7);
r37 = virtualinvoke $r8.<rx.Observable: rx.Observable subscribeOn(rx.Scheduler)>(r6);
$r9 = newarray (java.lang.String)[6];
$r9[0] = \"four\";
$r9[1] = \"score\";
$r9[2] = \"and\";
$r9[3] = \"seven\";
$r9[4] = \"years\";
$r9[5] = \"ago\";
$r10 = staticinvoke <rx.Observable: rx.Observable 'from'(java.lang.Object[])>($r9);
r11 = virtualinvoke $r10.<rx.Observable: rx.Observable subscribeOn(rx.Scheduler)>(r6);
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"1111111111111publish\");
r13 = virtualinvoke r37.<rx.Observable: rx.observables.ConnectableObservable publish()>();
r14 = virtualinvoke r11.<rx.Observable: rx.observables.ConnectableObservable publish()>();
$r15 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_0__290: rx.functions.Action1 bootstrap$()>();
virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Subscription subscribe(rx.functions.Action1)>($r15);
$r17 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_1__291: rx.functions.Action1 bootstrap$()>();
virtualinvoke r14.<rx.observables.ConnectableObservable: rx.Subscription subscribe(rx.functions.Action1)>($r17);
$r19 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_2__292: rx.functions.Func2 bootstrap$()>();
$r20 = virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Observable zipWith(rx.Observable,rx.functions.Func2)>(r14, $r19);
$r21 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_3__293: rx.functions.Action1 bootstrap$()>();
virtualinvoke $r20.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r21);
virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Subscription connect()>();
virtualinvoke r14.<rx.observables.ConnectableObservable: rx.Subscription connect()>();
$r25 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>(\"22222222222222222 non publish\");
$r26 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_4__294: rx.functions.Action1 bootstrap$()>();
virtualinvoke r37.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r26);
$r28 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_5__295: rx.functions.Action1 bootstrap$()>();
virtualinvoke r11.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r28);
$r30 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_6__296: rx.functions.Func2 bootstrap$()>();
$r31 = virtualinvoke r37.<rx.Observable: rx.Observable zipWith(rx.Observable,rx.functions.Func2)>(r11, $r30);
$r32 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_7__297: rx.functions.Action1 bootstrap$()>();
virtualinvoke $r31.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r32);
return;
";
    "Block 7:
[preds: 0 1 5 2 3 4 ] [succs: 8 ]
$r34 := @caughtexception;
r36 = $r34;
virtualinvoke r36.<java.lang.InterruptedException: void printStackTrace()>();
"->"Block 8:
[preds: 6 7 ] [succs: ]
$r7 = newarray (java.lang.String)[7];
$r7[0] = \"this\";
$r7[1] = \"is\";
$r7[2] = \"a\";
$r7[3] = \"test\";
$r7[4] = \"one\";
$r7[5] = \"two\";
$r7[6] = \"three\";
$r8 = staticinvoke <rx.Observable: rx.Observable 'from'(java.lang.Object[])>($r7);
r37 = virtualinvoke $r8.<rx.Observable: rx.Observable subscribeOn(rx.Scheduler)>(r6);
$r9 = newarray (java.lang.String)[6];
$r9[0] = \"four\";
$r9[1] = \"score\";
$r9[2] = \"and\";
$r9[3] = \"seven\";
$r9[4] = \"years\";
$r9[5] = \"ago\";
$r10 = staticinvoke <rx.Observable: rx.Observable 'from'(java.lang.Object[])>($r9);
r11 = virtualinvoke $r10.<rx.Observable: rx.Observable subscribeOn(rx.Scheduler)>(r6);
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(\"1111111111111publish\");
r13 = virtualinvoke r37.<rx.Observable: rx.observables.ConnectableObservable publish()>();
r14 = virtualinvoke r11.<rx.Observable: rx.observables.ConnectableObservable publish()>();
$r15 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_0__290: rx.functions.Action1 bootstrap$()>();
virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Subscription subscribe(rx.functions.Action1)>($r15);
$r17 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_1__291: rx.functions.Action1 bootstrap$()>();
virtualinvoke r14.<rx.observables.ConnectableObservable: rx.Subscription subscribe(rx.functions.Action1)>($r17);
$r19 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_2__292: rx.functions.Func2 bootstrap$()>();
$r20 = virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Observable zipWith(rx.Observable,rx.functions.Func2)>(r14, $r19);
$r21 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_3__293: rx.functions.Action1 bootstrap$()>();
virtualinvoke $r20.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r21);
virtualinvoke r13.<rx.observables.ConnectableObservable: rx.Subscription connect()>();
virtualinvoke r14.<rx.observables.ConnectableObservable: rx.Subscription connect()>();
$r25 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>(\"22222222222222222 non publish\");
$r26 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_4__294: rx.functions.Action1 bootstrap$()>();
virtualinvoke r37.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r26);
$r28 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_5__295: rx.functions.Action1 bootstrap$()>();
virtualinvoke r11.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r28);
$r30 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_6__296: rx.functions.Func2 bootstrap$()>();
$r31 = virtualinvoke r37.<rx.Observable: rx.Observable zipWith(rx.Observable,rx.functions.Func2)>(r11, $r30);
$r32 = staticinvoke <com.vgrazi.javaconcurrentanimated.study.ReactorStudy$lambda_main_7__297: rx.functions.Action1 bootstrap$()>();
virtualinvoke $r31.<rx.Observable: rx.Subscription subscribe(rx.functions.Action1)>($r32);
return;
";
}
