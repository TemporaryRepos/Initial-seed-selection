digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: java.util.concurrent.CountDownLatch;
r2 := @parameter1: java.util.concurrent.atomic.AtomicBoolean;
"
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
virtualinvoke $r0.<java.lang.Thread: void interrupt()>();
"
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
virtualinvoke r1.<java.util.concurrent.CountDownLatch: void await()>();
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
virtualinvoke r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return];
"
    "Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
"
    "Block 7:
[preds: 5 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: java.util.concurrent.CountDownLatch;
r2 := @parameter1: java.util.concurrent.atomic.AtomicBoolean;
"->"Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
";
    "Block 0:
[preds: ] [succs: 1 6 ]
r1 := @parameter0: java.util.concurrent.CountDownLatch;
r2 := @parameter1: java.util.concurrent.atomic.AtomicBoolean;
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
"->"Block 2:
[preds: 1 ] [succs: 3 6 ]
virtualinvoke $r0.<java.lang.Thread: void interrupt()>();
";
    "Block 1:
[preds: 0 ] [succs: 2 6 ]
$r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
virtualinvoke $r0.<java.lang.Thread: void interrupt()>();
"->"Block 3:
[preds: 2 ] [succs: 4 6 ]
virtualinvoke r1.<java.util.concurrent.CountDownLatch: void await()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 6 ]
virtualinvoke $r0.<java.lang.Thread: void interrupt()>();
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
virtualinvoke r1.<java.util.concurrent.CountDownLatch: void await()>();
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
virtualinvoke r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);
";
    "Block 3:
[preds: 2 ] [succs: 4 6 ]
virtualinvoke r1.<java.util.concurrent.CountDownLatch: void await()>();
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
virtualinvoke r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);
"->"Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return];
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
virtualinvoke r2.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);
"->"Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
goto [?= return];
"->"Block 7:
[preds: 5 6 ] [succs: ]
return;
";
    "Block 6:
[preds: 0 1 2 3 4 ] [succs: 7 ]
$r3 := @caughtexception;
r4 = $r3;
virtualinvoke r4.<java.lang.InterruptedException: void printStackTrace()>();
"->"Block 7:
[preds: 5 6 ] [succs: ]
return;
";
}
