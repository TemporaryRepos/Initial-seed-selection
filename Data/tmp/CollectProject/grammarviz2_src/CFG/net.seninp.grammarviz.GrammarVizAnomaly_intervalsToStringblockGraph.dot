digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.List;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
r6 = (net.seninp.gi.logic.RuleInterval) $r5;
$r7 = virtualinvoke r6.<net.seninp.gi.logic.RuleInterval: java.lang.String toString()>();
$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\");
goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
return $r4;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.List;
$r0 = new java.lang.StringBuilder;
specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();
r1 = $r0;
r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
r6 = (net.seninp.gi.logic.RuleInterval) $r5;
$r7 = virtualinvoke r6.<net.seninp.gi.logic.RuleInterval: java.lang.String toString()>();
$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\");
goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
"->"Block 3:
[preds: 1 ] [succs: ]
$r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
return $r4;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();
r6 = (net.seninp.gi.logic.RuleInterval) $r5;
$r7 = virtualinvoke r6.<net.seninp.gi.logic.RuleInterval: java.lang.String toString()>();
$r8 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);
virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\");
goto [?= $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();
";
}
