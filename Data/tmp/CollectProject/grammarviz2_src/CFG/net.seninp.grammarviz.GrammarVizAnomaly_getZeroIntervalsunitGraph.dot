digraph "unitGraph" {
    "r2 := @parameter0: int[]"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "r1 = $r0"
    "i2 = -1"
    "z1 = 0"
    "i3 = -1"
    "i4 = 0"
    "$i0 = lengthof r2"
    "if i4 >= $i0 goto return r1"
    "$i1 = r2[i4]"
    "if 0 != $i1 goto $i5 = r2[i4]"
    "if z1 != 0 goto $i5 = r2[i4]"
    "i2 = i4"
    "z1 = 1"
    "$i5 = r2[i4]"
    "if $i5 <= 0 goto i4 = i4 + 1"
    "if z1 == 0 goto i4 = i4 + 1"
    "$r3 = new net.seninp.gi.logic.RuleInterval"
    "specialinvoke $r3.<net.seninp.gi.logic.RuleInterval: void <init>(int,int,int,double)>(i3, i2, i4, 0.0)"
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3)"
    "i3 = i3 + -1"
    "i4 = i4 + 1"
    "goto [?= $i0 = lengthof r2]"
    "return r1"
    "r2 := @parameter0: int[]"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"i2 = -1";
    "i2 = -1"->"z1 = 0";
    "z1 = 0"->"i3 = -1";
    "i3 = -1"->"i4 = 0";
    "i4 = 0"->"$i0 = lengthof r2";
    "$i0 = lengthof r2"->"if i4 >= $i0 goto return r1";
    "if i4 >= $i0 goto return r1"->"$i1 = r2[i4]";
    "if i4 >= $i0 goto return r1"->"return r1";
    "$i1 = r2[i4]"->"if 0 != $i1 goto $i5 = r2[i4]";
    "if 0 != $i1 goto $i5 = r2[i4]"->"if z1 != 0 goto $i5 = r2[i4]";
    "if 0 != $i1 goto $i5 = r2[i4]"->"$i5 = r2[i4]";
    "if z1 != 0 goto $i5 = r2[i4]"->"i2 = i4";
    "if z1 != 0 goto $i5 = r2[i4]"->"$i5 = r2[i4]";
    "i2 = i4"->"z1 = 1";
    "z1 = 1"->"$i5 = r2[i4]";
    "$i5 = r2[i4]"->"if $i5 <= 0 goto i4 = i4 + 1";
    "if $i5 <= 0 goto i4 = i4 + 1"->"if z1 == 0 goto i4 = i4 + 1";
    "if $i5 <= 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "if z1 == 0 goto i4 = i4 + 1"->"$r3 = new net.seninp.gi.logic.RuleInterval";
    "if z1 == 0 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "$r3 = new net.seninp.gi.logic.RuleInterval"->"specialinvoke $r3.<net.seninp.gi.logic.RuleInterval: void <init>(int,int,int,double)>(i3, i2, i4, 0.0)";
    "specialinvoke $r3.<net.seninp.gi.logic.RuleInterval: void <init>(int,int,int,double)>(i3, i2, i4, 0.0)"->"virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3)";
    "virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3)"->"z1 = 0";
    "z1 = 0"->"i3 = i3 + -1";
    "i3 = i3 + -1"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= $i0 = lengthof r2]";
    "goto [?= $i0 = lengthof r2]"->"$i0 = lengthof r2";
}
