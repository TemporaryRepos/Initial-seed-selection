digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: int[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
i2 = -1;
z1 = 0;
i3 = -1;
i4 = 0;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$i0 = lengthof r2;
if i4 >= $i0 goto return r1;
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$i1 = r2[i4];
if 0 != $i1 goto $i5 = r2[i4];
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if z1 != 0 goto $i5 = r2[i4];
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
i2 = i4;
z1 = 1;
"
    "Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
$i5 = r2[i4];
if $i5 <= 0 goto i4 = i4 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if z1 == 0 goto i4 = i4 + 1;
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
$r3 = new net.seninp.gi.logic.RuleInterval;
specialinvoke $r3.<net.seninp.gi.logic.RuleInterval: void <init>(int,int,int,double)>(i3, i2, i4, 0.0);
virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
z1 = 0;
i3 = i3 + -1;
"
    "Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r2];
"
    "Block 9:
[preds: 1 ] [succs: ]
return r1;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: int[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
r1 = $r0;
i2 = -1;
z1 = 0;
i3 = -1;
i4 = 0;
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$i0 = lengthof r2;
if i4 >= $i0 goto return r1;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$i0 = lengthof r2;
if i4 >= $i0 goto return r1;
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
$i1 = r2[i4];
if 0 != $i1 goto $i5 = r2[i4];
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$i0 = lengthof r2;
if i4 >= $i0 goto return r1;
"->"Block 9:
[preds: 1 ] [succs: ]
return r1;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$i1 = r2[i4];
if 0 != $i1 goto $i5 = r2[i4];
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
if z1 != 0 goto $i5 = r2[i4];
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
$i1 = r2[i4];
if 0 != $i1 goto $i5 = r2[i4];
"->"Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
$i5 = r2[i4];
if $i5 <= 0 goto i4 = i4 + 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if z1 != 0 goto $i5 = r2[i4];
"->"Block 4:
[preds: 3 ] [succs: 5 ]
i2 = i4;
z1 = 1;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
if z1 != 0 goto $i5 = r2[i4];
"->"Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
$i5 = r2[i4];
if $i5 <= 0 goto i4 = i4 + 1;
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
i2 = i4;
z1 = 1;
"->"Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
$i5 = r2[i4];
if $i5 <= 0 goto i4 = i4 + 1;
";
    "Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
$i5 = r2[i4];
if $i5 <= 0 goto i4 = i4 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
if z1 == 0 goto i4 = i4 + 1;
";
    "Block 5:
[preds: 2 3 4 ] [succs: 6 8 ]
$i5 = r2[i4];
if $i5 <= 0 goto i4 = i4 + 1;
"->"Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r2];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if z1 == 0 goto i4 = i4 + 1;
"->"Block 7:
[preds: 6 ] [succs: 8 ]
$r3 = new net.seninp.gi.logic.RuleInterval;
specialinvoke $r3.<net.seninp.gi.logic.RuleInterval: void <init>(int,int,int,double)>(i3, i2, i4, 0.0);
virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
z1 = 0;
i3 = i3 + -1;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
if z1 == 0 goto i4 = i4 + 1;
"->"Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r2];
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
$r3 = new net.seninp.gi.logic.RuleInterval;
specialinvoke $r3.<net.seninp.gi.logic.RuleInterval: void <init>(int,int,int,double)>(i3, i2, i4, 0.0);
virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r3);
z1 = 0;
i3 = i3 + -1;
"->"Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r2];
";
    "Block 8:
[preds: 5 6 7 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= $i0 = lengthof r2];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$i0 = lengthof r2;
if i4 >= $i0 goto return r1;
";
}
