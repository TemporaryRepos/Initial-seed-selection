digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
$i0 = <run.PrintOpcodeTable: int start>;
if $i0 >= 0 goto $i1 = <run.PrintOpcodeTable: int stop>;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
<run.PrintOpcodeTable: int start> = 0;
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$i1 = <run.PrintOpcodeTable: int stop>;
if $i1 <= 256 goto $i3 = <run.PrintOpcodeTable: int stop>;
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
<run.PrintOpcodeTable: int stop> = 256;
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i3 = <run.PrintOpcodeTable: int stop>;
$i2 = <run.PrintOpcodeTable: int start>;
i4 = $i3 - $i2;
b5 = 4;
i12 = i4 / b5;
i6 = i4 % b5;
if i6 == 0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
i12 = i12 + 1;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"| opcode | mnemonic symbol | opcode | mnemonic symbol | opcode | mnemonic symbol | opcode | mnemonic symbol |\");
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"|--------|-----------------|--------|-----------------|--------|-----------------|--------|-----------------|\");
i13 = 0;
"
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i13 >= i12 goto return;
"
    "Block 8:
[preds: 7 ] [succs: 7 ]
$i7 = <run.PrintOpcodeTable: int start>;
i8 = $i7 + i13;
i9 = i8 + i12;
i10 = i9 + i12;
i11 = i10 + i12;
$r2 = newarray (java.lang.Object)[8];
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
$r2[0] = $r3;
$r4 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i8);
$r2[1] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);
$r2[2] = $r5;
$r6 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i9);
$r2[3] = $r6;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
$r2[4] = $r7;
$r8 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i10);
$r2[5] = $r8;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);
$r2[6] = $r9;
$r10 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i11);
$r2[7] = $r10;
r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"| %-6d | %-15s | %-6d | %-15s | %-6d | %-15s | %-6d | %-15s |\", $r2);
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(r11);
i13 = i13 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 7 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
$i0 = <run.PrintOpcodeTable: int start>;
if $i0 >= 0 goto $i1 = <run.PrintOpcodeTable: int stop>;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
<run.PrintOpcodeTable: int start> = 0;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
$i0 = <run.PrintOpcodeTable: int start>;
if $i0 >= 0 goto $i1 = <run.PrintOpcodeTable: int stop>;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$i1 = <run.PrintOpcodeTable: int stop>;
if $i1 <= 256 goto $i3 = <run.PrintOpcodeTable: int stop>;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
<run.PrintOpcodeTable: int start> = 0;
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$i1 = <run.PrintOpcodeTable: int stop>;
if $i1 <= 256 goto $i3 = <run.PrintOpcodeTable: int stop>;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$i1 = <run.PrintOpcodeTable: int stop>;
if $i1 <= 256 goto $i3 = <run.PrintOpcodeTable: int stop>;
"->"Block 3:
[preds: 2 ] [succs: 4 ]
<run.PrintOpcodeTable: int stop> = 256;
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
$i1 = <run.PrintOpcodeTable: int stop>;
if $i1 <= 256 goto $i3 = <run.PrintOpcodeTable: int stop>;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i3 = <run.PrintOpcodeTable: int stop>;
$i2 = <run.PrintOpcodeTable: int start>;
i4 = $i3 - $i2;
b5 = 4;
i12 = i4 / b5;
i6 = i4 % b5;
if i6 == 0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
<run.PrintOpcodeTable: int stop> = 256;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i3 = <run.PrintOpcodeTable: int stop>;
$i2 = <run.PrintOpcodeTable: int start>;
i4 = $i3 - $i2;
b5 = 4;
i12 = i4 / b5;
i6 = i4 % b5;
if i6 == 0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i3 = <run.PrintOpcodeTable: int stop>;
$i2 = <run.PrintOpcodeTable: int start>;
i4 = $i3 - $i2;
b5 = 4;
i12 = i4 / b5;
i6 = i4 % b5;
if i6 == 0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
i12 = i12 + 1;
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$i3 = <run.PrintOpcodeTable: int stop>;
$i2 = <run.PrintOpcodeTable: int start>;
i4 = $i3 - $i2;
b5 = 4;
i12 = i4 / b5;
i6 = i4 % b5;
if i6 == 0 goto $r0 = <java.lang.System: java.io.PrintStream out>;
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"| opcode | mnemonic symbol | opcode | mnemonic symbol | opcode | mnemonic symbol | opcode | mnemonic symbol |\");
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"|--------|-----------------|--------|-----------------|--------|-----------------|--------|-----------------|\");
i13 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
i12 = i12 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 7 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"| opcode | mnemonic symbol | opcode | mnemonic symbol | opcode | mnemonic symbol | opcode | mnemonic symbol |\");
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"|--------|-----------------|--------|-----------------|--------|-----------------|--------|-----------------|\");
i13 = 0;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 ]
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"| opcode | mnemonic symbol | opcode | mnemonic symbol | opcode | mnemonic symbol | opcode | mnemonic symbol |\");
$r1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(\"|--------|-----------------|--------|-----------------|--------|-----------------|--------|-----------------|\");
i13 = 0;
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i13 >= i12 goto return;
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i13 >= i12 goto return;
"->"Block 8:
[preds: 7 ] [succs: 7 ]
$i7 = <run.PrintOpcodeTable: int start>;
i8 = $i7 + i13;
i9 = i8 + i12;
i10 = i9 + i12;
i11 = i10 + i12;
$r2 = newarray (java.lang.Object)[8];
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
$r2[0] = $r3;
$r4 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i8);
$r2[1] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);
$r2[2] = $r5;
$r6 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i9);
$r2[3] = $r6;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
$r2[4] = $r7;
$r8 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i10);
$r2[5] = $r8;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);
$r2[6] = $r9;
$r10 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i11);
$r2[7] = $r10;
r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"| %-6d | %-15s | %-6d | %-15s | %-6d | %-15s | %-6d | %-15s |\", $r2);
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(r11);
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i13 >= i12 goto return;
"->"Block 9:
[preds: 7 ] [succs: ]
return;
";
    "Block 8:
[preds: 7 ] [succs: 7 ]
$i7 = <run.PrintOpcodeTable: int start>;
i8 = $i7 + i13;
i9 = i8 + i12;
i10 = i9 + i12;
i11 = i10 + i12;
$r2 = newarray (java.lang.Object)[8];
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);
$r2[0] = $r3;
$r4 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i8);
$r2[1] = $r4;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);
$r2[2] = $r5;
$r6 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i9);
$r2[3] = $r6;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i10);
$r2[4] = $r7;
$r8 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i10);
$r2[5] = $r8;
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);
$r2[6] = $r9;
$r10 = staticinvoke <run.PrintOpcodeTable: java.lang.String getOpcodeName(int)>(i11);
$r2[7] = $r10;
r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"| %-6d | %-15s | %-6d | %-15s | %-6d | %-15s | %-6d | %-15s |\", $r2);
$r12 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>(r11);
i13 = i13 + 1;
goto [?= (branch)];
"->"Block 7:
[preds: 6 8 ] [succs: 8 9 ]
if i13 >= i12 goto return;
";
}
