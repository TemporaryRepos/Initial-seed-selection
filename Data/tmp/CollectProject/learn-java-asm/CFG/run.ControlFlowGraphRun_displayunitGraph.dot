digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String"
    "r3 := @parameter1: org.objectweb.asm.tree.MethodNode"
    "r0 := @parameter2: run.ControlFlowGraphType"
    "$r1 = <run.ControlFlowGraphRun$1: int[] $SwitchMap$run$ControlFlowGraphType>"
    "$i0 = virtualinvoke r0.<run.ControlFlowGraphType: int ordinal()>()"
    "$i1 = $r1[$i0]"
    "tableswitch($i1) {     case 1: goto $r12 = new lsieun.asm.analysis.InsnText;     case 2: goto $r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer;     case 3: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 4: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 5: goto $r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2;     case 6: goto $r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer;     default: goto $r18 = new java.lang.RuntimeException; }"
    "$r12 = new lsieun.asm.analysis.InsnText"
    "specialinvoke $r12.<lsieun.asm.analysis.InsnText: void <init>()>()"
    "r23 = $r12"
    "$r13 = r3.<org.objectweb.asm.tree.MethodNode: org.objectweb.asm.tree.InsnList instructions>"
    "$r14 = virtualinvoke $r13.<org.objectweb.asm.tree.InsnList: org.objectweb.asm.tree.AbstractInsnNode[] toArray()>()"
    "r15 = virtualinvoke r23.<lsieun.asm.analysis.InsnText: java.util.List toLines(org.objectweb.asm.tree.AbstractInsnNode[])>($r14)"
    "$r16 = new lsieun.asm.analysis.graph.InsnBlock"
    "specialinvoke $r16.<lsieun.asm.analysis.graph.InsnBlock: void <init>()>()"
    "r17 = $r16"
    "virtualinvoke r17.<lsieun.asm.analysis.graph.InsnBlock: void addLines(java.util.List)>(r15)"
    "r24 = newarray (lsieun.asm.analysis.graph.InsnBlock)[1]"
    "r24[0] = r17"
    "goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]"
    "$r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer"
    "$r10 = new org.objectweb.asm.tree.analysis.BasicInterpreter"
    "specialinvoke $r10.<org.objectweb.asm.tree.analysis.BasicInterpreter: void <init>()>()"
    "specialinvoke $r9.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: void <init>(org.objectweb.asm.tree.analysis.Interpreter)>($r10)"
    "r25 = $r9"
    "virtualinvoke r25.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: org.objectweb.asm.tree.analysis.Frame[] analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)"
    "r24 = virtualinvoke r25.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()"
    "$r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2"
    "$r7 = new org.objectweb.asm.tree.analysis.BasicInterpreter"
    "specialinvoke $r7.<org.objectweb.asm.tree.analysis.BasicInterpreter: void <init>()>()"
    "specialinvoke $r6.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer2: void <init>(org.objectweb.asm.tree.analysis.Interpreter)>($r7)"
    "r26 = $r6"
    "virtualinvoke r26.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: org.objectweb.asm.tree.analysis.Frame[] analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)"
    "r24 = virtualinvoke r26.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()"
    "$r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2"
    "specialinvoke $r4.<lsieun.asm.analysis.ControlFlowAnalyzer2: void <init>()>()"
    "r27 = $r4"
    "virtualinvoke r27.<lsieun.asm.analysis.ControlFlowAnalyzer2: void analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)"
    "r24 = virtualinvoke r27.<lsieun.asm.analysis.ControlFlowAnalyzer2: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()"
    "$r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer"
    "specialinvoke $r2.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: void <init>()>()"
    "r28 = $r2"
    "virtualinvoke r28.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: void analyze(org.objectweb.asm.tree.MethodNode)>(r3)"
    "r24 = virtualinvoke r28.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()"
    "$r18 = new java.lang.RuntimeException"
    "$r19 = new java.lang.StringBuilder"
    "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown type: \")"
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22)"
    "throw $r18"
    "$r29 = new lsieun.asm.analysis.graph.TextGraph"
    "specialinvoke $r29.<lsieun.asm.analysis.graph.TextGraph: void <init>(lsieun.asm.analysis.graph.InsnBlock[])>(r24)"
    "r30 = $r29"
    "virtualinvoke r30.<lsieun.asm.analysis.graph.TextGraph: void draw(int,int)>(0, 0)"
    "return"
    "r5 := @parameter0: java.lang.String"->"r3 := @parameter1: org.objectweb.asm.tree.MethodNode";
    "r3 := @parameter1: org.objectweb.asm.tree.MethodNode"->"r0 := @parameter2: run.ControlFlowGraphType";
    "r0 := @parameter2: run.ControlFlowGraphType"->"$r1 = <run.ControlFlowGraphRun$1: int[] $SwitchMap$run$ControlFlowGraphType>";
    "$r1 = <run.ControlFlowGraphRun$1: int[] $SwitchMap$run$ControlFlowGraphType>"->"$i0 = virtualinvoke r0.<run.ControlFlowGraphType: int ordinal()>()";
    "$i0 = virtualinvoke r0.<run.ControlFlowGraphType: int ordinal()>()"->"$i1 = $r1[$i0]";
    "$i1 = $r1[$i0]"->"tableswitch($i1) {     case 1: goto $r12 = new lsieun.asm.analysis.InsnText;     case 2: goto $r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer;     case 3: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 4: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 5: goto $r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2;     case 6: goto $r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer;     default: goto $r18 = new java.lang.RuntimeException; }";
    "tableswitch($i1) {     case 1: goto $r12 = new lsieun.asm.analysis.InsnText;     case 2: goto $r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer;     case 3: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 4: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 5: goto $r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2;     case 6: goto $r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer;     default: goto $r18 = new java.lang.RuntimeException; }"->"$r12 = new lsieun.asm.analysis.InsnText";
    "tableswitch($i1) {     case 1: goto $r12 = new lsieun.asm.analysis.InsnText;     case 2: goto $r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer;     case 3: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 4: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 5: goto $r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2;     case 6: goto $r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer;     default: goto $r18 = new java.lang.RuntimeException; }"->"$r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer";
    "tableswitch($i1) {     case 1: goto $r12 = new lsieun.asm.analysis.InsnText;     case 2: goto $r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer;     case 3: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 4: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 5: goto $r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2;     case 6: goto $r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer;     default: goto $r18 = new java.lang.RuntimeException; }"->"$r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2";
    "tableswitch($i1) {     case 1: goto $r12 = new lsieun.asm.analysis.InsnText;     case 2: goto $r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer;     case 3: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 4: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 5: goto $r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2;     case 6: goto $r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer;     default: goto $r18 = new java.lang.RuntimeException; }"->"$r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2";
    "tableswitch($i1) {     case 1: goto $r12 = new lsieun.asm.analysis.InsnText;     case 2: goto $r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer;     case 3: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 4: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 5: goto $r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2;     case 6: goto $r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer;     default: goto $r18 = new java.lang.RuntimeException; }"->"$r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer";
    "tableswitch($i1) {     case 1: goto $r12 = new lsieun.asm.analysis.InsnText;     case 2: goto $r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer;     case 3: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 4: goto $r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2;     case 5: goto $r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2;     case 6: goto $r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer;     default: goto $r18 = new java.lang.RuntimeException; }"->"$r18 = new java.lang.RuntimeException";
    "$r12 = new lsieun.asm.analysis.InsnText"->"specialinvoke $r12.<lsieun.asm.analysis.InsnText: void <init>()>()";
    "specialinvoke $r12.<lsieun.asm.analysis.InsnText: void <init>()>()"->"r23 = $r12";
    "r23 = $r12"->"$r13 = r3.<org.objectweb.asm.tree.MethodNode: org.objectweb.asm.tree.InsnList instructions>";
    "$r13 = r3.<org.objectweb.asm.tree.MethodNode: org.objectweb.asm.tree.InsnList instructions>"->"$r14 = virtualinvoke $r13.<org.objectweb.asm.tree.InsnList: org.objectweb.asm.tree.AbstractInsnNode[] toArray()>()";
    "$r14 = virtualinvoke $r13.<org.objectweb.asm.tree.InsnList: org.objectweb.asm.tree.AbstractInsnNode[] toArray()>()"->"r15 = virtualinvoke r23.<lsieun.asm.analysis.InsnText: java.util.List toLines(org.objectweb.asm.tree.AbstractInsnNode[])>($r14)";
    "r15 = virtualinvoke r23.<lsieun.asm.analysis.InsnText: java.util.List toLines(org.objectweb.asm.tree.AbstractInsnNode[])>($r14)"->"$r16 = new lsieun.asm.analysis.graph.InsnBlock";
    "$r16 = new lsieun.asm.analysis.graph.InsnBlock"->"specialinvoke $r16.<lsieun.asm.analysis.graph.InsnBlock: void <init>()>()";
    "specialinvoke $r16.<lsieun.asm.analysis.graph.InsnBlock: void <init>()>()"->"r17 = $r16";
    "r17 = $r16"->"virtualinvoke r17.<lsieun.asm.analysis.graph.InsnBlock: void addLines(java.util.List)>(r15)";
    "virtualinvoke r17.<lsieun.asm.analysis.graph.InsnBlock: void addLines(java.util.List)>(r15)"->"r24 = newarray (lsieun.asm.analysis.graph.InsnBlock)[1]";
    "r24 = newarray (lsieun.asm.analysis.graph.InsnBlock)[1]"->"r24[0] = r17";
    "r24[0] = r17"->"goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]";
    "goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]"->"$r29 = new lsieun.asm.analysis.graph.TextGraph";
    "$r9 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer"->"$r10 = new org.objectweb.asm.tree.analysis.BasicInterpreter";
    "$r10 = new org.objectweb.asm.tree.analysis.BasicInterpreter"->"specialinvoke $r10.<org.objectweb.asm.tree.analysis.BasicInterpreter: void <init>()>()";
    "specialinvoke $r10.<org.objectweb.asm.tree.analysis.BasicInterpreter: void <init>()>()"->"specialinvoke $r9.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: void <init>(org.objectweb.asm.tree.analysis.Interpreter)>($r10)";
    "specialinvoke $r9.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: void <init>(org.objectweb.asm.tree.analysis.Interpreter)>($r10)"->"r25 = $r9";
    "r25 = $r9"->"virtualinvoke r25.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: org.objectweb.asm.tree.analysis.Frame[] analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)";
    "virtualinvoke r25.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: org.objectweb.asm.tree.analysis.Frame[] analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)"->"r24 = virtualinvoke r25.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()";
    "r24 = virtualinvoke r25.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()"->"goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]";
    "goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]"->"$r29 = new lsieun.asm.analysis.graph.TextGraph";
    "$r6 = new lsieun.asm.analysis.ControlFlowEdgeAnalyzer2"->"$r7 = new org.objectweb.asm.tree.analysis.BasicInterpreter";
    "$r7 = new org.objectweb.asm.tree.analysis.BasicInterpreter"->"specialinvoke $r7.<org.objectweb.asm.tree.analysis.BasicInterpreter: void <init>()>()";
    "specialinvoke $r7.<org.objectweb.asm.tree.analysis.BasicInterpreter: void <init>()>()"->"specialinvoke $r6.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer2: void <init>(org.objectweb.asm.tree.analysis.Interpreter)>($r7)";
    "specialinvoke $r6.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer2: void <init>(org.objectweb.asm.tree.analysis.Interpreter)>($r7)"->"r26 = $r6";
    "r26 = $r6"->"virtualinvoke r26.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: org.objectweb.asm.tree.analysis.Frame[] analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)";
    "virtualinvoke r26.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: org.objectweb.asm.tree.analysis.Frame[] analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)"->"r24 = virtualinvoke r26.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()";
    "r24 = virtualinvoke r26.<lsieun.asm.analysis.ControlFlowEdgeAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()"->"goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]";
    "goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]"->"$r29 = new lsieun.asm.analysis.graph.TextGraph";
    "$r4 = new lsieun.asm.analysis.ControlFlowAnalyzer2"->"specialinvoke $r4.<lsieun.asm.analysis.ControlFlowAnalyzer2: void <init>()>()";
    "specialinvoke $r4.<lsieun.asm.analysis.ControlFlowAnalyzer2: void <init>()>()"->"r27 = $r4";
    "r27 = $r4"->"virtualinvoke r27.<lsieun.asm.analysis.ControlFlowAnalyzer2: void analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)";
    "virtualinvoke r27.<lsieun.asm.analysis.ControlFlowAnalyzer2: void analyze(java.lang.String,org.objectweb.asm.tree.MethodNode)>(r5, r3)"->"r24 = virtualinvoke r27.<lsieun.asm.analysis.ControlFlowAnalyzer2: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()";
    "r24 = virtualinvoke r27.<lsieun.asm.analysis.ControlFlowAnalyzer2: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()"->"goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]";
    "goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]"->"$r29 = new lsieun.asm.analysis.graph.TextGraph";
    "$r2 = new lsieun.asm.analysis.ControlFlowGraphAnalyzer"->"specialinvoke $r2.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: void <init>()>()";
    "specialinvoke $r2.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: void <init>()>()"->"r28 = $r2";
    "r28 = $r2"->"virtualinvoke r28.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: void analyze(org.objectweb.asm.tree.MethodNode)>(r3)";
    "virtualinvoke r28.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: void analyze(org.objectweb.asm.tree.MethodNode)>(r3)"->"r24 = virtualinvoke r28.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()";
    "r24 = virtualinvoke r28.<lsieun.asm.analysis.ControlFlowGraphAnalyzer: lsieun.asm.analysis.graph.InsnBlock[] getBlocks()>()"->"goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]";
    "goto [?= $r29 = new lsieun.asm.analysis.graph.TextGraph]"->"$r29 = new lsieun.asm.analysis.graph.TextGraph";
    "$r18 = new java.lang.RuntimeException"->"$r19 = new java.lang.StringBuilder";
    "$r19 = new java.lang.StringBuilder"->"specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown type: \")";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"unknown type: \")"->"$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)";
    "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"->"$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22)";
    "specialinvoke $r18.<java.lang.RuntimeException: void <init>(java.lang.String)>($r22)"->"throw $r18";
    "$r29 = new lsieun.asm.analysis.graph.TextGraph"->"specialinvoke $r29.<lsieun.asm.analysis.graph.TextGraph: void <init>(lsieun.asm.analysis.graph.InsnBlock[])>(r24)";
    "specialinvoke $r29.<lsieun.asm.analysis.graph.TextGraph: void <init>(lsieun.asm.analysis.graph.InsnBlock[])>(r24)"->"r30 = $r29";
    "r30 = $r29"->"virtualinvoke r30.<lsieun.asm.analysis.graph.TextGraph: void draw(int,int)>(0, 0)";
    "virtualinvoke r30.<lsieun.asm.analysis.graph.TextGraph: void draw(int,int)>(0, 0)"->"return";
}
