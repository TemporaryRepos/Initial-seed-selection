digraph "unitGraph" {
    "r0 := @parameter0: double[][]"
    "$i0 = lengthof r0"
    "if $i0 != 2 goto return r0"
    "$r1 = r0[0]"
    "$i1 = lengthof $r1"
    "if $i1 == 2 goto return r0"
    "$r2 = newarray (double[])[2]"
    "$r3 = r0[0]"
    "$r2[0] = $r3"
    "$r4 = r0[1]"
    "$r2[1] = $r4"
    "$r5 = staticinvoke <org.math.plot.utils.Array: double[][] mergeColumns(double[][])>($r2)"
    "return $r5"
    "return r0"
    "r0 := @parameter0: double[][]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 != 2 goto return r0";
    "if $i0 != 2 goto return r0"->"$r1 = r0[0]";
    "if $i0 != 2 goto return r0"->"return r0";
    "$r1 = r0[0]"->"$i1 = lengthof $r1";
    "$i1 = lengthof $r1"->"if $i1 == 2 goto return r0";
    "if $i1 == 2 goto return r0"->"$r2 = newarray (double[])[2]";
    "if $i1 == 2 goto return r0"->"return r0";
    "$r2 = newarray (double[])[2]"->"$r3 = r0[0]";
    "$r3 = r0[0]"->"$r2[0] = $r3";
    "$r2[0] = $r3"->"$r4 = r0[1]";
    "$r4 = r0[1]"->"$r2[1] = $r4";
    "$r2[1] = $r4"->"$r5 = staticinvoke <org.math.plot.utils.Array: double[][] mergeColumns(double[][])>($r2)";
    "$r5 = staticinvoke <org.math.plot.utils.Array: double[][] mergeColumns(double[][])>($r2)"->"return $r5";
}
