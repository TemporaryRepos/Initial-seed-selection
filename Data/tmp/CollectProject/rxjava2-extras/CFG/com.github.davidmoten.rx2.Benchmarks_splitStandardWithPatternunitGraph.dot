digraph "unitGraph" {
    "r6 := @this: com.github.davidmoten.rx2.Benchmarks"
    "$r0 = <com.github.davidmoten.rx2.Benchmarks: io.reactivex.Flowable source>"
    "$r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"\n\")"
    "$r2 = staticinvoke <com.github.davidmoten.rx2.Strings: io.reactivex.FlowableTransformer split(java.util.regex.Pattern)>($r1)"
    "$r3 = virtualinvoke $r0.<io.reactivex.Flowable: io.reactivex.Flowable compose(io.reactivex.FlowableTransformer)>($r2)"
    "$r4 = virtualinvoke $r3.<io.reactivex.Flowable: java.lang.Object blockingLast()>()"
    "$r5 = (java.lang.String) $r4"
    "return $r5"
    "r6 := @this: com.github.davidmoten.rx2.Benchmarks"->"$r0 = <com.github.davidmoten.rx2.Benchmarks: io.reactivex.Flowable source>";
    "$r0 = <com.github.davidmoten.rx2.Benchmarks: io.reactivex.Flowable source>"->"$r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"\n\")";
    "$r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(\"\n\")"->"$r2 = staticinvoke <com.github.davidmoten.rx2.Strings: io.reactivex.FlowableTransformer split(java.util.regex.Pattern)>($r1)";
    "$r2 = staticinvoke <com.github.davidmoten.rx2.Strings: io.reactivex.FlowableTransformer split(java.util.regex.Pattern)>($r1)"->"$r3 = virtualinvoke $r0.<io.reactivex.Flowable: io.reactivex.Flowable compose(io.reactivex.FlowableTransformer)>($r2)";
    "$r3 = virtualinvoke $r0.<io.reactivex.Flowable: io.reactivex.Flowable compose(io.reactivex.FlowableTransformer)>($r2)"->"$r4 = virtualinvoke $r3.<io.reactivex.Flowable: java.lang.Object blockingLast()>()";
    "$r4 = virtualinvoke $r3.<io.reactivex.Flowable: java.lang.Object blockingLast()>()"->"$r5 = (java.lang.String) $r4";
    "$r5 = (java.lang.String) $r4"->"return $r5";
}
