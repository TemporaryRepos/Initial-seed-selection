digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.lang.String)[13]"
    "$r0[0] = \"Adam\""
    "$r0[1] = \"Bob\""
    "$r0[2] = \"Carol\""
    "$r0[3] = \"Dave\""
    "$r0[4] = \"Eve\""
    "$r0[5] = \"Francis\""
    "$r0[6] = \"Gregg\""
    "$r0[7] = \"Helen\""
    "$r0[8] = \"Ann\""
    "$r0[9] = \"Chris\""
    "$r0[10] = \"David\""
    "$r0[11] = \"Daniel\""
    "$r0[12] = \"George\""
    "r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)"
    "$r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>()"
    "$r3 = staticinvoke <com.almasb.functional.Main$lambda_main_0__77: java.util.function.Function bootstrap$()>()"
    "$r4 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function)>($r3)"
    "$r5 = interfaceinvoke $r2.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r4)"
    "r6 = (java.util.Map) $r5"
    "$r7 = staticinvoke <com.almasb.functional.Main$lambda_main_1__78: java.util.function.BiConsumer bootstrap$()>()"
    "interfaceinvoke r6.<java.util.Map: void forEach(java.util.function.BiConsumer)>($r7)"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.lang.String)[13]";
    "$r0 = newarray (java.lang.String)[13]"->"$r0[0] = \"Adam\"";
    "$r0[0] = \"Adam\""->"$r0[1] = \"Bob\"";
    "$r0[1] = \"Bob\""->"$r0[2] = \"Carol\"";
    "$r0[2] = \"Carol\""->"$r0[3] = \"Dave\"";
    "$r0[3] = \"Dave\""->"$r0[4] = \"Eve\"";
    "$r0[4] = \"Eve\""->"$r0[5] = \"Francis\"";
    "$r0[5] = \"Francis\""->"$r0[6] = \"Gregg\"";
    "$r0[6] = \"Gregg\""->"$r0[7] = \"Helen\"";
    "$r0[7] = \"Helen\""->"$r0[8] = \"Ann\"";
    "$r0[8] = \"Ann\""->"$r0[9] = \"Chris\"";
    "$r0[9] = \"Chris\""->"$r0[10] = \"David\"";
    "$r0[10] = \"David\""->"$r0[11] = \"Daniel\"";
    "$r0[11] = \"Daniel\""->"$r0[12] = \"George\"";
    "$r0[12] = \"George\""->"r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)";
    "r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0)"->"$r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>()";
    "$r2 = interfaceinvoke r1.<java.util.List: java.util.stream.Stream stream()>()"->"$r3 = staticinvoke <com.almasb.functional.Main$lambda_main_0__77: java.util.function.Function bootstrap$()>()";
    "$r3 = staticinvoke <com.almasb.functional.Main$lambda_main_0__77: java.util.function.Function bootstrap$()>()"->"$r4 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function)>($r3)";
    "$r4 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector groupingBy(java.util.function.Function)>($r3)"->"$r5 = interfaceinvoke $r2.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r4)";
    "$r5 = interfaceinvoke $r2.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r4)"->"r6 = (java.util.Map) $r5";
    "r6 = (java.util.Map) $r5"->"$r7 = staticinvoke <com.almasb.functional.Main$lambda_main_1__78: java.util.function.BiConsumer bootstrap$()>()";
    "$r7 = staticinvoke <com.almasb.functional.Main$lambda_main_1__78: java.util.function.BiConsumer bootstrap$()>()"->"interfaceinvoke r6.<java.util.Map: void forEach(java.util.function.BiConsumer)>($r7)";
    "interfaceinvoke r6.<java.util.Map: void forEach(java.util.function.BiConsumer)>($r7)"->"return";
}
