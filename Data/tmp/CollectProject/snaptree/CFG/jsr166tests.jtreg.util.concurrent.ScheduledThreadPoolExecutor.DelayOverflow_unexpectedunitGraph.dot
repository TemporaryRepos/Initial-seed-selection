digraph "unitGraph" {
    "r0 := @this: jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow"
    "r1 := @parameter0: java.lang.Throwable"
    "$i0 = r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: int failed>"
    "$i1 = $i0 + 1"
    "r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: int failed> = $i1"
    "virtualinvoke r1.<java.lang.Throwable: void printStackTrace()>()"
    "return"
    "r0 := @this: jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow"->"r1 := @parameter0: java.lang.Throwable";
    "r1 := @parameter0: java.lang.Throwable"->"$i0 = r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: int failed>";
    "$i0 = r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: int failed>"->"$i1 = $i0 + 1";
    "$i1 = $i0 + 1"->"r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: int failed> = $i1";
    "r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: int failed> = $i1"->"virtualinvoke r1.<java.lang.Throwable: void printStackTrace()>()";
    "virtualinvoke r1.<java.lang.Throwable: void printStackTrace()>()"->"return";
}
