digraph "unitGraph" {
    "i1 := @parameter0: int"
    "i0 := @parameter1: int"
    "$i2 = i0 - i1"
    "r0 = newarray (java.lang.Integer)[$i2]"
    "i3 = i1"
    "i4 = 0"
    "if i3 >= i0 goto return r0"
    "$r1 = new java.lang.Integer"
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i3)"
    "r0[i4] = $r1"
    "i3 = i3 + 1"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "return r0"
    "i1 := @parameter0: int"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"$i2 = i0 - i1";
    "$i2 = i0 - i1"->"r0 = newarray (java.lang.Integer)[$i2]";
    "r0 = newarray (java.lang.Integer)[$i2]"->"i3 = i1";
    "i3 = i1"->"i4 = 0";
    "i4 = 0"->"if i3 >= i0 goto return r0";
    "if i3 >= i0 goto return r0"->"$r1 = new java.lang.Integer";
    "if i3 >= i0 goto return r0"->"return r0";
    "$r1 = new java.lang.Integer"->"specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i3)";
    "specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i3)"->"r0[i4] = $r1";
    "r0[i4] = $r1"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= i0 goto return r0";
}
