digraph "unitGraph" {
    "r18 := @this: jsr166tests.jtreg.util.Collections.CheckedIdentityMap"
    "r22 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.IdentityHashMap"
    "specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>()"
    "r1 = staticinvoke <java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)>($r0, class \"Ljava/lang/Integer;\", class \"Ljava/lang/Integer;\")"
    "$r2 = new java.util.IdentityHashMap"
    "specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>()"
    "r3 = staticinvoke <java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)>($r2, class \"Ljava/lang/Integer;\", class \"Ljava/lang/Integer;\")"
    "$r4 = new java.lang.Integer"
    "specialinvoke $r4.<java.lang.Integer: void <init>(int)>(1)"
    "$r5 = new java.lang.Integer"
    "specialinvoke $r5.<java.lang.Integer: void <init>(int)>(1)"
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)"
    "$r7 = new java.lang.Integer"
    "specialinvoke $r7.<java.lang.Integer: void <init>(int)>(1)"
    "$r8 = new java.lang.Integer"
    "specialinvoke $r8.<java.lang.Integer: void <init>(int)>(1)"
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)"
    "$r10 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"
    "$r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()"
    "$r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>()"
    "r13 = (java.util.Map$Entry) $r12"
    "$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()"
    "$r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()"
    "$r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>()"
    "r17 = (java.util.Map$Entry) $r16"
    "$z0 = interfaceinvoke r13.<java.util.Map$Entry: boolean equals(java.lang.Object)>(r17)"
    "if $z0 != 0 goto $z1 = 0"
    "$z1 = 1"
    "goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z1)]"
    "$z1 = 0"
    "virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z1)"
    "$i0 = interfaceinvoke r13.<java.util.Map$Entry: int hashCode()>()"
    "$i1 = virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: int hashCode(java.util.Map$Entry)>(r13)"
    "if $i0 != $i1 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z2)]"
    "$z2 = 0"
    "virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z2)"
    "$i2 = interfaceinvoke r17.<java.util.Map$Entry: int hashCode()>()"
    "$i3 = virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: int hashCode(java.util.Map$Entry)>(r17)"
    "if $i2 != $i3 goto $z3 = 0"
    "$z3 = 1"
    "goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z3)]"
    "$z3 = 0"
    "virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z3)"
    "return"
    "r18 := @this: jsr166tests.jtreg.util.Collections.CheckedIdentityMap"->"r22 := @parameter0: java.lang.String[]";
    "r22 := @parameter0: java.lang.String[]"->"$r0 = new java.util.IdentityHashMap";
    "$r0 = new java.util.IdentityHashMap"->"specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>()";
    "specialinvoke $r0.<java.util.IdentityHashMap: void <init>()>()"->"r1 = staticinvoke <java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)>($r0, class \"Ljava/lang/Integer;\", class \"Ljava/lang/Integer;\")";
    "r1 = staticinvoke <java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)>($r0, class \"Ljava/lang/Integer;\", class \"Ljava/lang/Integer;\")"->"$r2 = new java.util.IdentityHashMap";
    "$r2 = new java.util.IdentityHashMap"->"specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>()";
    "specialinvoke $r2.<java.util.IdentityHashMap: void <init>()>()"->"r3 = staticinvoke <java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)>($r2, class \"Ljava/lang/Integer;\", class \"Ljava/lang/Integer;\")";
    "r3 = staticinvoke <java.util.Collections: java.util.Map checkedMap(java.util.Map,java.lang.Class,java.lang.Class)>($r2, class \"Ljava/lang/Integer;\", class \"Ljava/lang/Integer;\")"->"$r4 = new java.lang.Integer";
    "$r4 = new java.lang.Integer"->"specialinvoke $r4.<java.lang.Integer: void <init>(int)>(1)";
    "specialinvoke $r4.<java.lang.Integer: void <init>(int)>(1)"->"$r5 = new java.lang.Integer";
    "$r5 = new java.lang.Integer"->"specialinvoke $r5.<java.lang.Integer: void <init>(int)>(1)";
    "specialinvoke $r5.<java.lang.Integer: void <init>(int)>(1)"->"interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)";
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)"->"$r7 = new java.lang.Integer";
    "$r7 = new java.lang.Integer"->"specialinvoke $r7.<java.lang.Integer: void <init>(int)>(1)";
    "specialinvoke $r7.<java.lang.Integer: void <init>(int)>(1)"->"$r8 = new java.lang.Integer";
    "$r8 = new java.lang.Integer"->"specialinvoke $r8.<java.lang.Integer: void <init>(int)>(1)";
    "specialinvoke $r8.<java.lang.Integer: void <init>(int)>(1)"->"interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)";
    "interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r8)"->"$r10 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()";
    "$r10 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"->"$r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()";
    "$r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()"->"$r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>()";
    "$r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>()"->"r13 = (java.util.Map$Entry) $r12";
    "r13 = (java.util.Map$Entry) $r12"->"$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()";
    "$r14 = interfaceinvoke r3.<java.util.Map: java.util.Set entrySet()>()"->"$r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()";
    "$r15 = interfaceinvoke $r14.<java.util.Set: java.util.Iterator iterator()>()"->"$r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>()";
    "$r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>()"->"r17 = (java.util.Map$Entry) $r16";
    "r17 = (java.util.Map$Entry) $r16"->"$z0 = interfaceinvoke r13.<java.util.Map$Entry: boolean equals(java.lang.Object)>(r17)";
    "$z0 = interfaceinvoke r13.<java.util.Map$Entry: boolean equals(java.lang.Object)>(r17)"->"if $z0 != 0 goto $z1 = 0";
    "if $z0 != 0 goto $z1 = 0"->"$z1 = 1";
    "if $z0 != 0 goto $z1 = 0"->"$z1 = 0";
    "$z1 = 1"->"goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z1)]";
    "goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z1)]"->"virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z1)";
    "$z1 = 0"->"virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z1)";
    "virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z1)"->"$i0 = interfaceinvoke r13.<java.util.Map$Entry: int hashCode()>()";
    "$i0 = interfaceinvoke r13.<java.util.Map$Entry: int hashCode()>()"->"$i1 = virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: int hashCode(java.util.Map$Entry)>(r13)";
    "$i1 = virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: int hashCode(java.util.Map$Entry)>(r13)"->"if $i0 != $i1 goto $z2 = 0";
    "if $i0 != $i1 goto $z2 = 0"->"$z2 = 1";
    "if $i0 != $i1 goto $z2 = 0"->"$z2 = 0";
    "$z2 = 1"->"goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z2)]";
    "goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z2)]"->"virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z2)";
    "$z2 = 0"->"virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z2)";
    "virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z2)"->"$i2 = interfaceinvoke r17.<java.util.Map$Entry: int hashCode()>()";
    "$i2 = interfaceinvoke r17.<java.util.Map$Entry: int hashCode()>()"->"$i3 = virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: int hashCode(java.util.Map$Entry)>(r17)";
    "$i3 = virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: int hashCode(java.util.Map$Entry)>(r17)"->"if $i2 != $i3 goto $z3 = 0";
    "if $i2 != $i3 goto $z3 = 0"->"$z3 = 1";
    "if $i2 != $i3 goto $z3 = 0"->"$z3 = 0";
    "$z3 = 1"->"goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z3)]";
    "goto [?= virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z3)]"->"virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z3)";
    "$z3 = 0"->"virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z3)";
    "virtualinvoke r18.<jsr166tests.jtreg.util.Collections.CheckedIdentityMap: void check(boolean)>($z3)"->"return";
}
