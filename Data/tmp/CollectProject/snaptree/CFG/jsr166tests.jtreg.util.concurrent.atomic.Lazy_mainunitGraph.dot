digraph "unitGraph" {
    "r37 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.concurrent.atomic.AtomicBoolean"
    "specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>()"
    "r1 = $r0"
    "$r2 = new java.util.concurrent.atomic.AtomicInteger"
    "specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>()"
    "r3 = $r2"
    "$r4 = new java.util.concurrent.atomic.AtomicLong"
    "specialinvoke $r4.<java.util.concurrent.atomic.AtomicLong: void <init>()>()"
    "r5 = $r4"
    "$r6 = new java.util.concurrent.atomic.AtomicReference"
    "specialinvoke $r6.<java.util.concurrent.atomic.AtomicReference: void <init>()>()"
    "r7 = $r6"
    "$r8 = new java.util.concurrent.atomic.AtomicIntegerArray"
    "specialinvoke $r8.<java.util.concurrent.atomic.AtomicIntegerArray: void <init>(int)>(1)"
    "r9 = $r8"
    "$r10 = new java.util.concurrent.atomic.AtomicLongArray"
    "specialinvoke $r10.<java.util.concurrent.atomic.AtomicLongArray: void <init>(int)>(1)"
    "r11 = $r10"
    "$r12 = new java.util.concurrent.atomic.AtomicReferenceArray"
    "specialinvoke $r12.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(1)"
    "r13 = $r12"
    "r14 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", \"ii\")"
    "r15 = staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", \"ll\")"
    "r16 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", class \"Ljava/lang/Boolean;\", \"bb\")"
    "$r17 = newarray (java.lang.Thread)[10]"
    "$r18 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$1"
    "specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$1: void <init>(java.util.concurrent.atomic.AtomicBoolean)>(r1)"
    "$r17[0] = $r18"
    "$r19 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$2"
    "specialinvoke $r19.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$2: void <init>(java.util.concurrent.atomic.AtomicInteger)>(r3)"
    "$r17[1] = $r19"
    "$r20 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$3"
    "specialinvoke $r20.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$3: void <init>(java.util.concurrent.atomic.AtomicLong)>(r5)"
    "$r17[2] = $r20"
    "$r21 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$4"
    "specialinvoke $r21.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$4: void <init>(java.util.concurrent.atomic.AtomicReference)>(r7)"
    "$r17[3] = $r21"
    "$r22 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$5"
    "specialinvoke $r22.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$5: void <init>(java.util.concurrent.atomic.AtomicIntegerArray)>(r9)"
    "$r17[4] = $r22"
    "$r23 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$6"
    "specialinvoke $r23.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$6: void <init>(java.util.concurrent.atomic.AtomicLongArray)>(r11)"
    "$r17[5] = $r23"
    "$r24 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$7"
    "specialinvoke $r24.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$7: void <init>(java.util.concurrent.atomic.AtomicReferenceArray)>(r13)"
    "$r17[6] = $r24"
    "$r25 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$8"
    "specialinvoke $r25.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$8: void <init>(java.util.concurrent.atomic.AtomicIntegerFieldUpdater)>(r14)"
    "$r17[7] = $r25"
    "$r26 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$9"
    "specialinvoke $r26.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$9: void <init>(java.util.concurrent.atomic.AtomicLongFieldUpdater)>(r15)"
    "$r17[8] = $r26"
    "$r27 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$10"
    "specialinvoke $r27.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$10: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater)>(r16)"
    "$r17[9] = $r27"
    "r28 = $r17"
    "r38 = r28"
    "i13 = lengthof r38"
    "i14 = 0"
    "if i14 >= i13 goto r40 = r28"
    "r39 = r38[i14]"
    "virtualinvoke r39.<java.lang.Thread: void start()>()"
    "i14 = i14 + 1"
    "goto [?= (branch)]"
    "r40 = r28"
    "i15 = lengthof r40"
    "i16 = 0"
    "if i16 >= i15 goto $z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"
    "r41 = r40[i16]"
    "virtualinvoke r41.<java.lang.Thread: void join()>()"
    "i16 = i16 + 1"
    "$z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"
    "if $z0 != 1 goto $r42 = new java.lang.Exception"
    "$i0 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicInteger: int get()>()"
    "if $i0 != 2 goto $r42 = new java.lang.Exception"
    "$l1 = virtualinvoke r5.<java.util.concurrent.atomic.AtomicLong: long get()>()"
    "$b2 = $l1 cmp 3L"
    "if $b2 != 0 goto $r42 = new java.lang.Exception"
    "$r29 = virtualinvoke r7.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>()"
    "$r30 = (java.lang.Long) $r29"
    "$l3 = virtualinvoke $r30.<java.lang.Long: long longValue()>()"
    "$b4 = $l3 cmp 9L"
    "if $b4 != 0 goto $r42 = new java.lang.Exception"
    "$i5 = virtualinvoke r9.<java.util.concurrent.atomic.AtomicIntegerArray: int get(int)>(0)"
    "if $i5 != 4 goto $r42 = new java.lang.Exception"
    "$l6 = virtualinvoke r11.<java.util.concurrent.atomic.AtomicLongArray: long get(int)>(0)"
    "$b7 = $l6 cmp 5L"
    "if $b7 != 0 goto $r42 = new java.lang.Exception"
    "$r31 = virtualinvoke r13.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(0)"
    "$r32 = (java.lang.Long) $r31"
    "$l8 = virtualinvoke $r32.<java.lang.Long: long longValue()>()"
    "$b9 = $l8 cmp 6L"
    "if $b9 != 0 goto $r42 = new java.lang.Exception"
    "$r33 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>"
    "$i10 = $r33.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: int ii>"
    "if $i10 != 7 goto $r42 = new java.lang.Exception"
    "$r34 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>"
    "$l11 = $r34.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: long ll>"
    "$b12 = $l11 cmp 8L"
    "if $b12 != 0 goto $r42 = new java.lang.Exception"
    "$r35 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>"
    "$r36 = $r35.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: java.lang.Boolean bb>"
    "$z1 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>()"
    "if $z1 == 1 goto return"
    "$r42 = new java.lang.Exception"
    "specialinvoke $r42.<java.lang.Exception: void <init>(java.lang.String)>(\"lazySet failed\")"
    "throw $r42"
    "return"
    "r37 := @parameter0: java.lang.String[]"->"$r0 = new java.util.concurrent.atomic.AtomicBoolean";
    "$r0 = new java.util.concurrent.atomic.AtomicBoolean"->"specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>()";
    "specialinvoke $r0.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.util.concurrent.atomic.AtomicInteger";
    "$r2 = new java.util.concurrent.atomic.AtomicInteger"->"specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>()";
    "specialinvoke $r2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new java.util.concurrent.atomic.AtomicLong";
    "$r4 = new java.util.concurrent.atomic.AtomicLong"->"specialinvoke $r4.<java.util.concurrent.atomic.AtomicLong: void <init>()>()";
    "specialinvoke $r4.<java.util.concurrent.atomic.AtomicLong: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"$r6 = new java.util.concurrent.atomic.AtomicReference";
    "$r6 = new java.util.concurrent.atomic.AtomicReference"->"specialinvoke $r6.<java.util.concurrent.atomic.AtomicReference: void <init>()>()";
    "specialinvoke $r6.<java.util.concurrent.atomic.AtomicReference: void <init>()>()"->"r7 = $r6";
    "r7 = $r6"->"$r8 = new java.util.concurrent.atomic.AtomicIntegerArray";
    "$r8 = new java.util.concurrent.atomic.AtomicIntegerArray"->"specialinvoke $r8.<java.util.concurrent.atomic.AtomicIntegerArray: void <init>(int)>(1)";
    "specialinvoke $r8.<java.util.concurrent.atomic.AtomicIntegerArray: void <init>(int)>(1)"->"r9 = $r8";
    "r9 = $r8"->"$r10 = new java.util.concurrent.atomic.AtomicLongArray";
    "$r10 = new java.util.concurrent.atomic.AtomicLongArray"->"specialinvoke $r10.<java.util.concurrent.atomic.AtomicLongArray: void <init>(int)>(1)";
    "specialinvoke $r10.<java.util.concurrent.atomic.AtomicLongArray: void <init>(int)>(1)"->"r11 = $r10";
    "r11 = $r10"->"$r12 = new java.util.concurrent.atomic.AtomicReferenceArray";
    "$r12 = new java.util.concurrent.atomic.AtomicReferenceArray"->"specialinvoke $r12.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(1)";
    "specialinvoke $r12.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(1)"->"r13 = $r12";
    "r13 = $r12"->"r14 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", \"ii\")";
    "r14 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", \"ii\")"->"r15 = staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", \"ll\")";
    "r15 = staticinvoke <java.util.concurrent.atomic.AtomicLongFieldUpdater: java.util.concurrent.atomic.AtomicLongFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", \"ll\")"->"r16 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", class \"Ljava/lang/Boolean;\", \"bb\")";
    "r16 = staticinvoke <java.util.concurrent.atomic.AtomicReferenceFieldUpdater: java.util.concurrent.atomic.AtomicReferenceFieldUpdater newUpdater(java.lang.Class,java.lang.Class,java.lang.String)>(class \"Ljsr166tests/jtreg/util/concurrent/atomic/Lazy;\", class \"Ljava/lang/Boolean;\", \"bb\")"->"$r17 = newarray (java.lang.Thread)[10]";
    "$r17 = newarray (java.lang.Thread)[10]"->"$r18 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$1";
    "$r18 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$1"->"specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$1: void <init>(java.util.concurrent.atomic.AtomicBoolean)>(r1)";
    "specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$1: void <init>(java.util.concurrent.atomic.AtomicBoolean)>(r1)"->"$r17[0] = $r18";
    "$r17[0] = $r18"->"$r19 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$2";
    "$r19 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$2"->"specialinvoke $r19.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$2: void <init>(java.util.concurrent.atomic.AtomicInteger)>(r3)";
    "specialinvoke $r19.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$2: void <init>(java.util.concurrent.atomic.AtomicInteger)>(r3)"->"$r17[1] = $r19";
    "$r17[1] = $r19"->"$r20 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$3";
    "$r20 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$3"->"specialinvoke $r20.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$3: void <init>(java.util.concurrent.atomic.AtomicLong)>(r5)";
    "specialinvoke $r20.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$3: void <init>(java.util.concurrent.atomic.AtomicLong)>(r5)"->"$r17[2] = $r20";
    "$r17[2] = $r20"->"$r21 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$4";
    "$r21 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$4"->"specialinvoke $r21.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$4: void <init>(java.util.concurrent.atomic.AtomicReference)>(r7)";
    "specialinvoke $r21.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$4: void <init>(java.util.concurrent.atomic.AtomicReference)>(r7)"->"$r17[3] = $r21";
    "$r17[3] = $r21"->"$r22 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$5";
    "$r22 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$5"->"specialinvoke $r22.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$5: void <init>(java.util.concurrent.atomic.AtomicIntegerArray)>(r9)";
    "specialinvoke $r22.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$5: void <init>(java.util.concurrent.atomic.AtomicIntegerArray)>(r9)"->"$r17[4] = $r22";
    "$r17[4] = $r22"->"$r23 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$6";
    "$r23 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$6"->"specialinvoke $r23.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$6: void <init>(java.util.concurrent.atomic.AtomicLongArray)>(r11)";
    "specialinvoke $r23.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$6: void <init>(java.util.concurrent.atomic.AtomicLongArray)>(r11)"->"$r17[5] = $r23";
    "$r17[5] = $r23"->"$r24 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$7";
    "$r24 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$7"->"specialinvoke $r24.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$7: void <init>(java.util.concurrent.atomic.AtomicReferenceArray)>(r13)";
    "specialinvoke $r24.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$7: void <init>(java.util.concurrent.atomic.AtomicReferenceArray)>(r13)"->"$r17[6] = $r24";
    "$r17[6] = $r24"->"$r25 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$8";
    "$r25 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$8"->"specialinvoke $r25.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$8: void <init>(java.util.concurrent.atomic.AtomicIntegerFieldUpdater)>(r14)";
    "specialinvoke $r25.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$8: void <init>(java.util.concurrent.atomic.AtomicIntegerFieldUpdater)>(r14)"->"$r17[7] = $r25";
    "$r17[7] = $r25"->"$r26 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$9";
    "$r26 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$9"->"specialinvoke $r26.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$9: void <init>(java.util.concurrent.atomic.AtomicLongFieldUpdater)>(r15)";
    "specialinvoke $r26.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$9: void <init>(java.util.concurrent.atomic.AtomicLongFieldUpdater)>(r15)"->"$r17[8] = $r26";
    "$r17[8] = $r26"->"$r27 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$10";
    "$r27 = new jsr166tests.jtreg.util.concurrent.atomic.Lazy$10"->"specialinvoke $r27.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$10: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater)>(r16)";
    "specialinvoke $r27.<jsr166tests.jtreg.util.concurrent.atomic.Lazy$10: void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater)>(r16)"->"$r17[9] = $r27";
    "$r17[9] = $r27"->"r28 = $r17";
    "r28 = $r17"->"r38 = r28";
    "r38 = r28"->"i13 = lengthof r38";
    "i13 = lengthof r38"->"i14 = 0";
    "i14 = 0"->"if i14 >= i13 goto r40 = r28";
    "if i14 >= i13 goto r40 = r28"->"r39 = r38[i14]";
    "if i14 >= i13 goto r40 = r28"->"r40 = r28";
    "r39 = r38[i14]"->"virtualinvoke r39.<java.lang.Thread: void start()>()";
    "virtualinvoke r39.<java.lang.Thread: void start()>()"->"i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 >= i13 goto r40 = r28";
    "r40 = r28"->"i15 = lengthof r40";
    "i15 = lengthof r40"->"i16 = 0";
    "i16 = 0"->"if i16 >= i15 goto $z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()";
    "if i16 >= i15 goto $z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"->"r41 = r40[i16]";
    "if i16 >= i15 goto $z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"->"$z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()";
    "r41 = r40[i16]"->"virtualinvoke r41.<java.lang.Thread: void join()>()";
    "virtualinvoke r41.<java.lang.Thread: void join()>()"->"i16 = i16 + 1";
    "i16 = i16 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 >= i15 goto $z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()";
    "$z0 = virtualinvoke r1.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>()"->"if $z0 != 1 goto $r42 = new java.lang.Exception";
    "if $z0 != 1 goto $r42 = new java.lang.Exception"->"$i0 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicInteger: int get()>()";
    "if $z0 != 1 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$i0 = virtualinvoke r3.<java.util.concurrent.atomic.AtomicInteger: int get()>()"->"if $i0 != 2 goto $r42 = new java.lang.Exception";
    "if $i0 != 2 goto $r42 = new java.lang.Exception"->"$l1 = virtualinvoke r5.<java.util.concurrent.atomic.AtomicLong: long get()>()";
    "if $i0 != 2 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$l1 = virtualinvoke r5.<java.util.concurrent.atomic.AtomicLong: long get()>()"->"$b2 = $l1 cmp 3L";
    "$b2 = $l1 cmp 3L"->"if $b2 != 0 goto $r42 = new java.lang.Exception";
    "if $b2 != 0 goto $r42 = new java.lang.Exception"->"$r29 = virtualinvoke r7.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>()";
    "if $b2 != 0 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$r29 = virtualinvoke r7.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>()"->"$r30 = (java.lang.Long) $r29";
    "$r30 = (java.lang.Long) $r29"->"$l3 = virtualinvoke $r30.<java.lang.Long: long longValue()>()";
    "$l3 = virtualinvoke $r30.<java.lang.Long: long longValue()>()"->"$b4 = $l3 cmp 9L";
    "$b4 = $l3 cmp 9L"->"if $b4 != 0 goto $r42 = new java.lang.Exception";
    "if $b4 != 0 goto $r42 = new java.lang.Exception"->"$i5 = virtualinvoke r9.<java.util.concurrent.atomic.AtomicIntegerArray: int get(int)>(0)";
    "if $b4 != 0 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$i5 = virtualinvoke r9.<java.util.concurrent.atomic.AtomicIntegerArray: int get(int)>(0)"->"if $i5 != 4 goto $r42 = new java.lang.Exception";
    "if $i5 != 4 goto $r42 = new java.lang.Exception"->"$l6 = virtualinvoke r11.<java.util.concurrent.atomic.AtomicLongArray: long get(int)>(0)";
    "if $i5 != 4 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$l6 = virtualinvoke r11.<java.util.concurrent.atomic.AtomicLongArray: long get(int)>(0)"->"$b7 = $l6 cmp 5L";
    "$b7 = $l6 cmp 5L"->"if $b7 != 0 goto $r42 = new java.lang.Exception";
    "if $b7 != 0 goto $r42 = new java.lang.Exception"->"$r31 = virtualinvoke r13.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(0)";
    "if $b7 != 0 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$r31 = virtualinvoke r13.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(0)"->"$r32 = (java.lang.Long) $r31";
    "$r32 = (java.lang.Long) $r31"->"$l8 = virtualinvoke $r32.<java.lang.Long: long longValue()>()";
    "$l8 = virtualinvoke $r32.<java.lang.Long: long longValue()>()"->"$b9 = $l8 cmp 6L";
    "$b9 = $l8 cmp 6L"->"if $b9 != 0 goto $r42 = new java.lang.Exception";
    "if $b9 != 0 goto $r42 = new java.lang.Exception"->"$r33 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>";
    "if $b9 != 0 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$r33 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>"->"$i10 = $r33.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: int ii>";
    "$i10 = $r33.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: int ii>"->"if $i10 != 7 goto $r42 = new java.lang.Exception";
    "if $i10 != 7 goto $r42 = new java.lang.Exception"->"$r34 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>";
    "if $i10 != 7 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$r34 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>"->"$l11 = $r34.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: long ll>";
    "$l11 = $r34.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: long ll>"->"$b12 = $l11 cmp 8L";
    "$b12 = $l11 cmp 8L"->"if $b12 != 0 goto $r42 = new java.lang.Exception";
    "if $b12 != 0 goto $r42 = new java.lang.Exception"->"$r35 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>";
    "if $b12 != 0 goto $r42 = new java.lang.Exception"->"$r42 = new java.lang.Exception";
    "$r35 = <jsr166tests.jtreg.util.concurrent.atomic.Lazy: jsr166tests.jtreg.util.concurrent.atomic.Lazy z>"->"$r36 = $r35.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: java.lang.Boolean bb>";
    "$r36 = $r35.<jsr166tests.jtreg.util.concurrent.atomic.Lazy: java.lang.Boolean bb>"->"$z1 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>()";
    "$z1 = virtualinvoke $r36.<java.lang.Boolean: boolean booleanValue()>()"->"if $z1 == 1 goto return";
    "if $z1 == 1 goto return"->"$r42 = new java.lang.Exception";
    "if $z1 == 1 goto return"->"return";
    "$r42 = new java.lang.Exception"->"specialinvoke $r42.<java.lang.Exception: void <init>(java.lang.String)>(\"lazySet failed\")";
    "specialinvoke $r42.<java.lang.Exception: void <init>(java.lang.String)>(\"lazySet failed\")"->"throw $r42";
}
