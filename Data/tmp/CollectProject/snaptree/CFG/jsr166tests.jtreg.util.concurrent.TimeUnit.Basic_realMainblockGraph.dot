digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r59 := @parameter0: java.lang.String[];
r60 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>();
i0 = lengthof r60;
i23 = 0;
"
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i23 >= i0 goto $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
r50 = r60[i23];
$r51 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.Object)>(r50);
$z1 = r50 instanceof java.util.concurrent.TimeUnit;
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z1);
$r52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L);
$l17 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r50);
$r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l17);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r52, $r53);
r61 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>();
i18 = lengthof r61;
i24 = 0;
"
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i24 >= i18 goto $r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
"
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r56 = r61[i24];
$l19 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r56);
$b20 = $l19 cmp 42L;
if $b20 < 0 goto i24 = i24 + 1;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L);
$l21 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r56);
$l22 = virtualinvoke r56.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l21, r50);
$r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l22);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r57, $r58);
"
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i24 = i24 + 1;
goto [?= (branch)];
"
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
$r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
$r55 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: java.lang.Object readObject(byte[])>($r54);
if $r55 != r50 goto $z2 = 0;
"
    "Block 8:
[preds: 7 ] [succs: 10 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z2)];
"
    "Block 9:
[preds: 7 ] [succs: 10 ]
$z2 = 0;
"
    "Block 10:
[preds: 8 9 ] [succs: 1 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z2);
i23 = i23 + 1;
goto [?= (branch)];
"
    "Block 11:
[preds: 1 ] [succs: 12 13 ]
$r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
$r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r1);
$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r0, $r3);
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$l2 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r5);
$r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r4, $r7);
$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r9);
$r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r8, $r11);
$r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$l4 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r13);
$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r12, $r15);
$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$l5 = virtualinvoke $r18.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r17);
$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r16, $r19);
$r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r22 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
$r21 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$l6 = virtualinvoke $r22.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r21);
$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r20, $r23);
$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
$r25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$l7 = virtualinvoke $r25.<java.util.concurrent.TimeUnit: long toHours(long)>(1L);
$r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r24, $r26);
$r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$l8 = virtualinvoke $r28.<java.util.concurrent.TimeUnit: long toMinutes(long)>(1L);
$r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r27, $r29);
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r31 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$l9 = virtualinvoke $r31.<java.util.concurrent.TimeUnit: long toSeconds(long)>(1L);
$r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r30, $r32);
$r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r34 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$l10 = virtualinvoke $r34.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);
$r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r33, $r35);
$r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r37 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$l11 = virtualinvoke $r37.<java.util.concurrent.TimeUnit: long toMicros(long)>(1L);
$r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r36, $r38);
$r39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r40 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$l12 = virtualinvoke $r40.<java.util.concurrent.TimeUnit: long toNanos(long)>(1L);
$r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r39, $r41);
l25 = staticinvoke <java.lang.System: long nanoTime()>();
$r42 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke $r42.<java.util.concurrent.TimeUnit: void sleep(long)>(3L);
$l13 = staticinvoke <java.lang.System: long nanoTime()>();
$l14 = $l13 - l25;
l26 = $l14 / 1000000L;
$r44 = <java.lang.System: java.io.PrintStream out>;
$r43 = newarray (java.lang.Object)[1];
$r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l26);
$r43[0] = $r45;
virtualinvoke $r44.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"elapsed=%d%n\", $r43);
$b15 = l26 cmp 0L;
if $b15 < 0 goto $z3 = 0;
"
    "Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z3)];
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
"
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z3);
$b16 = l26 cmp 1000L;
if $b16 >= 0 goto $z4 = 0;
"
    "Block 15:
[preds: 14 ] [succs: 17 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z4)];
"
    "Block 16:
[preds: 14 ] [succs: 17 ]
$z4 = 0;
"
    "Block 17:
[preds: 15 16 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z4);
$r47 = newarray (byte)[89];
$r47[0] = -84;
$r47[1] = -19;
$r47[2] = 0;
$r47[3] = 5;
$r47[4] = 126;
$r47[5] = 114;
$r47[6] = 0;
$r47[7] = 29;
$r47[8] = 106;
$r47[9] = 97;
$r47[10] = 118;
$r47[11] = 97;
$r47[12] = 46;
$r47[13] = 117;
$r47[14] = 116;
$r47[15] = 105;
$r47[16] = 108;
$r47[17] = 46;
$r47[18] = 99;
$r47[19] = 111;
$r47[20] = 110;
$r47[21] = 99;
$r47[22] = 117;
$r47[23] = 114;
$r47[24] = 114;
$r47[25] = 101;
$r47[26] = 110;
$r47[27] = 116;
$r47[28] = 46;
$r47[29] = 84;
$r47[30] = 105;
$r47[31] = 109;
$r47[32] = 101;
$r47[33] = 85;
$r47[34] = 110;
$r47[35] = 105;
$r47[36] = 116;
$r47[37] = 0;
$r47[38] = 0;
$r47[39] = 0;
$r47[40] = 0;
$r47[41] = 0;
$r47[42] = 0;
$r47[43] = 0;
$r47[44] = 0;
$r47[45] = 18;
$r47[46] = 0;
$r47[47] = 0;
$r47[48] = 120;
$r47[49] = 114;
$r47[50] = 0;
$r47[51] = 14;
$r47[52] = 106;
$r47[53] = 97;
$r47[54] = 118;
$r47[55] = 97;
$r47[56] = 46;
$r47[57] = 108;
$r47[58] = 97;
$r47[59] = 110;
$r47[60] = 103;
$r47[61] = 46;
$r47[62] = 69;
$r47[63] = 110;
$r47[64] = 117;
$r47[65] = 109;
$r47[66] = 0;
$r47[67] = 0;
$r47[68] = 0;
$r47[69] = 0;
$r47[70] = 0;
$r47[71] = 0;
$r47[72] = 0;
$r47[73] = 0;
$r47[74] = 18;
$r47[75] = 0;
$r47[76] = 0;
$r47[77] = 120;
$r47[78] = 112;
$r47[79] = 116;
$r47[80] = 0;
$r47[81] = 7;
$r47[82] = 83;
$r47[83] = 69;
$r47[84] = 67;
$r47[85] = 79;
$r47[86] = 78;
$r47[87] = 68;
$r47[88] = 83;
r62 = $r47;
$r48 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$r49 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>($r48);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r49, r62);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z0);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r59 := @parameter0: java.lang.String[];
r60 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>();
i0 = lengthof r60;
i23 = 0;
"->"Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i23 >= i0 goto $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i23 >= i0 goto $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
"->"Block 2:
[preds: 1 ] [succs: 3 ]
r50 = r60[i23];
$r51 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.Object)>(r50);
$z1 = r50 instanceof java.util.concurrent.TimeUnit;
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z1);
$r52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L);
$l17 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r50);
$r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l17);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r52, $r53);
r61 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>();
i18 = lengthof r61;
i24 = 0;
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i23 >= i0 goto $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
"->"Block 11:
[preds: 1 ] [succs: 12 13 ]
$r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
$r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r1);
$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r0, $r3);
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$l2 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r5);
$r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r4, $r7);
$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r9);
$r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r8, $r11);
$r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$l4 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r13);
$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r12, $r15);
$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$l5 = virtualinvoke $r18.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r17);
$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r16, $r19);
$r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r22 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
$r21 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$l6 = virtualinvoke $r22.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r21);
$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r20, $r23);
$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
$r25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$l7 = virtualinvoke $r25.<java.util.concurrent.TimeUnit: long toHours(long)>(1L);
$r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r24, $r26);
$r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$l8 = virtualinvoke $r28.<java.util.concurrent.TimeUnit: long toMinutes(long)>(1L);
$r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r27, $r29);
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r31 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$l9 = virtualinvoke $r31.<java.util.concurrent.TimeUnit: long toSeconds(long)>(1L);
$r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r30, $r32);
$r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r34 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$l10 = virtualinvoke $r34.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);
$r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r33, $r35);
$r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r37 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$l11 = virtualinvoke $r37.<java.util.concurrent.TimeUnit: long toMicros(long)>(1L);
$r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r36, $r38);
$r39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r40 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$l12 = virtualinvoke $r40.<java.util.concurrent.TimeUnit: long toNanos(long)>(1L);
$r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r39, $r41);
l25 = staticinvoke <java.lang.System: long nanoTime()>();
$r42 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke $r42.<java.util.concurrent.TimeUnit: void sleep(long)>(3L);
$l13 = staticinvoke <java.lang.System: long nanoTime()>();
$l14 = $l13 - l25;
l26 = $l14 / 1000000L;
$r44 = <java.lang.System: java.io.PrintStream out>;
$r43 = newarray (java.lang.Object)[1];
$r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l26);
$r43[0] = $r45;
virtualinvoke $r44.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"elapsed=%d%n\", $r43);
$b15 = l26 cmp 0L;
if $b15 < 0 goto $z3 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
r50 = r60[i23];
$r51 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r51.<java.io.PrintStream: void println(java.lang.Object)>(r50);
$z1 = r50 instanceof java.util.concurrent.TimeUnit;
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z1);
$r52 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L);
$l17 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r50);
$r53 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l17);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r52, $r53);
r61 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit[] values()>();
i18 = lengthof r61;
i24 = 0;
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i24 >= i18 goto $r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i24 >= i18 goto $r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
"->"Block 4:
[preds: 3 ] [succs: 5 6 ]
r56 = r61[i24];
$l19 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r56);
$b20 = $l19 cmp 42L;
if $b20 < 0 goto i24 = i24 + 1;
";
    "Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i24 >= i18 goto $r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
"->"Block 7:
[preds: 3 ] [succs: 8 9 ]
$r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
$r55 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: java.lang.Object readObject(byte[])>($r54);
if $r55 != r50 goto $z2 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r56 = r61[i24];
$l19 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r56);
$b20 = $l19 cmp 42L;
if $b20 < 0 goto i24 = i24 + 1;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$r57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L);
$l21 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r56);
$l22 = virtualinvoke r56.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l21, r50);
$r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l22);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r57, $r58);
";
    "Block 4:
[preds: 3 ] [succs: 5 6 ]
r56 = r61[i24];
$l19 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r56);
$b20 = $l19 cmp 42L;
if $b20 < 0 goto i24 = i24 + 1;
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i24 = i24 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L);
$l21 = virtualinvoke r50.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(42L, r56);
$l22 = virtualinvoke r56.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>($l21, r50);
$r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l22);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r57, $r58);
"->"Block 6:
[preds: 4 5 ] [succs: 3 ]
i24 = i24 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 4 5 ] [succs: 3 ]
i24 = i24 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 6 ] [succs: 4 7 ]
if i24 >= i18 goto $r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
";
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
$r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
$r55 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: java.lang.Object readObject(byte[])>($r54);
if $r55 != r50 goto $z2 = 0;
"->"Block 8:
[preds: 7 ] [succs: 10 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z2)];
";
    "Block 7:
[preds: 3 ] [succs: 8 9 ]
$r54 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>(r50);
$r55 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: java.lang.Object readObject(byte[])>($r54);
if $r55 != r50 goto $z2 = 0;
"->"Block 9:
[preds: 7 ] [succs: 10 ]
$z2 = 0;
";
    "Block 8:
[preds: 7 ] [succs: 10 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z2)];
"->"Block 10:
[preds: 8 9 ] [succs: 1 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z2);
i23 = i23 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 7 ] [succs: 10 ]
$z2 = 0;
"->"Block 10:
[preds: 8 9 ] [succs: 1 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z2);
i23 = i23 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 8 9 ] [succs: 1 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z2);
i23 = i23 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i23 >= i0 goto $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
";
    "Block 11:
[preds: 1 ] [succs: 12 13 ]
$r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
$r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r1);
$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r0, $r3);
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$l2 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r5);
$r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r4, $r7);
$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r9);
$r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r8, $r11);
$r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$l4 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r13);
$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r12, $r15);
$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$l5 = virtualinvoke $r18.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r17);
$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r16, $r19);
$r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r22 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
$r21 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$l6 = virtualinvoke $r22.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r21);
$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r20, $r23);
$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
$r25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$l7 = virtualinvoke $r25.<java.util.concurrent.TimeUnit: long toHours(long)>(1L);
$r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r24, $r26);
$r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$l8 = virtualinvoke $r28.<java.util.concurrent.TimeUnit: long toMinutes(long)>(1L);
$r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r27, $r29);
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r31 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$l9 = virtualinvoke $r31.<java.util.concurrent.TimeUnit: long toSeconds(long)>(1L);
$r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r30, $r32);
$r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r34 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$l10 = virtualinvoke $r34.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);
$r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r33, $r35);
$r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r37 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$l11 = virtualinvoke $r37.<java.util.concurrent.TimeUnit: long toMicros(long)>(1L);
$r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r36, $r38);
$r39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r40 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$l12 = virtualinvoke $r40.<java.util.concurrent.TimeUnit: long toNanos(long)>(1L);
$r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r39, $r41);
l25 = staticinvoke <java.lang.System: long nanoTime()>();
$r42 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke $r42.<java.util.concurrent.TimeUnit: void sleep(long)>(3L);
$l13 = staticinvoke <java.lang.System: long nanoTime()>();
$l14 = $l13 - l25;
l26 = $l14 / 1000000L;
$r44 = <java.lang.System: java.io.PrintStream out>;
$r43 = newarray (java.lang.Object)[1];
$r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l26);
$r43[0] = $r45;
virtualinvoke $r44.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"elapsed=%d%n\", $r43);
$b15 = l26 cmp 0L;
if $b15 < 0 goto $z3 = 0;
"->"Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z3)];
";
    "Block 11:
[preds: 1 ] [succs: 12 13 ]
$r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
$r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$l1 = virtualinvoke $r2.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r1);
$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r0, $r3);
$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$l2 = virtualinvoke $r6.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r5);
$r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r4, $r7);
$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$l3 = virtualinvoke $r10.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r9);
$r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r8, $r11);
$r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r14 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$l4 = virtualinvoke $r14.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r13);
$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r12, $r15);
$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$l5 = virtualinvoke $r18.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r17);
$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r16, $r19);
$r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r22 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
$r21 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$l6 = virtualinvoke $r22.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(1L, $r21);
$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l6);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r20, $r23);
$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(24L);
$r25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$l7 = virtualinvoke $r25.<java.util.concurrent.TimeUnit: long toHours(long)>(1L);
$r26 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r24, $r26);
$r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r28 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
$l8 = virtualinvoke $r28.<java.util.concurrent.TimeUnit: long toMinutes(long)>(1L);
$r29 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r27, $r29);
$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(60L);
$r31 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
$l9 = virtualinvoke $r31.<java.util.concurrent.TimeUnit: long toSeconds(long)>(1L);
$r32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l9);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r30, $r32);
$r33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r34 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$l10 = virtualinvoke $r34.<java.util.concurrent.TimeUnit: long toMillis(long)>(1L);
$r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r33, $r35);
$r36 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r37 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$l11 = virtualinvoke $r37.<java.util.concurrent.TimeUnit: long toMicros(long)>(1L);
$r38 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r36, $r38);
$r39 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(1000L);
$r40 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MICROSECONDS>;
$l12 = virtualinvoke $r40.<java.util.concurrent.TimeUnit: long toNanos(long)>(1L);
$r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void equal(java.lang.Object,java.lang.Object)>($r39, $r41);
l25 = staticinvoke <java.lang.System: long nanoTime()>();
$r42 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke $r42.<java.util.concurrent.TimeUnit: void sleep(long)>(3L);
$l13 = staticinvoke <java.lang.System: long nanoTime()>();
$l14 = $l13 - l25;
l26 = $l14 / 1000000L;
$r44 = <java.lang.System: java.io.PrintStream out>;
$r43 = newarray (java.lang.Object)[1];
$r45 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l26);
$r43[0] = $r45;
virtualinvoke $r44.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"elapsed=%d%n\", $r43);
$b15 = l26 cmp 0L;
if $b15 < 0 goto $z3 = 0;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
";
    "Block 12:
[preds: 11 ] [succs: 14 ]
$z3 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z3)];
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z3);
$b16 = l26 cmp 1000L;
if $b16 >= 0 goto $z4 = 0;
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
$z3 = 0;
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z3);
$b16 = l26 cmp 1000L;
if $b16 >= 0 goto $z4 = 0;
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z3);
$b16 = l26 cmp 1000L;
if $b16 >= 0 goto $z4 = 0;
"->"Block 15:
[preds: 14 ] [succs: 17 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z4)];
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z3);
$b16 = l26 cmp 1000L;
if $b16 >= 0 goto $z4 = 0;
"->"Block 16:
[preds: 14 ] [succs: 17 ]
$z4 = 0;
";
    "Block 15:
[preds: 14 ] [succs: 17 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z4)];
"->"Block 17:
[preds: 15 16 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z4);
$r47 = newarray (byte)[89];
$r47[0] = -84;
$r47[1] = -19;
$r47[2] = 0;
$r47[3] = 5;
$r47[4] = 126;
$r47[5] = 114;
$r47[6] = 0;
$r47[7] = 29;
$r47[8] = 106;
$r47[9] = 97;
$r47[10] = 118;
$r47[11] = 97;
$r47[12] = 46;
$r47[13] = 117;
$r47[14] = 116;
$r47[15] = 105;
$r47[16] = 108;
$r47[17] = 46;
$r47[18] = 99;
$r47[19] = 111;
$r47[20] = 110;
$r47[21] = 99;
$r47[22] = 117;
$r47[23] = 114;
$r47[24] = 114;
$r47[25] = 101;
$r47[26] = 110;
$r47[27] = 116;
$r47[28] = 46;
$r47[29] = 84;
$r47[30] = 105;
$r47[31] = 109;
$r47[32] = 101;
$r47[33] = 85;
$r47[34] = 110;
$r47[35] = 105;
$r47[36] = 116;
$r47[37] = 0;
$r47[38] = 0;
$r47[39] = 0;
$r47[40] = 0;
$r47[41] = 0;
$r47[42] = 0;
$r47[43] = 0;
$r47[44] = 0;
$r47[45] = 18;
$r47[46] = 0;
$r47[47] = 0;
$r47[48] = 120;
$r47[49] = 114;
$r47[50] = 0;
$r47[51] = 14;
$r47[52] = 106;
$r47[53] = 97;
$r47[54] = 118;
$r47[55] = 97;
$r47[56] = 46;
$r47[57] = 108;
$r47[58] = 97;
$r47[59] = 110;
$r47[60] = 103;
$r47[61] = 46;
$r47[62] = 69;
$r47[63] = 110;
$r47[64] = 117;
$r47[65] = 109;
$r47[66] = 0;
$r47[67] = 0;
$r47[68] = 0;
$r47[69] = 0;
$r47[70] = 0;
$r47[71] = 0;
$r47[72] = 0;
$r47[73] = 0;
$r47[74] = 18;
$r47[75] = 0;
$r47[76] = 0;
$r47[77] = 120;
$r47[78] = 112;
$r47[79] = 116;
$r47[80] = 0;
$r47[81] = 7;
$r47[82] = 83;
$r47[83] = 69;
$r47[84] = 67;
$r47[85] = 79;
$r47[86] = 78;
$r47[87] = 68;
$r47[88] = 83;
r62 = $r47;
$r48 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$r49 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>($r48);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r49, r62);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z0);
return;
";
    "Block 16:
[preds: 14 ] [succs: 17 ]
$z4 = 0;
"->"Block 17:
[preds: 15 16 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z4);
$r47 = newarray (byte)[89];
$r47[0] = -84;
$r47[1] = -19;
$r47[2] = 0;
$r47[3] = 5;
$r47[4] = 126;
$r47[5] = 114;
$r47[6] = 0;
$r47[7] = 29;
$r47[8] = 106;
$r47[9] = 97;
$r47[10] = 118;
$r47[11] = 97;
$r47[12] = 46;
$r47[13] = 117;
$r47[14] = 116;
$r47[15] = 105;
$r47[16] = 108;
$r47[17] = 46;
$r47[18] = 99;
$r47[19] = 111;
$r47[20] = 110;
$r47[21] = 99;
$r47[22] = 117;
$r47[23] = 114;
$r47[24] = 114;
$r47[25] = 101;
$r47[26] = 110;
$r47[27] = 116;
$r47[28] = 46;
$r47[29] = 84;
$r47[30] = 105;
$r47[31] = 109;
$r47[32] = 101;
$r47[33] = 85;
$r47[34] = 110;
$r47[35] = 105;
$r47[36] = 116;
$r47[37] = 0;
$r47[38] = 0;
$r47[39] = 0;
$r47[40] = 0;
$r47[41] = 0;
$r47[42] = 0;
$r47[43] = 0;
$r47[44] = 0;
$r47[45] = 18;
$r47[46] = 0;
$r47[47] = 0;
$r47[48] = 120;
$r47[49] = 114;
$r47[50] = 0;
$r47[51] = 14;
$r47[52] = 106;
$r47[53] = 97;
$r47[54] = 118;
$r47[55] = 97;
$r47[56] = 46;
$r47[57] = 108;
$r47[58] = 97;
$r47[59] = 110;
$r47[60] = 103;
$r47[61] = 46;
$r47[62] = 69;
$r47[63] = 110;
$r47[64] = 117;
$r47[65] = 109;
$r47[66] = 0;
$r47[67] = 0;
$r47[68] = 0;
$r47[69] = 0;
$r47[70] = 0;
$r47[71] = 0;
$r47[72] = 0;
$r47[73] = 0;
$r47[74] = 18;
$r47[75] = 0;
$r47[76] = 0;
$r47[77] = 120;
$r47[78] = 112;
$r47[79] = 116;
$r47[80] = 0;
$r47[81] = 7;
$r47[82] = 83;
$r47[83] = 69;
$r47[84] = 67;
$r47[85] = 79;
$r47[86] = 78;
$r47[87] = 68;
$r47[88] = 83;
r62 = $r47;
$r48 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
$r49 = staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: byte[] serializedForm(java.lang.Object)>($r48);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r49, r62);
staticinvoke <jsr166tests.jtreg.util.concurrent.TimeUnit.Basic: void check(boolean)>($z0);
return;
";
}
