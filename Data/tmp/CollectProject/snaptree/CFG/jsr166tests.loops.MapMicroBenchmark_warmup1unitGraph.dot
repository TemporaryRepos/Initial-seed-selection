digraph "unitGraph" {
    "r0 := @parameter0: jsr166tests.loops.MapMicroBenchmark$Job"
    "i2 = 0"
    "if i2 >= 9 goto return"
    "$r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>"
    "$i0 = $r1[i2]"
    "virtualinvoke r0.<jsr166tests.loops.MapMicroBenchmark$Job: long work(int,int,int,long)>($i0, 1, 1, 0L)"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "return"
    "r0 := @parameter0: jsr166tests.loops.MapMicroBenchmark$Job"->"i2 = 0";
    "i2 = 0"->"if i2 >= 9 goto return";
    "if i2 >= 9 goto return"->"$r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>";
    "if i2 >= 9 goto return"->"return";
    "$r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>"->"$i0 = $r1[i2]";
    "$i0 = $r1[i2]"->"virtualinvoke r0.<jsr166tests.loops.MapMicroBenchmark$Job: long work(int,int,int,long)>($i0, 1, 1, 0L)";
    "virtualinvoke r0.<jsr166tests.loops.MapMicroBenchmark$Job: long work(int,int,int,long)>($i0, 1, 1, 0L)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 9 goto return";
}
