digraph "unitGraph" {
    "r1 := @this: jsr166tests.jtreg.util.Collections.CheckedNull"
    "r0 := @parameter0: java.util.Map"
    "r2 := @parameter1: java.lang.Object"
    "r3 := @parameter2: java.lang.Object"
    "i0 = interfaceinvoke r0.<java.util.Map: int size()>()"
    "$z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)"
    "if $z0 != 0 goto $z8 = 0"
    "$z8 = 1"
    "goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)]"
    "$z8 = 0"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)"
    "$z1 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)"
    "if $z1 != 0 goto $z9 = 0"
    "$z9 = 1"
    "goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)]"
    "$z9 = 0"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)"
    "$r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(null, $r4)"
    "$z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2)"
    "$z3 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3)"
    "$i1 = interfaceinvoke r0.<java.util.Map: int size()>()"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$i2 = i0 + 1"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r5, $r6)"
    "$r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r7)"
    "$z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)"
    "if $z4 != 0 goto $z10 = 0"
    "$z10 = 1"
    "goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)]"
    "$z10 = 0"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)"
    "$z5 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)"
    "if $z5 != 0 goto $z11 = 0"
    "$z11 = 1"
    "goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)]"
    "$z11 = 0"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)"
    "$r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, r3)"
    "interfaceinvoke r0.<java.util.Map: void putAll(java.util.Map)>($r8)"
    "$z6 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6)"
    "$z7 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7)"
    "$i3 = interfaceinvoke r0.<java.util.Map: int size()>()"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"
    "$i4 = i0 + 1"
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r9, $r10)"
    "$r11 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r11)"
    "$i5 = interfaceinvoke r0.<java.util.Map: int size()>()"
    "$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"
    "$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r12, $r13)"
    "return"
    "r1 := @this: jsr166tests.jtreg.util.Collections.CheckedNull"->"r0 := @parameter0: java.util.Map";
    "r0 := @parameter0: java.util.Map"->"r2 := @parameter1: java.lang.Object";
    "r2 := @parameter1: java.lang.Object"->"r3 := @parameter2: java.lang.Object";
    "r3 := @parameter2: java.lang.Object"->"i0 = interfaceinvoke r0.<java.util.Map: int size()>()";
    "i0 = interfaceinvoke r0.<java.util.Map: int size()>()"->"$z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)";
    "$z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)"->"if $z0 != 0 goto $z8 = 0";
    "if $z0 != 0 goto $z8 = 0"->"$z8 = 1";
    "if $z0 != 0 goto $z8 = 0"->"$z8 = 0";
    "$z8 = 1"->"goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)]";
    "goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)]"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)";
    "$z8 = 0"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)"->"$z1 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)";
    "$z1 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)"->"if $z1 != 0 goto $z9 = 0";
    "if $z1 != 0 goto $z9 = 0"->"$z9 = 1";
    "if $z1 != 0 goto $z9 = 0"->"$z9 = 0";
    "$z9 = 1"->"goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)]";
    "goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)]"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)";
    "$z9 = 0"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)"->"$r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3)";
    "$r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(null, $r4)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(null, $r4)"->"$z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)";
    "$z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2)"->"$z3 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)";
    "$z3 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3)"->"$i1 = interfaceinvoke r0.<java.util.Map: int size()>()";
    "$i1 = interfaceinvoke r0.<java.util.Map: int size()>()"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$i2 = i0 + 1";
    "$i2 = i0 + 1"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r5, $r6)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r5, $r6)"->"$r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)";
    "$r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r7)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r7)"->"$z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)";
    "$z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)"->"if $z4 != 0 goto $z10 = 0";
    "if $z4 != 0 goto $z10 = 0"->"$z10 = 1";
    "if $z4 != 0 goto $z10 = 0"->"$z10 = 0";
    "$z10 = 1"->"goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)]";
    "goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)]"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)";
    "$z10 = 0"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)"->"$z5 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)";
    "$z5 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)"->"if $z5 != 0 goto $z11 = 0";
    "if $z5 != 0 goto $z11 = 0"->"$z11 = 1";
    "if $z5 != 0 goto $z11 = 0"->"$z11 = 0";
    "$z11 = 1"->"goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)]";
    "goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)]"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)";
    "$z11 = 0"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)"->"$r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, r3)";
    "$r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, r3)"->"interfaceinvoke r0.<java.util.Map: void putAll(java.util.Map)>($r8)";
    "interfaceinvoke r0.<java.util.Map: void putAll(java.util.Map)>($r8)"->"$z6 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)";
    "$z6 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6)"->"$z7 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)";
    "$z7 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7)"->"$i3 = interfaceinvoke r0.<java.util.Map: int size()>()";
    "$i3 = interfaceinvoke r0.<java.util.Map: int size()>()"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"->"$i4 = i0 + 1";
    "$i4 = i0 + 1"->"$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r9, $r10)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r9, $r10)"->"$r11 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)";
    "$r11 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r11)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r11)"->"$i5 = interfaceinvoke r0.<java.util.Map: int size()>()";
    "$i5 = interfaceinvoke r0.<java.util.Map: int size()>()"->"$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)";
    "$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"->"$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r12, $r13)";
    "virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r12, $r13)"->"return";
}
