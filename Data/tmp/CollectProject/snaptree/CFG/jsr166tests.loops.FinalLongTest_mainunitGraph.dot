digraph "unitGraph" {
    "r7 := @parameter0: java.lang.String[]"
    "i7 = 0"
    "$i0 = <jsr166tests.loops.FinalLongTest: int LEN>"
    "if i7 >= $i0 goto $i1 = <jsr166tests.loops.FinalLongTest: int npairs>"
    "$r6 = <jsr166tests.loops.FinalLongTest: java.lang.Long[] nums>"
    "$r5 = new java.lang.Long"
    "$i5 = i7 + 1"
    "$l6 = (long) $i5"
    "specialinvoke $r5.<java.lang.Long: void <init>(long)>($l6)"
    "$r6[i7] = $r5"
    "i7 = i7 + 1"
    "goto [?= $i0 = <jsr166tests.loops.FinalLongTest: int LEN>]"
    "$i1 = <jsr166tests.loops.FinalLongTest: int npairs>"
    "r8 = newarray (java.lang.Thread)[$i1]"
    "$i2 = <jsr166tests.loops.FinalLongTest: int npairs>"
    "r0 = newarray (jsr166tests.loops.FinalLongTest$Reader)[$i2]"
    "i8 = 0"
    "$i3 = <jsr166tests.loops.FinalLongTest: int npairs>"
    "if i8 >= $i3 goto i9 = 0"
    "$r3 = new jsr166tests.loops.FinalLongTest$Writer"
    "specialinvoke $r3.<jsr166tests.loops.FinalLongTest$Writer: void <init>()>()"
    "r8[i8] = $r3"
    "$r4 = new jsr166tests.loops.FinalLongTest$Reader"
    "specialinvoke $r4.<jsr166tests.loops.FinalLongTest$Reader: void <init>()>()"
    "r0[i8] = $r4"
    "i8 = i8 + 1"
    "goto [?= $i3 = <jsr166tests.loops.FinalLongTest: int npairs>]"
    "i9 = 0"
    "$i4 = lengthof r0"
    "if i9 >= $i4 goto return"
    "$r1 = r8[i9]"
    "virtualinvoke $r1.<java.lang.Thread: void start()>()"
    "$r2 = r0[i9]"
    "virtualinvoke $r2.<java.lang.Thread: void start()>()"
    "i9 = i9 + 1"
    "goto [?= $i4 = lengthof r0]"
    "return"
    "r7 := @parameter0: java.lang.String[]"->"i7 = 0";
    "i7 = 0"->"$i0 = <jsr166tests.loops.FinalLongTest: int LEN>";
    "$i0 = <jsr166tests.loops.FinalLongTest: int LEN>"->"if i7 >= $i0 goto $i1 = <jsr166tests.loops.FinalLongTest: int npairs>";
    "if i7 >= $i0 goto $i1 = <jsr166tests.loops.FinalLongTest: int npairs>"->"$r6 = <jsr166tests.loops.FinalLongTest: java.lang.Long[] nums>";
    "if i7 >= $i0 goto $i1 = <jsr166tests.loops.FinalLongTest: int npairs>"->"$i1 = <jsr166tests.loops.FinalLongTest: int npairs>";
    "$r6 = <jsr166tests.loops.FinalLongTest: java.lang.Long[] nums>"->"$r5 = new java.lang.Long";
    "$r5 = new java.lang.Long"->"$i5 = i7 + 1";
    "$i5 = i7 + 1"->"$l6 = (long) $i5";
    "$l6 = (long) $i5"->"specialinvoke $r5.<java.lang.Long: void <init>(long)>($l6)";
    "specialinvoke $r5.<java.lang.Long: void <init>(long)>($l6)"->"$r6[i7] = $r5";
    "$r6[i7] = $r5"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= $i0 = <jsr166tests.loops.FinalLongTest: int LEN>]";
    "goto [?= $i0 = <jsr166tests.loops.FinalLongTest: int LEN>]"->"$i0 = <jsr166tests.loops.FinalLongTest: int LEN>";
    "$i1 = <jsr166tests.loops.FinalLongTest: int npairs>"->"r8 = newarray (java.lang.Thread)[$i1]";
    "r8 = newarray (java.lang.Thread)[$i1]"->"$i2 = <jsr166tests.loops.FinalLongTest: int npairs>";
    "$i2 = <jsr166tests.loops.FinalLongTest: int npairs>"->"r0 = newarray (jsr166tests.loops.FinalLongTest$Reader)[$i2]";
    "r0 = newarray (jsr166tests.loops.FinalLongTest$Reader)[$i2]"->"i8 = 0";
    "i8 = 0"->"$i3 = <jsr166tests.loops.FinalLongTest: int npairs>";
    "$i3 = <jsr166tests.loops.FinalLongTest: int npairs>"->"if i8 >= $i3 goto i9 = 0";
    "if i8 >= $i3 goto i9 = 0"->"$r3 = new jsr166tests.loops.FinalLongTest$Writer";
    "if i8 >= $i3 goto i9 = 0"->"i9 = 0";
    "$r3 = new jsr166tests.loops.FinalLongTest$Writer"->"specialinvoke $r3.<jsr166tests.loops.FinalLongTest$Writer: void <init>()>()";
    "specialinvoke $r3.<jsr166tests.loops.FinalLongTest$Writer: void <init>()>()"->"r8[i8] = $r3";
    "r8[i8] = $r3"->"$r4 = new jsr166tests.loops.FinalLongTest$Reader";
    "$r4 = new jsr166tests.loops.FinalLongTest$Reader"->"specialinvoke $r4.<jsr166tests.loops.FinalLongTest$Reader: void <init>()>()";
    "specialinvoke $r4.<jsr166tests.loops.FinalLongTest$Reader: void <init>()>()"->"r0[i8] = $r4";
    "r0[i8] = $r4"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= $i3 = <jsr166tests.loops.FinalLongTest: int npairs>]";
    "goto [?= $i3 = <jsr166tests.loops.FinalLongTest: int npairs>]"->"$i3 = <jsr166tests.loops.FinalLongTest: int npairs>";
    "i9 = 0"->"$i4 = lengthof r0";
    "$i4 = lengthof r0"->"if i9 >= $i4 goto return";
    "if i9 >= $i4 goto return"->"$r1 = r8[i9]";
    "if i9 >= $i4 goto return"->"return";
    "$r1 = r8[i9]"->"virtualinvoke $r1.<java.lang.Thread: void start()>()";
    "virtualinvoke $r1.<java.lang.Thread: void start()>()"->"$r2 = r0[i9]";
    "$r2 = r0[i9]"->"virtualinvoke $r2.<java.lang.Thread: void start()>()";
    "virtualinvoke $r2.<java.lang.Thread: void start()>()"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= $i4 = lengthof r0]";
    "goto [?= $i4 = lengthof r0]"->"$i4 = lengthof r0";
}
