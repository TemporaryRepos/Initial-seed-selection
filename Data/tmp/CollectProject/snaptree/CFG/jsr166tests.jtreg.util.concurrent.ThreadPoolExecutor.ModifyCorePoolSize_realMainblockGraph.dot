digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r8 := @parameter0: java.lang.String[];
b0 = 10;
$r0 = new java.util.concurrent.ScheduledThreadPoolExecutor;
specialinvoke $r0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(10);
r1 = $r0;
$r2 = new jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize$1;
specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize$1: void <init>()>();
r3 = $r2;
i4 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= 10 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void awaitPoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 10);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = i4 + 1;
$l2 = (long) $i1;
$l3 = 100L * $l2;
$r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke r1.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r3, $l3, 1000L, $r6);
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void awaitPoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 10);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void setCorePoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 7);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void setCorePoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 13);
virtualinvoke r1.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.List shutdownNow()>();
$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$z0 = virtualinvoke r1.<java.util.concurrent.ScheduledThreadPoolExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(1L, $r5);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void check(boolean)>($z0);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r8 := @parameter0: java.lang.String[];
b0 = 10;
$r0 = new java.util.concurrent.ScheduledThreadPoolExecutor;
specialinvoke $r0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(10);
r1 = $r0;
$r2 = new jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize$1;
specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize$1: void <init>()>();
r3 = $r2;
i4 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= 10 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void awaitPoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 10);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= 10 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void awaitPoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 10);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = i4 + 1;
$l2 = (long) $i1;
$l3 = 100L * $l2;
$r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke r1.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r3, $l3, 1000L, $r6);
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= 10 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void awaitPoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 10);
"->"Block 3:
[preds: 1 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void awaitPoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 10);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void setCorePoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 7);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void setCorePoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 13);
virtualinvoke r1.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.List shutdownNow()>();
$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>;
$z0 = virtualinvoke r1.<java.util.concurrent.ScheduledThreadPoolExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(1L, $r5);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void check(boolean)>($z0);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$i1 = i4 + 1;
$l2 = (long) $i1;
$l3 = 100L * $l2;
$r6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
virtualinvoke r1.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r3, $l3, 1000L, $r6);
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= 10 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void awaitPoolSize(java.util.concurrent.ThreadPoolExecutor,int)>(r1, 10);
";
}
