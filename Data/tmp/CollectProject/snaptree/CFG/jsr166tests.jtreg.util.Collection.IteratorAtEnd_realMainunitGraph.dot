digraph "unitGraph" {
    "r21 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.ArrayList"
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r0)"
    "$r1 = new java.util.Vector"
    "specialinvoke $r1.<java.util.Vector: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r1)"
    "$r2 = new java.util.LinkedList"
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r2)"
    "$r3 = new java.util.ArrayDeque"
    "specialinvoke $r3.<java.util.ArrayDeque: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r3)"
    "$r4 = new java.util.TreeSet"
    "specialinvoke $r4.<java.util.TreeSet: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r4)"
    "$r5 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r5)"
    "$r6 = new java.util.concurrent.CopyOnWriteArraySet"
    "specialinvoke $r6.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r6)"
    "$r7 = new java.util.concurrent.ConcurrentSkipListSet"
    "specialinvoke $r7.<java.util.concurrent.ConcurrentSkipListSet: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r7)"
    "$r8 = new java.util.PriorityQueue"
    "specialinvoke $r8.<java.util.PriorityQueue: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r8)"
    "$r9 = new java.util.concurrent.LinkedBlockingQueue"
    "specialinvoke $r9.<java.util.concurrent.LinkedBlockingQueue: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r9)"
    "$r10 = new java.util.concurrent.ArrayBlockingQueue"
    "specialinvoke $r10.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(100)"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r10)"
    "$r11 = new java.util.concurrent.ConcurrentLinkedQueue"
    "specialinvoke $r11.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r11)"
    "$r12 = new java.util.HashMap"
    "specialinvoke $r12.<java.util.HashMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r12)"
    "$r13 = new java.util.Hashtable"
    "specialinvoke $r13.<java.util.Hashtable: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r13)"
    "$r14 = new java.util.LinkedHashMap"
    "specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r14)"
    "$r15 = new java.util.WeakHashMap"
    "specialinvoke $r15.<java.util.WeakHashMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r15)"
    "$r16 = new java.util.IdentityHashMap"
    "specialinvoke $r16.<java.util.IdentityHashMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r16)"
    "$r17 = new java.util.concurrent.ConcurrentHashMap"
    "specialinvoke $r17.<java.util.concurrent.ConcurrentHashMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r17)"
    "$r18 = new java.util.concurrent.ConcurrentSkipListMap"
    "specialinvoke $r18.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r18)"
    "$r19 = new edu.stanford.ppl.concurrent.SnapTreeMap"
    "specialinvoke $r19.<edu.stanford.ppl.concurrent.SnapTreeMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r19)"
    "$r20 = new java.util.TreeMap"
    "specialinvoke $r20.<java.util.TreeMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r20)"
    "return"
    "r21 := @parameter0: java.lang.String[]"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"specialinvoke $r0.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r0.<java.util.ArrayList: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r0)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r0)"->"$r1 = new java.util.Vector";
    "$r1 = new java.util.Vector"->"specialinvoke $r1.<java.util.Vector: void <init>()>()";
    "specialinvoke $r1.<java.util.Vector: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r1)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r1)"->"$r2 = new java.util.LinkedList";
    "$r2 = new java.util.LinkedList"->"specialinvoke $r2.<java.util.LinkedList: void <init>()>()";
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r2)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r2)"->"$r3 = new java.util.ArrayDeque";
    "$r3 = new java.util.ArrayDeque"->"specialinvoke $r3.<java.util.ArrayDeque: void <init>()>()";
    "specialinvoke $r3.<java.util.ArrayDeque: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r3)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r3)"->"$r4 = new java.util.TreeSet";
    "$r4 = new java.util.TreeSet"->"specialinvoke $r4.<java.util.TreeSet: void <init>()>()";
    "specialinvoke $r4.<java.util.TreeSet: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r4)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r4)"->"$r5 = new java.util.concurrent.CopyOnWriteArrayList";
    "$r5 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()";
    "specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r5)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r5)"->"$r6 = new java.util.concurrent.CopyOnWriteArraySet";
    "$r6 = new java.util.concurrent.CopyOnWriteArraySet"->"specialinvoke $r6.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()";
    "specialinvoke $r6.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r6)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r6)"->"$r7 = new java.util.concurrent.ConcurrentSkipListSet";
    "$r7 = new java.util.concurrent.ConcurrentSkipListSet"->"specialinvoke $r7.<java.util.concurrent.ConcurrentSkipListSet: void <init>()>()";
    "specialinvoke $r7.<java.util.concurrent.ConcurrentSkipListSet: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r7)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r7)"->"$r8 = new java.util.PriorityQueue";
    "$r8 = new java.util.PriorityQueue"->"specialinvoke $r8.<java.util.PriorityQueue: void <init>()>()";
    "specialinvoke $r8.<java.util.PriorityQueue: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r8)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r8)"->"$r9 = new java.util.concurrent.LinkedBlockingQueue";
    "$r9 = new java.util.concurrent.LinkedBlockingQueue"->"specialinvoke $r9.<java.util.concurrent.LinkedBlockingQueue: void <init>()>()";
    "specialinvoke $r9.<java.util.concurrent.LinkedBlockingQueue: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r9)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r9)"->"$r10 = new java.util.concurrent.ArrayBlockingQueue";
    "$r10 = new java.util.concurrent.ArrayBlockingQueue"->"specialinvoke $r10.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(100)";
    "specialinvoke $r10.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(100)"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r10)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r10)"->"$r11 = new java.util.concurrent.ConcurrentLinkedQueue";
    "$r11 = new java.util.concurrent.ConcurrentLinkedQueue"->"specialinvoke $r11.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>()";
    "specialinvoke $r11.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r11)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r11)"->"$r12 = new java.util.HashMap";
    "$r12 = new java.util.HashMap"->"specialinvoke $r12.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r12.<java.util.HashMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r12)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r12)"->"$r13 = new java.util.Hashtable";
    "$r13 = new java.util.Hashtable"->"specialinvoke $r13.<java.util.Hashtable: void <init>()>()";
    "specialinvoke $r13.<java.util.Hashtable: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r13)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r13)"->"$r14 = new java.util.LinkedHashMap";
    "$r14 = new java.util.LinkedHashMap"->"specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>()";
    "specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r14)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r14)"->"$r15 = new java.util.WeakHashMap";
    "$r15 = new java.util.WeakHashMap"->"specialinvoke $r15.<java.util.WeakHashMap: void <init>()>()";
    "specialinvoke $r15.<java.util.WeakHashMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r15)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r15)"->"$r16 = new java.util.IdentityHashMap";
    "$r16 = new java.util.IdentityHashMap"->"specialinvoke $r16.<java.util.IdentityHashMap: void <init>()>()";
    "specialinvoke $r16.<java.util.IdentityHashMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r16)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r16)"->"$r17 = new java.util.concurrent.ConcurrentHashMap";
    "$r17 = new java.util.concurrent.ConcurrentHashMap"->"specialinvoke $r17.<java.util.concurrent.ConcurrentHashMap: void <init>()>()";
    "specialinvoke $r17.<java.util.concurrent.ConcurrentHashMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r17)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r17)"->"$r18 = new java.util.concurrent.ConcurrentSkipListMap";
    "$r18 = new java.util.concurrent.ConcurrentSkipListMap"->"specialinvoke $r18.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>()";
    "specialinvoke $r18.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r18)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r18)"->"$r19 = new edu.stanford.ppl.concurrent.SnapTreeMap";
    "$r19 = new edu.stanford.ppl.concurrent.SnapTreeMap"->"specialinvoke $r19.<edu.stanford.ppl.concurrent.SnapTreeMap: void <init>()>()";
    "specialinvoke $r19.<edu.stanford.ppl.concurrent.SnapTreeMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r19)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r19)"->"$r20 = new java.util.TreeMap";
    "$r20 = new java.util.TreeMap"->"specialinvoke $r20.<java.util.TreeMap: void <init>()>()";
    "specialinvoke $r20.<java.util.TreeMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r20)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r20)"->"return";
}
