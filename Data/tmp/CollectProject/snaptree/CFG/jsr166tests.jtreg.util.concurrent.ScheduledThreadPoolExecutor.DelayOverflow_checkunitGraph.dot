digraph "unitGraph" {
    "r0 := @this: jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow"
    "z0 := @parameter0: boolean"
    "if z0 == 0 goto virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void fail()>()"
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void pass()>()"
    "goto [?= return]"
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void fail()>()"
    "return"
    "r0 := @this: jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow"->"z0 := @parameter0: boolean";
    "z0 := @parameter0: boolean"->"if z0 == 0 goto virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void fail()>()";
    "if z0 == 0 goto virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void fail()>()"->"virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void pass()>()";
    "if z0 == 0 goto virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void fail()>()"->"virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void fail()>()";
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void pass()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void fail()>()"->"return";
}
