digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.Object;
r1 := @parameter1: java.lang.Object;
if r0 != null goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if r1 != null goto $r2 = new java.lang.StringBuilder;
"
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void pass()>()];
"
    "Block 3:
[preds: 0 ] [succs: 4 5 ]
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
if $z0 == 0 goto $r2 = new java.lang.StringBuilder;
"
    "Block 4:
[preds: 2 3 ] [succs: 6 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void pass()>();
goto [?= return];
"
    "Block 5:
[preds: 1 3 ] [succs: 6 ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void fail(java.lang.String)>($r6);
"
    "Block 6:
[preds: 4 5 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.Object;
r1 := @parameter1: java.lang.Object;
if r0 != null goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
if r1 != null goto $r2 = new java.lang.StringBuilder;
";
    "Block 0:
[preds: ] [succs: 1 3 ]
r0 := @parameter0: java.lang.Object;
r1 := @parameter1: java.lang.Object;
if r0 != null goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
"->"Block 3:
[preds: 0 ] [succs: 4 5 ]
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
if $z0 == 0 goto $r2 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if r1 != null goto $r2 = new java.lang.StringBuilder;
"->"Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void pass()>()];
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
if r1 != null goto $r2 = new java.lang.StringBuilder;
"->"Block 5:
[preds: 1 3 ] [succs: 6 ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void fail(java.lang.String)>($r6);
";
    "Block 2:
[preds: 1 ] [succs: 4 ]
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void pass()>()];
"->"Block 4:
[preds: 2 3 ] [succs: 6 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void pass()>();
goto [?= return];
";
    "Block 3:
[preds: 0 ] [succs: 4 5 ]
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
if $z0 == 0 goto $r2 = new java.lang.StringBuilder;
"->"Block 4:
[preds: 2 3 ] [succs: 6 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void pass()>();
goto [?= return];
";
    "Block 3:
[preds: 0 ] [succs: 4 5 ]
$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);
if $z0 == 0 goto $r2 = new java.lang.StringBuilder;
"->"Block 5:
[preds: 1 3 ] [succs: 6 ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void fail(java.lang.String)>($r6);
";
    "Block 4:
[preds: 2 3 ] [succs: 6 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void pass()>();
goto [?= return];
"->"Block 6:
[preds: 4 5 ] [succs: ]
return;
";
    "Block 5:
[preds: 1 3 ] [succs: 6 ]
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \");
$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.BlockingTaskExecutor: void fail(java.lang.String)>($r6);
"->"Block 6:
[preds: 4 5 ] [succs: ]
return;
";
}
