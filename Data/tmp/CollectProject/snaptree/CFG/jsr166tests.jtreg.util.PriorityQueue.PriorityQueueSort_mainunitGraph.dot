digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "i5 = 10000"
    "$i0 = lengthof r0"
    "if $i0 <= 0 goto $r1 = new java.util.ArrayList"
    "$r21 = r0[0]"
    "i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21)"
    "$r1 = new java.util.ArrayList"
    "specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i5)"
    "r2 = $r1"
    "i6 = 0"
    "if i6 >= i5 goto $r3 = new java.util.ArrayList"
    "$r20 = new java.lang.Integer"
    "specialinvoke $r20.<java.lang.Integer: void <init>(int)>(i6)"
    "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r20)"
    "i6 = i6 + 1"
    "goto [?= (branch)]"
    "$r3 = new java.util.ArrayList"
    "specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)"
    "r22 = $r3"
    "staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r22)"
    "$r4 = new java.util.PriorityQueue"
    "$r5 = new jsr166tests.jtreg.util.PriorityQueue.PriorityQueueSort$MyComparator"
    "specialinvoke $r5.<jsr166tests.jtreg.util.PriorityQueue.PriorityQueueSort$MyComparator: void <init>()>()"
    "specialinvoke $r4.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>(i5, $r5)"
    "r23 = $r4"
    "r24 = interfaceinvoke r22.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto $r6 = new java.util.ArrayList"
    "$r19 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()"
    "interfaceinvoke r23.<java.util.Queue: boolean add(java.lang.Object)>($r19)"
    "goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]"
    "$r6 = new java.util.ArrayList"
    "specialinvoke $r6.<java.util.ArrayList: void <init>()>()"
    "r25 = $r6"
    "$z1 = interfaceinvoke r23.<java.util.Queue: boolean isEmpty()>()"
    "if $z1 != 0 goto $z2 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"
    "$r18 = interfaceinvoke r23.<java.util.Queue: java.lang.Object remove()>()"
    "interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r18)"
    "goto [?= $z1 = interfaceinvoke r23.<java.util.Queue: boolean isEmpty()>()]"
    "$z2 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"
    "if $z2 != 0 goto interfaceinvoke r25.<java.util.List: void clear()>()"
    "$r17 = new java.lang.RuntimeException"
    "specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Sort test failed\")"
    "throw $r17"
    "interfaceinvoke r25.<java.util.List: void clear()>()"
    "$r7 = new java.util.PriorityQueue"
    "specialinvoke $r7.<java.util.PriorityQueue: void <init>(java.util.Collection)>(r22)"
    "r26 = $r7"
    "$z3 = interfaceinvoke r26.<java.util.Queue: boolean isEmpty()>()"
    "if $z3 != 0 goto $z4 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"
    "$r16 = interfaceinvoke r26.<java.util.Queue: java.lang.Object remove()>()"
    "interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r16)"
    "goto [?= $z3 = interfaceinvoke r26.<java.util.Queue: boolean isEmpty()>()]"
    "$z4 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"
    "if $z4 != 0 goto $r8 = new java.util.PriorityQueue"
    "$r15 = new java.lang.RuntimeException"
    "specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Sort test failed\")"
    "throw $r15"
    "$r8 = new java.util.PriorityQueue"
    "specialinvoke $r8.<java.util.PriorityQueue: void <init>(java.util.Collection)>(r22)"
    "r27 = $r8"
    "r28 = interfaceinvoke r27.<java.util.Queue: java.util.Iterator iterator()>()"
    "$z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()"
    "if $z12 == 0 goto interfaceinvoke r25.<java.util.List: void clear()>()"
    "$r13 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()"
    "$r14 = (java.lang.Integer) $r13"
    "$i3 = virtualinvoke $r14.<java.lang.Integer: int intValue()>()"
    "$i4 = $i3 & 1"
    "if $i4 != 1 goto $z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()"
    "interfaceinvoke r28.<java.util.Iterator: void remove()>()"
    "goto [?= $z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]"
    "$z5 = interfaceinvoke r27.<java.util.Queue: boolean isEmpty()>()"
    "if $z5 != 0 goto r29 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"
    "$r12 = interfaceinvoke r27.<java.util.Queue: java.lang.Object remove()>()"
    "interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r12)"
    "goto [?= $z5 = interfaceinvoke r27.<java.util.Queue: boolean isEmpty()>()]"
    "r29 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"
    "$z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"
    "if $z13 == 0 goto $z6 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"
    "$r10 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()"
    "$r11 = (java.lang.Integer) $r10"
    "$i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()"
    "$i2 = $i1 & 1"
    "if $i2 != 1 goto $z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"
    "interfaceinvoke r29.<java.util.Iterator: void remove()>()"
    "goto [?= $z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]"
    "$z6 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"
    "if $z6 != 0 goto return"
    "$r9 = new java.lang.RuntimeException"
    "specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Iterator remove test failed.\")"
    "throw $r9"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"i5 = 10000";
    "i5 = 10000"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 <= 0 goto $r1 = new java.util.ArrayList";
    "if $i0 <= 0 goto $r1 = new java.util.ArrayList"->"$r21 = r0[0]";
    "if $i0 <= 0 goto $r1 = new java.util.ArrayList"->"$r1 = new java.util.ArrayList";
    "$r21 = r0[0]"->"i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21)";
    "i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r21)"->"$r1 = new java.util.ArrayList";
    "$r1 = new java.util.ArrayList"->"specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i5)";
    "specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(i5)"->"r2 = $r1";
    "r2 = $r1"->"i6 = 0";
    "i6 = 0"->"if i6 >= i5 goto $r3 = new java.util.ArrayList";
    "if i6 >= i5 goto $r3 = new java.util.ArrayList"->"$r20 = new java.lang.Integer";
    "if i6 >= i5 goto $r3 = new java.util.ArrayList"->"$r3 = new java.util.ArrayList";
    "$r20 = new java.lang.Integer"->"specialinvoke $r20.<java.lang.Integer: void <init>(int)>(i6)";
    "specialinvoke $r20.<java.lang.Integer: void <init>(int)>(i6)"->"interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r20)";
    "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r20)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= i5 goto $r3 = new java.util.ArrayList";
    "$r3 = new java.util.ArrayList"->"specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)";
    "specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r2)"->"r22 = $r3";
    "r22 = $r3"->"staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r22)";
    "staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r22)"->"$r4 = new java.util.PriorityQueue";
    "$r4 = new java.util.PriorityQueue"->"$r5 = new jsr166tests.jtreg.util.PriorityQueue.PriorityQueueSort$MyComparator";
    "$r5 = new jsr166tests.jtreg.util.PriorityQueue.PriorityQueueSort$MyComparator"->"specialinvoke $r5.<jsr166tests.jtreg.util.PriorityQueue.PriorityQueueSort$MyComparator: void <init>()>()";
    "specialinvoke $r5.<jsr166tests.jtreg.util.PriorityQueue.PriorityQueueSort$MyComparator: void <init>()>()"->"specialinvoke $r4.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>(i5, $r5)";
    "specialinvoke $r4.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>(i5, $r5)"->"r23 = $r4";
    "r23 = $r4"->"r24 = interfaceinvoke r22.<java.util.List: java.util.Iterator iterator()>()";
    "r24 = interfaceinvoke r22.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto $r6 = new java.util.ArrayList";
    "if $z0 == 0 goto $r6 = new java.util.ArrayList"->"$r19 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto $r6 = new java.util.ArrayList"->"$r6 = new java.util.ArrayList";
    "$r19 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>()"->"interfaceinvoke r23.<java.util.Queue: boolean add(java.lang.Object)>($r19)";
    "interfaceinvoke r23.<java.util.Queue: boolean add(java.lang.Object)>($r19)"->"goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>()";
    "$r6 = new java.util.ArrayList"->"specialinvoke $r6.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r6.<java.util.ArrayList: void <init>()>()"->"r25 = $r6";
    "r25 = $r6"->"$z1 = interfaceinvoke r23.<java.util.Queue: boolean isEmpty()>()";
    "$z1 = interfaceinvoke r23.<java.util.Queue: boolean isEmpty()>()"->"if $z1 != 0 goto $z2 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)";
    "if $z1 != 0 goto $z2 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"$r18 = interfaceinvoke r23.<java.util.Queue: java.lang.Object remove()>()";
    "if $z1 != 0 goto $z2 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"$z2 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)";
    "$r18 = interfaceinvoke r23.<java.util.Queue: java.lang.Object remove()>()"->"interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r18)";
    "interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r18)"->"goto [?= $z1 = interfaceinvoke r23.<java.util.Queue: boolean isEmpty()>()]";
    "goto [?= $z1 = interfaceinvoke r23.<java.util.Queue: boolean isEmpty()>()]"->"$z1 = interfaceinvoke r23.<java.util.Queue: boolean isEmpty()>()";
    "$z2 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"if $z2 != 0 goto interfaceinvoke r25.<java.util.List: void clear()>()";
    "if $z2 != 0 goto interfaceinvoke r25.<java.util.List: void clear()>()"->"$r17 = new java.lang.RuntimeException";
    "if $z2 != 0 goto interfaceinvoke r25.<java.util.List: void clear()>()"->"interfaceinvoke r25.<java.util.List: void clear()>()";
    "$r17 = new java.lang.RuntimeException"->"specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Sort test failed\")";
    "specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Sort test failed\")"->"throw $r17";
    "interfaceinvoke r25.<java.util.List: void clear()>()"->"$r7 = new java.util.PriorityQueue";
    "$r7 = new java.util.PriorityQueue"->"specialinvoke $r7.<java.util.PriorityQueue: void <init>(java.util.Collection)>(r22)";
    "specialinvoke $r7.<java.util.PriorityQueue: void <init>(java.util.Collection)>(r22)"->"r26 = $r7";
    "r26 = $r7"->"$z3 = interfaceinvoke r26.<java.util.Queue: boolean isEmpty()>()";
    "$z3 = interfaceinvoke r26.<java.util.Queue: boolean isEmpty()>()"->"if $z3 != 0 goto $z4 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)";
    "if $z3 != 0 goto $z4 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"$r16 = interfaceinvoke r26.<java.util.Queue: java.lang.Object remove()>()";
    "if $z3 != 0 goto $z4 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"$z4 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)";
    "$r16 = interfaceinvoke r26.<java.util.Queue: java.lang.Object remove()>()"->"interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r16)";
    "interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r16)"->"goto [?= $z3 = interfaceinvoke r26.<java.util.Queue: boolean isEmpty()>()]";
    "goto [?= $z3 = interfaceinvoke r26.<java.util.Queue: boolean isEmpty()>()]"->"$z3 = interfaceinvoke r26.<java.util.Queue: boolean isEmpty()>()";
    "$z4 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"if $z4 != 0 goto $r8 = new java.util.PriorityQueue";
    "if $z4 != 0 goto $r8 = new java.util.PriorityQueue"->"$r15 = new java.lang.RuntimeException";
    "if $z4 != 0 goto $r8 = new java.util.PriorityQueue"->"$r8 = new java.util.PriorityQueue";
    "$r15 = new java.lang.RuntimeException"->"specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Sort test failed\")";
    "specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Sort test failed\")"->"throw $r15";
    "$r8 = new java.util.PriorityQueue"->"specialinvoke $r8.<java.util.PriorityQueue: void <init>(java.util.Collection)>(r22)";
    "specialinvoke $r8.<java.util.PriorityQueue: void <init>(java.util.Collection)>(r22)"->"r27 = $r8";
    "r27 = $r8"->"r28 = interfaceinvoke r27.<java.util.Queue: java.util.Iterator iterator()>()";
    "r28 = interfaceinvoke r27.<java.util.Queue: java.util.Iterator iterator()>()"->"$z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()";
    "$z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()"->"if $z12 == 0 goto interfaceinvoke r25.<java.util.List: void clear()>()";
    "if $z12 == 0 goto interfaceinvoke r25.<java.util.List: void clear()>()"->"$r13 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()";
    "if $z12 == 0 goto interfaceinvoke r25.<java.util.List: void clear()>()"->"interfaceinvoke r25.<java.util.List: void clear()>()";
    "$r13 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>()"->"$r14 = (java.lang.Integer) $r13";
    "$r14 = (java.lang.Integer) $r13"->"$i3 = virtualinvoke $r14.<java.lang.Integer: int intValue()>()";
    "$i3 = virtualinvoke $r14.<java.lang.Integer: int intValue()>()"->"$i4 = $i3 & 1";
    "$i4 = $i3 & 1"->"if $i4 != 1 goto $z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()";
    "if $i4 != 1 goto $z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()"->"interfaceinvoke r28.<java.util.Iterator: void remove()>()";
    "if $i4 != 1 goto $z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()"->"$z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()";
    "interfaceinvoke r28.<java.util.Iterator: void remove()>()"->"goto [?= $z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()]"->"$z12 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>()";
    "interfaceinvoke r25.<java.util.List: void clear()>()"->"$z5 = interfaceinvoke r27.<java.util.Queue: boolean isEmpty()>()";
    "$z5 = interfaceinvoke r27.<java.util.Queue: boolean isEmpty()>()"->"if $z5 != 0 goto r29 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()";
    "if $z5 != 0 goto r29 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"->"$r12 = interfaceinvoke r27.<java.util.Queue: java.lang.Object remove()>()";
    "if $z5 != 0 goto r29 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"->"r29 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()";
    "$r12 = interfaceinvoke r27.<java.util.Queue: java.lang.Object remove()>()"->"interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r12)";
    "interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r12)"->"goto [?= $z5 = interfaceinvoke r27.<java.util.Queue: boolean isEmpty()>()]";
    "goto [?= $z5 = interfaceinvoke r27.<java.util.Queue: boolean isEmpty()>()]"->"$z5 = interfaceinvoke r27.<java.util.Queue: boolean isEmpty()>()";
    "r29 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>()"->"$z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()";
    "$z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"->"if $z13 == 0 goto $z6 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)";
    "if $z13 == 0 goto $z6 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"$r10 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()";
    "if $z13 == 0 goto $z6 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"$z6 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)";
    "$r10 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>()"->"$r11 = (java.lang.Integer) $r10";
    "$r11 = (java.lang.Integer) $r10"->"$i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()";
    "$i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>()"->"$i2 = $i1 & 1";
    "$i2 = $i1 & 1"->"if $i2 != 1 goto $z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()";
    "if $i2 != 1 goto $z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"->"interfaceinvoke r29.<java.util.Iterator: void remove()>()";
    "if $i2 != 1 goto $z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()"->"$z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()";
    "interfaceinvoke r29.<java.util.Iterator: void remove()>()"->"goto [?= $z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()]"->"$z13 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>()";
    "$z6 = interfaceinvoke r25.<java.util.List: boolean equals(java.lang.Object)>(r2)"->"if $z6 != 0 goto return";
    "if $z6 != 0 goto return"->"$r9 = new java.lang.RuntimeException";
    "if $z6 != 0 goto return"->"return";
    "$r9 = new java.lang.RuntimeException"->"specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Iterator remove test failed.\")";
    "specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Iterator remove test failed.\")"->"throw $r9";
}
