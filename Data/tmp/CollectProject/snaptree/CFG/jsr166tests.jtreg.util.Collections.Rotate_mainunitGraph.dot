digraph "unitGraph" {
    "r36 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.util.List)[3]"
    "$r1 = new java.util.ArrayList"
    "specialinvoke $r1.<java.util.ArrayList: void <init>()>()"
    "$r0[0] = $r1"
    "$r2 = new java.util.LinkedList"
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"
    "$r0[1] = $r2"
    "$r3 = new java.util.Vector"
    "specialinvoke $r3.<java.util.Vector: void <init>()>()"
    "$r0[2] = $r3"
    "r4 = $r0"
    "i6 = 0"
    "$i0 = lengthof r4"
    "if i6 >= $i0 goto return"
    "r5 = r4[i6]"
    "i7 = 0"
    "if i7 >= 120 goto i8 = 0"
    "$r35 = new java.lang.Integer"
    "specialinvoke $r35.<java.lang.Integer: void <init>(int)>(i7)"
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r35)"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "i8 = 0"
    "i9 = 0"
    "if i9 >= 10000 goto i6 = i6 + 1"
    "$r6 = <jsr166tests.jtreg.util.Collections.Rotate: java.util.Random rnd>"
    "$i1 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(200)"
    "i2 = $i1 - 100"
    "staticinvoke <java.util.Collections: void rotate(java.util.List,int)>(r5, i2)"
    "$i3 = i8 + i2"
    "i8 = $i3 % 120"
    "if i8 >= 0 goto i10 = 0"
    "i8 = i8 + 120"
    "i10 = 0"
    "i11 = i8"
    "if i11 >= 120 goto i12 = 0"
    "$r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11)"
    "$r22 = (java.lang.Integer) $r21"
    "$i5 = virtualinvoke $r22.<java.lang.Integer: int intValue()>()"
    "if $i5 == i10 goto i11 = i11 + 1"
    "$r23 = new java.lang.Exception"
    "$r24 = new java.lang.StringBuilder"
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\")"
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11)"
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"
    "$r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11)"
    "$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30)"
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \")"
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10)"
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>($r34)"
    "throw $r23"
    "i11 = i11 + 1"
    "i10 = i10 + 1"
    "i12 = 0"
    "if i12 >= i8 goto i9 = i9 + 1"
    "$r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12)"
    "$r8 = (java.lang.Integer) $r7"
    "$i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>()"
    "if $i4 == i10 goto i12 = i12 + 1"
    "$r9 = new java.lang.Exception"
    "$r10 = new java.lang.StringBuilder"
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\")"
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12)"
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"
    "$r16 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12)"
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r20)"
    "throw $r9"
    "i12 = i12 + 1"
    "i9 = i9 + 1"
    "i6 = i6 + 1"
    "goto [?= $i0 = lengthof r4]"
    "return"
    "r36 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.util.List)[3]";
    "$r0 = newarray (java.util.List)[3]"->"$r1 = new java.util.ArrayList";
    "$r1 = new java.util.ArrayList"->"specialinvoke $r1.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r1.<java.util.ArrayList: void <init>()>()"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = new java.util.LinkedList";
    "$r2 = new java.util.LinkedList"->"specialinvoke $r2.<java.util.LinkedList: void <init>()>()";
    "specialinvoke $r2.<java.util.LinkedList: void <init>()>()"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = new java.util.Vector";
    "$r3 = new java.util.Vector"->"specialinvoke $r3.<java.util.Vector: void <init>()>()";
    "specialinvoke $r3.<java.util.Vector: void <init>()>()"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"r4 = $r0";
    "r4 = $r0"->"i6 = 0";
    "i6 = 0"->"$i0 = lengthof r4";
    "$i0 = lengthof r4"->"if i6 >= $i0 goto return";
    "if i6 >= $i0 goto return"->"r5 = r4[i6]";
    "if i6 >= $i0 goto return"->"return";
    "r5 = r4[i6]"->"i7 = 0";
    "i7 = 0"->"if i7 >= 120 goto i8 = 0";
    "if i7 >= 120 goto i8 = 0"->"$r35 = new java.lang.Integer";
    "if i7 >= 120 goto i8 = 0"->"i8 = 0";
    "$r35 = new java.lang.Integer"->"specialinvoke $r35.<java.lang.Integer: void <init>(int)>(i7)";
    "specialinvoke $r35.<java.lang.Integer: void <init>(int)>(i7)"->"interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r35)";
    "interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r35)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= 120 goto i8 = 0";
    "i8 = 0"->"i9 = 0";
    "i9 = 0"->"if i9 >= 10000 goto i6 = i6 + 1";
    "if i9 >= 10000 goto i6 = i6 + 1"->"$r6 = <jsr166tests.jtreg.util.Collections.Rotate: java.util.Random rnd>";
    "if i9 >= 10000 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$r6 = <jsr166tests.jtreg.util.Collections.Rotate: java.util.Random rnd>"->"$i1 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(200)";
    "$i1 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(200)"->"i2 = $i1 - 100";
    "i2 = $i1 - 100"->"staticinvoke <java.util.Collections: void rotate(java.util.List,int)>(r5, i2)";
    "staticinvoke <java.util.Collections: void rotate(java.util.List,int)>(r5, i2)"->"$i3 = i8 + i2";
    "$i3 = i8 + i2"->"i8 = $i3 % 120";
    "i8 = $i3 % 120"->"if i8 >= 0 goto i10 = 0";
    "if i8 >= 0 goto i10 = 0"->"i8 = i8 + 120";
    "if i8 >= 0 goto i10 = 0"->"i10 = 0";
    "i8 = i8 + 120"->"i10 = 0";
    "i10 = 0"->"i11 = i8";
    "i11 = i8"->"if i11 >= 120 goto i12 = 0";
    "if i11 >= 120 goto i12 = 0"->"$r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11)";
    "if i11 >= 120 goto i12 = 0"->"i12 = 0";
    "$r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11)"->"$r22 = (java.lang.Integer) $r21";
    "$r22 = (java.lang.Integer) $r21"->"$i5 = virtualinvoke $r22.<java.lang.Integer: int intValue()>()";
    "$i5 = virtualinvoke $r22.<java.lang.Integer: int intValue()>()"->"if $i5 == i10 goto i11 = i11 + 1";
    "if $i5 == i10 goto i11 = i11 + 1"->"$r23 = new java.lang.Exception";
    "if $i5 == i10 goto i11 = i11 + 1"->"i11 = i11 + 1";
    "$r23 = new java.lang.Exception"->"$r24 = new java.lang.StringBuilder";
    "$r24 = new java.lang.StringBuilder"->"specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\")";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\")"->"$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11)";
    "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11)"->"$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")";
    "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"->"$r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11)";
    "$r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11)"->"$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30)";
    "$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30)"->"$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \")";
    "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \")"->"$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10)";
    "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10)"->"$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>($r34)";
    "specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>($r34)"->"throw $r23";
    "i11 = i11 + 1"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 >= 120 goto i12 = 0";
    "i12 = 0"->"if i12 >= i8 goto i9 = i9 + 1";
    "if i12 >= i8 goto i9 = i9 + 1"->"$r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12)";
    "if i12 >= i8 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "$r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12)"->"$r8 = (java.lang.Integer) $r7";
    "$r8 = (java.lang.Integer) $r7"->"$i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>()";
    "$i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>()"->"if $i4 == i10 goto i12 = i12 + 1";
    "if $i4 == i10 goto i12 = i12 + 1"->"$r9 = new java.lang.Exception";
    "if $i4 == i10 goto i12 = i12 + 1"->"i12 = i12 + 1";
    "$r9 = new java.lang.Exception"->"$r10 = new java.lang.StringBuilder";
    "$r10 = new java.lang.StringBuilder"->"specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\")";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\")"->"$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12)";
    "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12)"->"$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")";
    "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\")"->"$r16 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12)";
    "$r16 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12)"->"$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16)";
    "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r20)";
    "specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r20)"->"throw $r9";
    "i12 = i12 + 1"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i12 >= i8 goto i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 >= 10000 goto i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= $i0 = lengthof r4]";
    "goto [?= $i0 = lengthof r4]"->"$i0 = lengthof r4";
}
