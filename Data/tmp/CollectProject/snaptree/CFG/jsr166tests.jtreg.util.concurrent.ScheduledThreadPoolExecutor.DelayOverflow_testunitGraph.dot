digraph "unitGraph" {
    "r3 := @this: jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow"
    "r25 := @parameter0: java.lang.String[]"
    "i2 = 0"
    "if i2 >= 4 goto return"
    "i3 = 0"
    "if i3 >= 4 goto i4 = i2"
    "$r10 = new java.util.concurrent.ScheduledThreadPoolExecutor"
    "specialinvoke $r10.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(1)"
    "r26 = $r10"
    "$r11 = new java.util.concurrent.CountDownLatch"
    "specialinvoke $r11.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)"
    "r27 = $r11"
    "$r12 = new java.util.concurrent.CountDownLatch"
    "specialinvoke $r12.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)"
    "r28 = $r12"
    "$r13 = new java.util.concurrent.CountDownLatch"
    "specialinvoke $r13.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)"
    "r29 = $r13"
    "$r14 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$1"
    "specialinvoke $r14.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$1: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch)>(r3, r27)"
    "r15 = $r14"
    "$r16 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$2"
    "specialinvoke $r16.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$2: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow)>(r3)"
    "r17 = $r16"
    "$r18 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$3"
    "specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$3: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch,java.util.concurrent.CountDownLatch)>(r3, r28, r29)"
    "r19 = $r18"
    "$r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>"
    "virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(r19, 0L, $r20)"
    "virtualinvoke r28.<java.util.concurrent.CountDownLatch: void await()>()"
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void scheduleNow(java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r26, r15, i2)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void waitForNanoTimeTick()>()"
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void scheduleAtTheEndOfTime(java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r26, r17, i3)"
    "virtualinvoke r29.<java.util.concurrent.CountDownLatch: void countDown()>()"
    "$r22 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>"
    "$z1 = virtualinvoke r27.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(10L, $r22)"
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void check(boolean)>($z1)"
    "$l1 = virtualinvoke r27.<java.util.concurrent.CountDownLatch: long getCount()>()"
    "$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"
    "$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)"
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void equal(java.lang.Object,java.lang.Object)>($r23, $r24)"
    "virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>(0)"
    "virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>()"
    "i3 = i3 + 1"
    "goto [?= (branch)]"
    "i4 = i2"
    "$r0 = new java.util.concurrent.ScheduledThreadPoolExecutor"
    "specialinvoke $r0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(1)"
    "r30 = $r0"
    "$r1 = new java.util.concurrent.CountDownLatch"
    "specialinvoke $r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)"
    "r31 = $r1"
    "$r2 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$4"
    "specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$4: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch)>(r3, r31)"
    "r32 = $r2"
    "$r4 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$5"
    "specialinvoke $r4.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$5: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r3, r30, r32, i4)"
    "r33 = $r4"
    "$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>"
    "virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r33, 0L, 9223372036854775807L, $r5)"
    "$r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>"
    "$z0 = virtualinvoke r31.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(10L, $r7)"
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void check(boolean)>($z0)"
    "$l0 = virtualinvoke r31.<java.util.concurrent.CountDownLatch: long getCount()>()"
    "$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)"
    "$r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)"
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void equal(java.lang.Object,java.lang.Object)>($r8, $r9)"
    "virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>(0)"
    "virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>()"
    "i2 = i2 + 1"
    "return"
    "r3 := @this: jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow"->"r25 := @parameter0: java.lang.String[]";
    "r25 := @parameter0: java.lang.String[]"->"i2 = 0";
    "i2 = 0"->"if i2 >= 4 goto return";
    "if i2 >= 4 goto return"->"i3 = 0";
    "if i2 >= 4 goto return"->"return";
    "i3 = 0"->"if i3 >= 4 goto i4 = i2";
    "if i3 >= 4 goto i4 = i2"->"$r10 = new java.util.concurrent.ScheduledThreadPoolExecutor";
    "if i3 >= 4 goto i4 = i2"->"i4 = i2";
    "$r10 = new java.util.concurrent.ScheduledThreadPoolExecutor"->"specialinvoke $r10.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(1)";
    "specialinvoke $r10.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(1)"->"r26 = $r10";
    "r26 = $r10"->"$r11 = new java.util.concurrent.CountDownLatch";
    "$r11 = new java.util.concurrent.CountDownLatch"->"specialinvoke $r11.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)";
    "specialinvoke $r11.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)"->"r27 = $r11";
    "r27 = $r11"->"$r12 = new java.util.concurrent.CountDownLatch";
    "$r12 = new java.util.concurrent.CountDownLatch"->"specialinvoke $r12.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)";
    "specialinvoke $r12.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)"->"r28 = $r12";
    "r28 = $r12"->"$r13 = new java.util.concurrent.CountDownLatch";
    "$r13 = new java.util.concurrent.CountDownLatch"->"specialinvoke $r13.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)";
    "specialinvoke $r13.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)"->"r29 = $r13";
    "r29 = $r13"->"$r14 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$1";
    "$r14 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$1"->"specialinvoke $r14.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$1: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch)>(r3, r27)";
    "specialinvoke $r14.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$1: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch)>(r3, r27)"->"r15 = $r14";
    "r15 = $r14"->"$r16 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$2";
    "$r16 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$2"->"specialinvoke $r16.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$2: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow)>(r3)";
    "specialinvoke $r16.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$2: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow)>(r3)"->"r17 = $r16";
    "r17 = $r16"->"$r18 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$3";
    "$r18 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$3"->"specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$3: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch,java.util.concurrent.CountDownLatch)>(r3, r28, r29)";
    "specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$3: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch,java.util.concurrent.CountDownLatch)>(r3, r28, r29)"->"r19 = $r18";
    "r19 = $r18"->"$r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>";
    "$r20 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>"->"virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(r19, 0L, $r20)";
    "virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(r19, 0L, $r20)"->"virtualinvoke r28.<java.util.concurrent.CountDownLatch: void await()>()";
    "virtualinvoke r28.<java.util.concurrent.CountDownLatch: void await()>()"->"virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void scheduleNow(java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r26, r15, i2)";
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void scheduleNow(java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r26, r15, i2)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void waitForNanoTimeTick()>()";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void waitForNanoTimeTick()>()"->"virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void scheduleAtTheEndOfTime(java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r26, r17, i3)";
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void scheduleAtTheEndOfTime(java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r26, r17, i3)"->"virtualinvoke r29.<java.util.concurrent.CountDownLatch: void countDown()>()";
    "virtualinvoke r29.<java.util.concurrent.CountDownLatch: void countDown()>()"->"$r22 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>";
    "$r22 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>"->"$z1 = virtualinvoke r27.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(10L, $r22)";
    "$z1 = virtualinvoke r27.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(10L, $r22)"->"virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void check(boolean)>($z1)";
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void check(boolean)>($z1)"->"$l1 = virtualinvoke r27.<java.util.concurrent.CountDownLatch: long getCount()>()";
    "$l1 = virtualinvoke r27.<java.util.concurrent.CountDownLatch: long getCount()>()"->"$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)";
    "$r23 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"->"$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)";
    "$r24 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)"->"virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void equal(java.lang.Object,java.lang.Object)>($r23, $r24)";
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void equal(java.lang.Object,java.lang.Object)>($r23, $r24)"->"virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>(0)";
    "virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>(0)"->"virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>()";
    "virtualinvoke r26.<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>()"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= 4 goto i4 = i2";
    "i4 = i2"->"$r0 = new java.util.concurrent.ScheduledThreadPoolExecutor";
    "$r0 = new java.util.concurrent.ScheduledThreadPoolExecutor"->"specialinvoke $r0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(1)";
    "specialinvoke $r0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(1)"->"r30 = $r0";
    "r30 = $r0"->"$r1 = new java.util.concurrent.CountDownLatch";
    "$r1 = new java.util.concurrent.CountDownLatch"->"specialinvoke $r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)";
    "specialinvoke $r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1)"->"r31 = $r1";
    "r31 = $r1"->"$r2 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$4";
    "$r2 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$4"->"specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$4: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch)>(r3, r31)";
    "specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$4: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.CountDownLatch)>(r3, r31)"->"r32 = $r2";
    "r32 = $r2"->"$r4 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$5";
    "$r4 = new jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$5"->"specialinvoke $r4.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$5: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r3, r30, r32, i4)";
    "specialinvoke $r4.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow$5: void <init>(jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow,java.util.concurrent.ScheduledThreadPoolExecutor,java.lang.Runnable,int)>(r3, r30, r32, i4)"->"r33 = $r4";
    "r33 = $r4"->"$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>";
    "$r5 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>"->"virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r33, 0L, 9223372036854775807L, $r5)";
    "virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit)>(r33, 0L, 9223372036854775807L, $r5)"->"$r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>";
    "$r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>"->"$z0 = virtualinvoke r31.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(10L, $r7)";
    "$z0 = virtualinvoke r31.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(10L, $r7)"->"virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void check(boolean)>($z0)";
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void check(boolean)>($z0)"->"$l0 = virtualinvoke r31.<java.util.concurrent.CountDownLatch: long getCount()>()";
    "$l0 = virtualinvoke r31.<java.util.concurrent.CountDownLatch: long getCount()>()"->"$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)";
    "$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)"->"$r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)";
    "$r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L)"->"virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void equal(java.lang.Object,java.lang.Object)>($r8, $r9)";
    "virtualinvoke r3.<jsr166tests.jtreg.util.concurrent.ScheduledThreadPoolExecutor.DelayOverflow: void equal(java.lang.Object,java.lang.Object)>($r8, $r9)"->"virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>(0)";
    "virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: void setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean)>(0)"->"virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>()";
    "virtualinvoke r30.<java.util.concurrent.ScheduledThreadPoolExecutor: void shutdown()>()"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 4 goto return";
}
