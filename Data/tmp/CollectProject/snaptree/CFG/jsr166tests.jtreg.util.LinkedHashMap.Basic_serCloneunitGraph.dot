digraph "unitGraph" {
    "r3 := @parameter0: java.util.Map"
    "r11 = null"
    "$r0 = new java.io.ByteArrayOutputStream"
    "specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()"
    "r12 = $r0"
    "$r1 = new java.io.ObjectOutputStream"
    "specialinvoke $r1.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r12)"
    "r2 = $r1"
    "virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3)"
    "virtualinvoke r2.<java.io.ObjectOutputStream: void flush()>()"
    "$r4 = new java.io.ByteArrayInputStream"
    "$r5 = virtualinvoke r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"
    "specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)"
    "r6 = $r4"
    "virtualinvoke r2.<java.io.ObjectOutputStream: void close()>()"
    "$r7 = new java.io.ObjectInputStream"
    "specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r6)"
    "r8 = $r7"
    "$r9 = virtualinvoke r8.<java.io.ObjectInputStream: java.lang.Object readObject()>()"
    "r11 = (java.util.Map) $r9"
    "virtualinvoke r8.<java.io.ObjectInputStream: void close()>()"
    "goto [?= return r11]"
    "$r10 := @caughtexception"
    "r13 = $r10"
    "virtualinvoke r13.<java.lang.Exception: void printStackTrace()>()"
    "return r11"
    "r3 := @parameter0: java.util.Map"->"r11 = null";
    "r11 = null"->"$r0 = new java.io.ByteArrayOutputStream";
    "r11 = null"->"$r10 := @caughtexception";
    "$r0 = new java.io.ByteArrayOutputStream"->"specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()";
    "$r0 = new java.io.ByteArrayOutputStream"->"$r10 := @caughtexception";
    "specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()"->"r12 = $r0";
    "specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>()"->"$r10 := @caughtexception";
    "r12 = $r0"->"$r1 = new java.io.ObjectOutputStream";
    "r12 = $r0"->"$r10 := @caughtexception";
    "$r1 = new java.io.ObjectOutputStream"->"specialinvoke $r1.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r12)";
    "$r1 = new java.io.ObjectOutputStream"->"$r10 := @caughtexception";
    "specialinvoke $r1.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r12)"->"r2 = $r1";
    "specialinvoke $r1.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(r12)"->"$r10 := @caughtexception";
    "r2 = $r1"->"virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3)";
    "r2 = $r1"->"$r10 := @caughtexception";
    "virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3)"->"virtualinvoke r2.<java.io.ObjectOutputStream: void flush()>()";
    "virtualinvoke r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r3)"->"$r10 := @caughtexception";
    "virtualinvoke r2.<java.io.ObjectOutputStream: void flush()>()"->"$r4 = new java.io.ByteArrayInputStream";
    "virtualinvoke r2.<java.io.ObjectOutputStream: void flush()>()"->"$r10 := @caughtexception";
    "$r4 = new java.io.ByteArrayInputStream"->"$r5 = virtualinvoke r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()";
    "$r4 = new java.io.ByteArrayInputStream"->"$r10 := @caughtexception";
    "$r5 = virtualinvoke r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)";
    "$r5 = virtualinvoke r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>()"->"$r10 := @caughtexception";
    "specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)"->"r6 = $r4";
    "specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5)"->"$r10 := @caughtexception";
    "r6 = $r4"->"virtualinvoke r2.<java.io.ObjectOutputStream: void close()>()";
    "r6 = $r4"->"$r10 := @caughtexception";
    "virtualinvoke r2.<java.io.ObjectOutputStream: void close()>()"->"$r7 = new java.io.ObjectInputStream";
    "virtualinvoke r2.<java.io.ObjectOutputStream: void close()>()"->"$r10 := @caughtexception";
    "$r7 = new java.io.ObjectInputStream"->"specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r6)";
    "$r7 = new java.io.ObjectInputStream"->"$r10 := @caughtexception";
    "specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r6)"->"r8 = $r7";
    "specialinvoke $r7.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r6)"->"$r10 := @caughtexception";
    "r8 = $r7"->"$r9 = virtualinvoke r8.<java.io.ObjectInputStream: java.lang.Object readObject()>()";
    "r8 = $r7"->"$r10 := @caughtexception";
    "$r9 = virtualinvoke r8.<java.io.ObjectInputStream: java.lang.Object readObject()>()"->"r11 = (java.util.Map) $r9";
    "$r9 = virtualinvoke r8.<java.io.ObjectInputStream: java.lang.Object readObject()>()"->"$r10 := @caughtexception";
    "r11 = (java.util.Map) $r9"->"virtualinvoke r8.<java.io.ObjectInputStream: void close()>()";
    "r11 = (java.util.Map) $r9"->"$r10 := @caughtexception";
    "virtualinvoke r8.<java.io.ObjectInputStream: void close()>()"->"goto [?= return r11]";
    "virtualinvoke r8.<java.io.ObjectInputStream: void close()>()"->"$r10 := @caughtexception";
    "goto [?= return r11]"->"return r11";
    "$r10 := @caughtexception"->"r13 = $r10";
    "r13 = $r10"->"virtualinvoke r13.<java.lang.Exception: void printStackTrace()>()";
    "virtualinvoke r13.<java.lang.Exception: void printStackTrace()>()"->"return r11";
}
