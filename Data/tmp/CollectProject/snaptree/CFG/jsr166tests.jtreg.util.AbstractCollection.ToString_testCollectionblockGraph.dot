digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.Collection;
$r1 = <java.lang.System: java.io.PrintStream out>;
$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>($r2);
$r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r3, \"[]\");
$z0 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(\"x\");
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z0);
$r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r4, \"[x]\");
$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(\"y\");
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z1);
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r5, \"[x, y]\");
$z2 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(null);
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z2);
$r6 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r6, \"[x, y, null]\");
$z3 = r0 instanceof java.util.AbstractCollection;
if $z3 == 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: 2 ]
$z4 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r0);
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z4);
$r7 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r7, \"[x, y, null, (this Collection)]\");
"
    "Block 2:
[preds: 0 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.Collection;
$r1 = <java.lang.System: java.io.PrintStream out>;
$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>($r2);
$r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r3, \"[]\");
$z0 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(\"x\");
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z0);
$r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r4, \"[x]\");
$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(\"y\");
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z1);
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r5, \"[x, y]\");
$z2 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(null);
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z2);
$r6 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r6, \"[x, y, null]\");
$z3 = r0 instanceof java.util.AbstractCollection;
if $z3 == 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: 2 ]
$z4 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r0);
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z4);
$r7 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r7, \"[x, y, null, (this Collection)]\");
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.Collection;
$r1 = <java.lang.System: java.io.PrintStream out>;
$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.Object)>($r2);
$r3 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r3, \"[]\");
$z0 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(\"x\");
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z0);
$r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r4, \"[x]\");
$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(\"y\");
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z1);
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r5, \"[x, y]\");
$z2 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(null);
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z2);
$r6 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r6, \"[x, y, null]\");
$z3 = r0 instanceof java.util.AbstractCollection;
if $z3 == 0 goto return;
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
    "Block 1:
[preds: 0 ] [succs: 2 ]
$z4 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r0);
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void check(boolean)>($z4);
$r7 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractCollection.ToString: void equal(java.lang.Object,java.lang.Object)>($r7, \"[x, y, null, (this Collection)]\");
"->"Block 2:
[preds: 0 1 ] [succs: ]
return;
";
}
