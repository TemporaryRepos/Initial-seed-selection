digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: jsr166tests.loops.MapMicroBenchmark$Job[];
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"warm up\");
staticinvoke <jsr166tests.loops.MapMicroBenchmark: void runWork(jsr166tests.loops.MapMicroBenchmark$Job[],int,int,long)>(r1, 1, 1, 0L);
$r2 = r1[0];
l0 = $r2.<jsr166tests.loops.MapMicroBenchmark$Job: long checkSum>;
i5 = 1;
"
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = lengthof r1;
$i2 = $i1 - 1;
if i5 >= $i2 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r3 = r1[i5];
$l3 = $r3.<jsr166tests.loops.MapMicroBenchmark$Job: long checkSum>;
$b4 = $l3 cmp l0;
if $b4 == 0 goto i5 = i5 + 1;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r4 = new java.lang.Error;
specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"CheckSum\");
throw $r4;
"
    "Block 4:
[preds: 2 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $i1 = lengthof r1];
"
    "Block 5:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: jsr166tests.loops.MapMicroBenchmark$Job[];
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"warm up\");
staticinvoke <jsr166tests.loops.MapMicroBenchmark: void runWork(jsr166tests.loops.MapMicroBenchmark$Job[],int,int,long)>(r1, 1, 1, 0L);
$r2 = r1[0];
l0 = $r2.<jsr166tests.loops.MapMicroBenchmark$Job: long checkSum>;
i5 = 1;
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = lengthof r1;
$i2 = $i1 - 1;
if i5 >= $i2 goto return;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = lengthof r1;
$i2 = $i1 - 1;
if i5 >= $i2 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r3 = r1[i5];
$l3 = $r3.<jsr166tests.loops.MapMicroBenchmark$Job: long checkSum>;
$b4 = $l3 cmp l0;
if $b4 == 0 goto i5 = i5 + 1;
";
    "Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = lengthof r1;
$i2 = $i1 - 1;
if i5 >= $i2 goto return;
"->"Block 5:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r3 = r1[i5];
$l3 = $r3.<jsr166tests.loops.MapMicroBenchmark$Job: long checkSum>;
$b4 = $l3 cmp l0;
if $b4 == 0 goto i5 = i5 + 1;
"->"Block 3:
[preds: 2 ] [succs: ]
$r4 = new java.lang.Error;
specialinvoke $r4.<java.lang.Error: void <init>(java.lang.String)>(\"CheckSum\");
throw $r4;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r3 = r1[i5];
$l3 = $r3.<jsr166tests.loops.MapMicroBenchmark$Job: long checkSum>;
$b4 = $l3 cmp l0;
if $b4 == 0 goto i5 = i5 + 1;
"->"Block 4:
[preds: 2 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $i1 = lengthof r1];
";
    "Block 4:
[preds: 2 ] [succs: 1 ]
i5 = i5 + 1;
goto [?= $i1 = lengthof r1];
"->"Block 1:
[preds: 0 4 ] [succs: 2 5 ]
$i1 = lengthof r1;
$i2 = $i1 - 1;
if i5 >= $i2 goto return;
";
}
