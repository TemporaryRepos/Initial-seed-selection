digraph "unitGraph" {
    "r0 := @parameter0: java.util.Collection"
    "i0 = 0"
    "if i0 >= 6 goto staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)"
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r1)"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)"
    "goto [?= return]"
    "$r2 := @caughtexception"
    "r3 = $r2"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void unexpected(java.lang.Throwable)>(r3)"
    "return"
    "r0 := @parameter0: java.util.Collection"->"i0 = 0";
    "r0 := @parameter0: java.util.Collection"->"$r2 := @caughtexception";
    "i0 = 0"->"if i0 >= 6 goto staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)";
    "i0 = 0"->"$r2 := @caughtexception";
    "if i0 >= 6 goto staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)"->"$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "if i0 >= 6 goto staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)";
    "if i0 >= 6 goto staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)"->"$r2 := @caughtexception";
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r1)";
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r2 := @caughtexception";
    "interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r1)"->"i0 = i0 + 1";
    "interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>($r1)"->"$r2 := @caughtexception";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "i0 = i0 + 1"->"$r2 := @caughtexception";
    "goto [?= (branch)]"->"if i0 >= 6 goto staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)";
    "goto [?= (branch)]"->"$r2 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)"->"goto [?= return]";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>(r0)"->"$r2 := @caughtexception";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"r3 = $r2";
    "r3 = $r2"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void unexpected(java.lang.Throwable)>(r3)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void unexpected(java.lang.Throwable)>(r3)"->"return";
}
