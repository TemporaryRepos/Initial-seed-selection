digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @this: jsr166tests.jtreg.util.Map.LockStep;
r0 := @parameter0: java.util.List;
r5 := @parameter1: java.lang.Object;
r6 := @parameter2: java.lang.Object;
r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.util.Map) $r3;
interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);
goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @this: jsr166tests.jtreg.util.Map.LockStep;
r0 := @parameter0: java.util.List;
r5 := @parameter1: java.lang.Object;
r6 := @parameter2: java.lang.Object;
r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.util.Map) $r3;
interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);
goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
"->"Block 3:
[preds: 1 ] [succs: ]
virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();
r4 = (java.util.Map) $r3;
interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);
goto [?= $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
";
}
