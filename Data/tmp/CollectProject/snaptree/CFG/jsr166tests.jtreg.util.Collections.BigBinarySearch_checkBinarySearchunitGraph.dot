digraph "unitGraph" {
    "r1 := @parameter0: java.util.List"
    "i0 := @parameter1: int"
    "r3 := @parameter2: java.util.Comparator"
    "$r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "$r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0)"
    "$i1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r1, $r2, r3)"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void equal(java.lang.Object,java.lang.Object)>($r0, $r4)"
    "goto [?= return]"
    "$r5 := @caughtexception"
    "r6 = $r5"
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void unexpected(java.lang.Throwable)>(r6)"
    "return"
    "r1 := @parameter0: java.util.List"->"i0 := @parameter1: int";
    "i0 := @parameter1: int"->"r3 := @parameter2: java.util.Comparator";
    "r3 := @parameter2: java.util.Comparator"->"$r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "r3 := @parameter2: java.util.Comparator"->"$r5 := @caughtexception";
    "$r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0)";
    "$r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r5 := @caughtexception";
    "$r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0)"->"$i1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r1, $r2, r3)";
    "$r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0)"->"$r5 := @caughtexception";
    "$i1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r1, $r2, r3)"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$i1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object,java.util.Comparator)>(r1, $r2, r3)"->"$r5 := @caughtexception";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void equal(java.lang.Object,java.lang.Object)>($r0, $r4)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$r5 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void equal(java.lang.Object,java.lang.Object)>($r0, $r4)"->"goto [?= return]";
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void equal(java.lang.Object,java.lang.Object)>($r0, $r4)"->"$r5 := @caughtexception";
    "goto [?= return]"->"return";
    "$r5 := @caughtexception"->"r6 = $r5";
    "r6 = $r5"->"staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void unexpected(java.lang.Throwable)>(r6)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void unexpected(java.lang.Throwable)>(r6)"->"return";
}
