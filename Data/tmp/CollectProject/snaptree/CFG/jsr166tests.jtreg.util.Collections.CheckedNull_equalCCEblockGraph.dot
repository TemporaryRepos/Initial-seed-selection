digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: jsr166tests.jtreg.util.Collections.CheckedNull;
r0 := @parameter0: jsr166tests.jtreg.util.Collections.CheckedNull$F[];
r7 = null;
r1 = r0;
i0 = lengthof r1;
i1 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r2 = r1[i1];
if r7 != null goto $r4 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r6 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
r7 = virtualinvoke $r6.<java.lang.ClassCastException: java.lang.String getMessage()>();
goto [?= i1 = i1 + 1];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r4 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
$r5 = virtualinvoke $r4.<java.lang.ClassCastException: java.lang.String getMessage()>();
virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r7, $r5);
"
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @this: jsr166tests.jtreg.util.Collections.CheckedNull;
r0 := @parameter0: jsr166tests.jtreg.util.Collections.CheckedNull$F[];
r7 = null;
r1 = r0;
i0 = lengthof r1;
i1 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r2 = r1[i1];
if r7 != null goto $r4 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"->"Block 6:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r2 = r1[i1];
if r7 != null goto $r4 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$r6 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
r7 = virtualinvoke $r6.<java.lang.ClassCastException: java.lang.String getMessage()>();
goto [?= i1 = i1 + 1];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r2 = r1[i1];
if r7 != null goto $r4 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r4 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
$r5 = virtualinvoke $r4.<java.lang.ClassCastException: java.lang.String getMessage()>();
virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r7, $r5);
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$r6 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
r7 = virtualinvoke $r6.<java.lang.ClassCastException: java.lang.String getMessage()>();
goto [?= i1 = i1 + 1];
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r4 = virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: java.lang.ClassCastException cce(jsr166tests.jtreg.util.Collections.CheckedNull$F)>(r2);
$r5 = virtualinvoke $r4.<java.lang.ClassCastException: java.lang.String getMessage()>();
virtualinvoke r3.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r7, $r5);
"->"Block 5:
[preds: 3 4 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 5:
[preds: 3 4 ] [succs: 1 ]
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
";
}
