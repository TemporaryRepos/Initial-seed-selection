digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: jsr166tests.loops.MapMicroBenchmark$Job[];
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"running\");
staticinvoke <jsr166tests.loops.MapMicroBenchmark: void runWork(jsr166tests.loops.MapMicroBenchmark$Job[],int,int,long)>(r1, 3, 1000000, 6000000000L);
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>(\"Type/Size:\");
i8 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i8 >= 9 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r23 = <java.lang.System: java.io.PrintStream out>;
$r21 = newarray (java.lang.Object)[1];
$r22 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i7 = $r22[i8];
$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
$r21[0] = $r24;
virtualinvoke $r23.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r21);
i8 = i8 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println()>();
r26 = newarray (long)[9];
i0 = lengthof r1;
i9 = 0;
"
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i9 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r13 = <java.lang.System: java.io.PrintStream out>;
$r11 = r1[i9];
$r12 = $r11.<jsr166tests.loops.MapMicroBenchmark$Job: java.lang.String name>;
virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>($r12);
i10 = 0;
"
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= 9 goto $r14 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 7:
[preds: 6 ] [succs: 6 ]
$r15 = r1[i9];
$r16 = $r15.<jsr166tests.loops.MapMicroBenchmark$Job: long[] nanos>;
l4 = $r16[i10];
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[1];
$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);
$r17[0] = $r19;
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r17);
$l5 = r26[i10];
$l6 = $l5 + l4;
r26[i10] = $l6;
i10 = i10 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 6 ] [succs: 4 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println()>();
i9 = i9 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 4 ] [succs: 10 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println()>();
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>(\"average   \");
i11 = 0;
"
    "Block 10:
[preds: 9 11 ] [succs: 11 12 ]
if i11 >= 9 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 11:
[preds: 10 ] [succs: 10 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = newarray (java.lang.Object)[1];
$l2 = r26[i11];
$l1 = (long) i0;
$l3 = $l2 / $l1;
$r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
$r7[0] = $r9;
virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r7);
i11 = i11 + 1;
goto [?= (branch)];
"
    "Block 12:
[preds: 10 ] [succs: ]
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"\n\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r1 := @parameter0: jsr166tests.loops.MapMicroBenchmark$Job[];
$r0 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>(\"running\");
staticinvoke <jsr166tests.loops.MapMicroBenchmark: void runWork(jsr166tests.loops.MapMicroBenchmark$Job[],int,int,long)>(r1, 3, 1000000, 6000000000L);
$r2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>(\"Type/Size:\");
i8 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i8 >= 9 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i8 >= 9 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r23 = <java.lang.System: java.io.PrintStream out>;
$r21 = newarray (java.lang.Object)[1];
$r22 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i7 = $r22[i8];
$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
$r21[0] = $r24;
virtualinvoke $r23.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r21);
i8 = i8 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i8 >= 9 goto $r3 = <java.lang.System: java.io.PrintStream out>;
"->"Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println()>();
r26 = newarray (long)[9];
i0 = lengthof r1;
i9 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r23 = <java.lang.System: java.io.PrintStream out>;
$r21 = newarray (java.lang.Object)[1];
$r22 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i7 = $r22[i8];
$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);
$r21[0] = $r24;
virtualinvoke $r23.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r21);
i8 = i8 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i8 >= 9 goto $r3 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
$r3 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r3.<java.io.PrintStream: void println()>();
r26 = newarray (long)[9];
i0 = lengthof r1;
i9 = 0;
"->"Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i9 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i9 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$r13 = <java.lang.System: java.io.PrintStream out>;
$r11 = r1[i9];
$r12 = $r11.<jsr166tests.loops.MapMicroBenchmark$Job: java.lang.String name>;
virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>($r12);
i10 = 0;
";
    "Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i9 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
"->"Block 9:
[preds: 4 ] [succs: 10 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println()>();
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>(\"average   \");
i11 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r13 = <java.lang.System: java.io.PrintStream out>;
$r11 = r1[i9];
$r12 = $r11.<jsr166tests.loops.MapMicroBenchmark$Job: java.lang.String name>;
virtualinvoke $r13.<java.io.PrintStream: void print(java.lang.String)>($r12);
i10 = 0;
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= 9 goto $r14 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= 9 goto $r14 = <java.lang.System: java.io.PrintStream out>;
"->"Block 7:
[preds: 6 ] [succs: 6 ]
$r15 = r1[i9];
$r16 = $r15.<jsr166tests.loops.MapMicroBenchmark$Job: long[] nanos>;
l4 = $r16[i10];
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[1];
$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);
$r17[0] = $r19;
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r17);
$l5 = r26[i10];
$l6 = $l5 + l4;
r26[i10] = $l6;
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= 9 goto $r14 = <java.lang.System: java.io.PrintStream out>;
"->"Block 8:
[preds: 6 ] [succs: 4 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println()>();
i9 = i9 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 6 ] [succs: 6 ]
$r15 = r1[i9];
$r16 = $r15.<jsr166tests.loops.MapMicroBenchmark$Job: long[] nanos>;
l4 = $r16[i10];
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[1];
$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);
$r17[0] = $r19;
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r17);
$l5 = r26[i10];
$l6 = $l5 + l4;
r26[i10] = $l6;
i10 = i10 + 1;
goto [?= (branch)];
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
if i10 >= 9 goto $r14 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 8:
[preds: 6 ] [succs: 4 ]
$r14 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r14.<java.io.PrintStream: void println()>();
i9 = i9 + 1;
goto [?= (branch)];
"->"Block 4:
[preds: 3 8 ] [succs: 5 9 ]
if i9 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 9:
[preds: 4 ] [succs: 10 ]
$r4 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r4.<java.io.PrintStream: void println()>();
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void print(java.lang.String)>(\"average   \");
i11 = 0;
"->"Block 10:
[preds: 9 11 ] [succs: 11 12 ]
if i11 >= 9 goto $r6 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 10:
[preds: 9 11 ] [succs: 11 12 ]
if i11 >= 9 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"->"Block 11:
[preds: 10 ] [succs: 10 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = newarray (java.lang.Object)[1];
$l2 = r26[i11];
$l1 = (long) i0;
$l3 = $l2 / $l1;
$r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
$r7[0] = $r9;
virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r7);
i11 = i11 + 1;
goto [?= (branch)];
";
    "Block 10:
[preds: 9 11 ] [succs: 11 12 ]
if i11 >= 9 goto $r6 = <java.lang.System: java.io.PrintStream out>;
"->"Block 12:
[preds: 10 ] [succs: ]
$r6 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>(\"\n\");
return;
";
    "Block 11:
[preds: 10 ] [succs: 10 ]
$r8 = <java.lang.System: java.io.PrintStream out>;
$r7 = newarray (java.lang.Object)[1];
$l2 = r26[i11];
$l1 = (long) i0;
$l3 = $l2 / $l1;
$r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);
$r7[0] = $r9;
virtualinvoke $r8.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%7d\", $r7);
i11 = i11 + 1;
goto [?= (branch)];
"->"Block 10:
[preds: 9 11 ] [succs: 11 12 ]
if i11 >= 9 goto $r6 = <java.lang.System: java.io.PrintStream out>;
";
}
