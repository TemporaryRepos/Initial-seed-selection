digraph "unitGraph" {
    "r26 := @parameter0: java.lang.String[]"
    "$r0 = new jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2"
    "specialinvoke $r0.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)"
    "r1 = $r0"
    "$r2 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()"
    "r27 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r2"
    "$z0 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r27)"
    "if $z0 == 0 goto $r3 = new java.lang.RuntimeException"
    "$z1 = virtualinvoke r27.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)"
    "if $z1 != 0 goto virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"a\")"
    "$r3 = new java.lang.RuntimeException"
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 1.\")"
    "throw $r3"
    "virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"a\")"
    "$r4 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()"
    "r28 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r4"
    "$z3 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r28)"
    "if $z3 == 0 goto $r5 = new java.lang.RuntimeException"
    "$z4 = virtualinvoke r28.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)"
    "if $z4 != 0 goto virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"b\")"
    "$r5 = new java.lang.RuntimeException"
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 2.\")"
    "throw $r5"
    "virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"b\")"
    "$r6 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()"
    "r29 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r6"
    "$z6 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r29)"
    "if $z6 == 0 goto $r7 = new java.lang.RuntimeException"
    "$z7 = virtualinvoke r29.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)"
    "if $z7 != 0 goto $r8 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2"
    "$r7 = new java.lang.RuntimeException"
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 2.\")"
    "throw $r7"
    "$r8 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2"
    "specialinvoke $r8.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)"
    "r9 = $r8"
    "$r10 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()"
    "r30 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r10"
    "$z8 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r30)"
    "if $z8 == 0 goto $r11 = new java.lang.RuntimeException"
    "$z9 = virtualinvoke r30.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)"
    "if $z9 != 0 goto virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"a\")"
    "$r11 = new java.lang.RuntimeException"
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")"
    "throw $r11"
    "virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"a\")"
    "$r12 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()"
    "r31 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r12"
    "$z11 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r31)"
    "if $z11 == 0 goto $r13 = new java.lang.RuntimeException"
    "$z12 = virtualinvoke r31.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)"
    "if $z12 != 0 goto virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"b\")"
    "$r13 = new java.lang.RuntimeException"
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")"
    "throw $r13"
    "virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"b\")"
    "$r14 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()"
    "r32 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r14"
    "$z14 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r32)"
    "if $z14 == 0 goto $r15 = new java.lang.RuntimeException"
    "$z15 = virtualinvoke r32.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)"
    "if $z15 != 0 goto $r16 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2"
    "$r15 = new java.lang.RuntimeException"
    "specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")"
    "throw $r15"
    "$r16 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2"
    "specialinvoke $r16.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)"
    "r17 = $r16"
    "$r18 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()"
    "r33 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r18"
    "$z16 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r33)"
    "if $z16 == 0 goto $r19 = new java.lang.RuntimeException"
    "$z17 = virtualinvoke r33.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)"
    "if $z17 != 0 goto virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"
    "$r19 = new java.lang.RuntimeException"
    "specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")"
    "throw $r19"
    "virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"
    "$r21 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()"
    "r34 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r21"
    "$z18 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r34)"
    "if $z18 == 0 goto $r22 = new java.lang.RuntimeException"
    "$z19 = virtualinvoke r34.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)"
    "if $z19 != 0 goto virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"c\", \"d\")"
    "$r22 = new java.lang.RuntimeException"
    "specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")"
    "throw $r22"
    "virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"c\", \"d\")"
    "$r24 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()"
    "r35 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r24"
    "$z20 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r35)"
    "if $z20 == 0 goto $r25 = new java.lang.RuntimeException"
    "$z21 = virtualinvoke r35.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)"
    "if $z21 != 0 goto return"
    "$r25 = new java.lang.RuntimeException"
    "specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")"
    "throw $r25"
    "return"
    "r26 := @parameter0: java.lang.String[]"->"$r0 = new jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2";
    "$r0 = new jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2"->"specialinvoke $r0.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)";
    "specialinvoke $r0.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)"->"r1 = $r0";
    "r1 = $r0"->"$r2 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()";
    "$r2 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()"->"r27 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r2";
    "r27 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r2"->"$z0 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r27)";
    "$z0 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r27)"->"if $z0 == 0 goto $r3 = new java.lang.RuntimeException";
    "if $z0 == 0 goto $r3 = new java.lang.RuntimeException"->"$z1 = virtualinvoke r27.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)";
    "if $z0 == 0 goto $r3 = new java.lang.RuntimeException"->"$r3 = new java.lang.RuntimeException";
    "$z1 = virtualinvoke r27.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)"->"if $z1 != 0 goto virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"a\")";
    "if $z1 != 0 goto virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"a\")"->"$r3 = new java.lang.RuntimeException";
    "if $z1 != 0 goto virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"a\")"->"virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"a\")";
    "$r3 = new java.lang.RuntimeException"->"specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 1.\")";
    "specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 1.\")"->"throw $r3";
    "virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"a\")"->"$r4 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()";
    "$r4 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()"->"r28 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r4";
    "r28 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r4"->"$z3 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r28)";
    "$z3 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r28)"->"if $z3 == 0 goto $r5 = new java.lang.RuntimeException";
    "if $z3 == 0 goto $r5 = new java.lang.RuntimeException"->"$z4 = virtualinvoke r28.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)";
    "if $z3 == 0 goto $r5 = new java.lang.RuntimeException"->"$r5 = new java.lang.RuntimeException";
    "$z4 = virtualinvoke r28.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)"->"if $z4 != 0 goto virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"b\")";
    "if $z4 != 0 goto virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"b\")"->"$r5 = new java.lang.RuntimeException";
    "if $z4 != 0 goto virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"b\")"->"virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"b\")";
    "$r5 = new java.lang.RuntimeException"->"specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 2.\")";
    "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 2.\")"->"throw $r5";
    "virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean add(java.lang.Object)>(\"b\")"->"$r6 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()";
    "$r6 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: java.lang.Object clone()>()"->"r29 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r6";
    "r29 = (jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2) $r6"->"$z6 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r29)";
    "$z6 = virtualinvoke r1.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r29)"->"if $z6 == 0 goto $r7 = new java.lang.RuntimeException";
    "if $z6 == 0 goto $r7 = new java.lang.RuntimeException"->"$z7 = virtualinvoke r29.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)";
    "if $z6 == 0 goto $r7 = new java.lang.RuntimeException"->"$r7 = new java.lang.RuntimeException";
    "$z7 = virtualinvoke r29.<jsr166tests.jtreg.util.LinkedList.Clone$LinkedList2: boolean equals(java.lang.Object)>(r1)"->"if $z7 != 0 goto $r8 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2";
    "if $z7 != 0 goto $r8 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2"->"$r7 = new java.lang.RuntimeException";
    "if $z7 != 0 goto $r8 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2"->"$r8 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2";
    "$r7 = new java.lang.RuntimeException"->"specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 2.\")";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"LinkedList.clone() is broken 2.\")"->"throw $r7";
    "$r8 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2"->"specialinvoke $r8.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)";
    "specialinvoke $r8.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)"->"r9 = $r8";
    "r9 = $r8"->"$r10 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()";
    "$r10 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()"->"r30 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r10";
    "r30 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r10"->"$z8 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r30)";
    "$z8 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r30)"->"if $z8 == 0 goto $r11 = new java.lang.RuntimeException";
    "if $z8 == 0 goto $r11 = new java.lang.RuntimeException"->"$z9 = virtualinvoke r30.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)";
    "if $z8 == 0 goto $r11 = new java.lang.RuntimeException"->"$r11 = new java.lang.RuntimeException";
    "$z9 = virtualinvoke r30.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)"->"if $z9 != 0 goto virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"a\")";
    "if $z9 != 0 goto virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"a\")"->"$r11 = new java.lang.RuntimeException";
    "if $z9 != 0 goto virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"a\")"->"virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"a\")";
    "$r11 = new java.lang.RuntimeException"->"specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")";
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")"->"throw $r11";
    "virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"a\")"->"$r12 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()";
    "$r12 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()"->"r31 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r12";
    "r31 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r12"->"$z11 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r31)";
    "$z11 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r31)"->"if $z11 == 0 goto $r13 = new java.lang.RuntimeException";
    "if $z11 == 0 goto $r13 = new java.lang.RuntimeException"->"$z12 = virtualinvoke r31.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)";
    "if $z11 == 0 goto $r13 = new java.lang.RuntimeException"->"$r13 = new java.lang.RuntimeException";
    "$z12 = virtualinvoke r31.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)"->"if $z12 != 0 goto virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"b\")";
    "if $z12 != 0 goto virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"b\")"->"$r13 = new java.lang.RuntimeException";
    "if $z12 != 0 goto virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"b\")"->"virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"b\")";
    "$r13 = new java.lang.RuntimeException"->"specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")";
    "specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")"->"throw $r13";
    "virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean add(java.lang.Object)>(\"b\")"->"$r14 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()";
    "$r14 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: java.lang.Object clone()>()"->"r32 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r14";
    "r32 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2) $r14"->"$z14 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r32)";
    "$z14 = virtualinvoke r9.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r32)"->"if $z14 == 0 goto $r15 = new java.lang.RuntimeException";
    "if $z14 == 0 goto $r15 = new java.lang.RuntimeException"->"$z15 = virtualinvoke r32.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)";
    "if $z14 == 0 goto $r15 = new java.lang.RuntimeException"->"$r15 = new java.lang.RuntimeException";
    "$z15 = virtualinvoke r32.<jsr166tests.jtreg.util.LinkedList.Clone$TreeSet2: boolean equals(java.lang.Object)>(r9)"->"if $z15 != 0 goto $r16 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2";
    "if $z15 != 0 goto $r16 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2"->"$r15 = new java.lang.RuntimeException";
    "if $z15 != 0 goto $r16 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2"->"$r16 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2";
    "$r15 = new java.lang.RuntimeException"->"specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")";
    "specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeSet.clone() is broken.\")"->"throw $r15";
    "$r16 = new jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2"->"specialinvoke $r16.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)";
    "specialinvoke $r16.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: void <init>(jsr166tests.jtreg.util.LinkedList.Clone$1)>(null)"->"r17 = $r16";
    "r17 = $r16"->"$r18 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()";
    "$r18 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()"->"r33 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r18";
    "r33 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r18"->"$z16 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r33)";
    "$z16 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r33)"->"if $z16 == 0 goto $r19 = new java.lang.RuntimeException";
    "if $z16 == 0 goto $r19 = new java.lang.RuntimeException"->"$z17 = virtualinvoke r33.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)";
    "if $z16 == 0 goto $r19 = new java.lang.RuntimeException"->"$r19 = new java.lang.RuntimeException";
    "$z17 = virtualinvoke r33.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)"->"if $z17 != 0 goto virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")";
    "if $z17 != 0 goto virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"->"$r19 = new java.lang.RuntimeException";
    "if $z17 != 0 goto virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"->"virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")";
    "$r19 = new java.lang.RuntimeException"->"specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")";
    "specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")"->"throw $r19";
    "virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"->"$r21 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()";
    "$r21 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()"->"r34 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r21";
    "r34 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r21"->"$z18 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r34)";
    "$z18 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r34)"->"if $z18 == 0 goto $r22 = new java.lang.RuntimeException";
    "if $z18 == 0 goto $r22 = new java.lang.RuntimeException"->"$z19 = virtualinvoke r34.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)";
    "if $z18 == 0 goto $r22 = new java.lang.RuntimeException"->"$r22 = new java.lang.RuntimeException";
    "$z19 = virtualinvoke r34.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)"->"if $z19 != 0 goto virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"c\", \"d\")";
    "if $z19 != 0 goto virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"c\", \"d\")"->"$r22 = new java.lang.RuntimeException";
    "if $z19 != 0 goto virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"c\", \"d\")"->"virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"c\", \"d\")";
    "$r22 = new java.lang.RuntimeException"->"specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")";
    "specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")"->"throw $r22";
    "virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"c\", \"d\")"->"$r24 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()";
    "$r24 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: java.lang.Object clone()>()"->"r35 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r24";
    "r35 = (jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2) $r24"->"$z20 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r35)";
    "$z20 = virtualinvoke r17.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r35)"->"if $z20 == 0 goto $r25 = new java.lang.RuntimeException";
    "if $z20 == 0 goto $r25 = new java.lang.RuntimeException"->"$z21 = virtualinvoke r35.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)";
    "if $z20 == 0 goto $r25 = new java.lang.RuntimeException"->"$r25 = new java.lang.RuntimeException";
    "$z21 = virtualinvoke r35.<jsr166tests.jtreg.util.LinkedList.Clone$TreeMap2: boolean equals(java.lang.Object)>(r17)"->"if $z21 != 0 goto return";
    "if $z21 != 0 goto return"->"$r25 = new java.lang.RuntimeException";
    "if $z21 != 0 goto return"->"return";
    "$r25 = new java.lang.RuntimeException"->"specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")";
    "specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"TreeMap.clone() is broken.\")"->"throw $r25";
}
