digraph "unitGraph" {
    "r142 := @parameter0: java.lang.String[]"
    "s0 = 500"
    "s1 = 500"
    "i10 = 0"
    "if i10 >= s0 goto $r0 = new java.util.LinkedHashMap"
    "$r124 = new java.util.LinkedHashMap"
    "specialinvoke $r124.<java.util.LinkedHashMap: void <init>()>()"
    "r143 = $r124"
    "r144 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"
    "i11 = 0"
    "if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>()"
    "$r139 = new java.lang.Integer"
    "$r140 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Random rnd>"
    "$i9 = virtualinvoke $r140.<java.util.Random: int nextInt()>()"
    "specialinvoke $r139.<java.lang.Integer: void <init>(int)>($i9)"
    "r145 = $r139"
    "$z37 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r145)"
    "if $z37 != 0 goto $r139 = new java.lang.Integer"
    "interfaceinvoke r143.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r145, r144)"
    "r144 = r145"
    "i11 = i11 + 1"
    "goto [?= (branch)]"
    "$i5 = interfaceinvoke r143.<java.util.Map: int size()>()"
    "if $i5 == s1 goto $r125 = new java.util.HashMap"
    "$r138 = new java.lang.Exception"
    "specialinvoke $r138.<java.lang.Exception: void <init>(java.lang.String)>(\"Size not as expected.\")"
    "throw $r138"
    "$r125 = new java.util.HashMap"
    "specialinvoke $r125.<java.util.HashMap: void <init>(java.util.Map)>(r143)"
    "$i6 = virtualinvoke $r125.<java.util.HashMap: int hashCode()>()"
    "$i7 = interfaceinvoke r143.<java.util.Map: int hashCode()>()"
    "if $i6 == $i7 goto $r126 = new java.util.LinkedHashMap"
    "$r137 = new java.lang.Exception"
    "specialinvoke $r137.<java.lang.Exception: void <init>(java.lang.String)>(\"Incorrect hashCode computation.\")"
    "throw $r137"
    "$r126 = new java.util.LinkedHashMap"
    "specialinvoke $r126.<java.util.LinkedHashMap: void <init>()>()"
    "r146 = $r126"
    "interfaceinvoke r146.<java.util.Map: void putAll(java.util.Map)>(r143)"
    "$r127 = interfaceinvoke r146.<java.util.Map: java.util.Collection values()>()"
    "$r128 = interfaceinvoke r143.<java.util.Map: java.util.Set keySet()>()"
    "interfaceinvoke $r127.<java.util.Collection: boolean removeAll(java.util.Collection)>($r128)"
    "$i8 = interfaceinvoke r146.<java.util.Map: int size()>()"
    "if $i8 != 1 goto $r129 = new java.lang.Exception"
    "$r130 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"
    "$z34 = interfaceinvoke r146.<java.util.Map: boolean containsValue(java.lang.Object)>($r130)"
    "if $z34 != 0 goto i12 = 0"
    "$r129 = new java.lang.Exception"
    "specialinvoke $r129.<java.lang.Exception: void <init>(java.lang.String)>(\"Collection views test failed.\")"
    "throw $r129"
    "i12 = 0"
    "$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"
    "if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>()"
    "$z36 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r144)"
    "if $z36 != 0 goto r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144)"
    "$r136 = new java.lang.Exception"
    "specialinvoke $r136.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list doesn\'t contain a link.\")"
    "throw $r136"
    "r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144)"
    "if r147 != null goto interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144)"
    "$r135 = new java.lang.Exception"
    "specialinvoke $r135.<java.lang.Exception: void <init>(java.lang.String)>(\"Could not retrieve a link.\")"
    "throw $r135"
    "interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144)"
    "r144 = r147"
    "i12 = i12 + 1"
    "goto [?= $r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>]"
    "$z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>()"
    "if $z35 != 0 goto (branch)"
    "$r133 = new java.lang.Exception"
    "specialinvoke $r133.<java.lang.Exception: void <init>(java.lang.String)>(\"Map nonempty after removing all links.\")"
    "throw $r133"
    "if i12 == s1 goto i10 = i10 + 1"
    "$r132 = new java.lang.Exception"
    "specialinvoke $r132.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list size not as expected.\")"
    "throw $r132"
    "i10 = i10 + 1"
    "$r0 = new java.util.LinkedHashMap"
    "specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()"
    "r148 = $r0"
    "i13 = 0"
    "if i13 >= s1 goto i14 = 0"
    "$r120 = new java.lang.Integer"
    "specialinvoke $r120.<java.lang.Integer: void <init>(int)>(i13)"
    "$r121 = new java.lang.Integer"
    "$i4 = 2 * i13"
    "specialinvoke $r121.<java.lang.Integer: void <init>(int)>($i4)"
    "$r122 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121)"
    "if $r122 == null goto i13 = i13 + 1"
    "$r123 = new java.lang.Exception"
    "specialinvoke $r123.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns non-null value erroenously.\")"
    "throw $r123"
    "i13 = i13 + 1"
    "i14 = 0"
    "$i2 = 2 * s1"
    "if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"
    "$r114 = new java.lang.Integer"
    "specialinvoke $r114.<java.lang.Integer: void <init>(int)>(i14)"
    "$z32 = interfaceinvoke r148.<java.util.Map: boolean containsValue(java.lang.Object)>($r114)"
    "$i3 = i14 % 2"
    "if $i3 != 0 goto $z38 = 0"
    "$z38 = 1"
    "$z38 = 0"
    "if $z32 == $z38 goto i14 = i14 + 1"
    "$r115 = new java.lang.Exception"
    "$r116 = new java.lang.StringBuilder"
    "specialinvoke $r116.<java.lang.StringBuilder: void <init>()>()"
    "$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \")"
    "$r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)"
    "$r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r115.<java.lang.Exception: void <init>(java.lang.String)>($r119)"
    "throw $r115"
    "i14 = i14 + 1"
    "goto [?= $i2 = 2 * s1]"
    "$r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"
    "$r1 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"
    "$r3 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1)"
    "if $r3 != null goto $r4 = new java.util.LinkedHashMap"
    "$r113 = new java.lang.Exception"
    "specialinvoke $r113.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns a null value erroenously.\")"
    "throw $r113"
    "$r4 = new java.util.LinkedHashMap"
    "specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>()"
    "r149 = $r4"
    "interfaceinvoke r149.<java.util.Map: void putAll(java.util.Map)>(r148)"
    "$z0 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r149)"
    "if $z0 != 0 goto $z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148)"
    "$r112 = new java.lang.Exception"
    "specialinvoke $r112.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (1)\")"
    "throw $r112"
    "$z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148)"
    "if $z1 != 0 goto r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"
    "$r111 = new java.lang.Exception"
    "specialinvoke $r111.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (2)\")"
    "throw $r111"
    "r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"
    "r151 = interfaceinvoke r149.<java.util.Map: java.util.Set entrySet()>()"
    "$z2 = interfaceinvoke r150.<java.util.Set: boolean equals(java.lang.Object)>(r151)"
    "if $z2 != 0 goto $z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150)"
    "$r110 = new java.lang.Exception"
    "specialinvoke $r110.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (3)\")"
    "throw $r110"
    "$z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150)"
    "if $z3 != 0 goto $z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151)"
    "$r109 = new java.lang.Exception"
    "specialinvoke $r109.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (4)\")"
    "throw $r109"
    "$z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151)"
    "if $z4 != 0 goto $z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150)"
    "$r108 = new java.lang.Exception"
    "specialinvoke $r108.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain clone!\")"
    "throw $r108"
    "$z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150)"
    "if $z5 != 0 goto r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148)"
    "$r107 = new java.lang.Exception"
    "specialinvoke $r107.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone doesn\'t contain original!\")"
    "throw $r107"
    "r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148)"
    "$z6 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r152)"
    "if $z6 != 0 goto $z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148)"
    "$r106 = new java.lang.Exception"
    "specialinvoke $r106.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (1)\")"
    "throw $r106"
    "$z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148)"
    "if $z7 != 0 goto r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"
    "$r105 = new java.lang.Exception"
    "specialinvoke $r105.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (2)\")"
    "throw $r105"
    "r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"
    "r154 = interfaceinvoke r152.<java.util.Map: java.util.Set entrySet()>()"
    "$z8 = interfaceinvoke r153.<java.util.Set: boolean equals(java.lang.Object)>(r154)"
    "if $z8 != 0 goto $z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153)"
    "$r104 = new java.lang.Exception"
    "specialinvoke $r104.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (3)\")"
    "throw $r104"
    "$z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153)"
    "if $z9 != 0 goto $z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154)"
    "$r103 = new java.lang.Exception"
    "specialinvoke $r103.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (4)\")"
    "throw $r103"
    "$z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154)"
    "if $z10 != 0 goto $z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153)"
    "$r102 = new java.lang.Exception"
    "specialinvoke $r102.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain Serialize clone!\")"
    "throw $r102"
    "$z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153)"
    "if $z11 != 0 goto interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153)"
    "$r101 = new java.lang.Exception"
    "specialinvoke $r101.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone doesn\'t contain original!\")"
    "throw $r101"
    "interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153)"
    "$z13 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>()"
    "if $z13 != 0 goto interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148)"
    "$r100 = new java.lang.Exception"
    "specialinvoke $r100.<java.lang.Exception: void <init>(java.lang.String)>(\"entrySet().removeAll failed.\")"
    "throw $r100"
    "interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148)"
    "interfaceinvoke r152.<java.util.Map: void clear()>()"
    "$z14 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>()"
    "if $z14 != 0 goto $r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"
    "$r99 = new java.lang.Exception"
    "specialinvoke $r99.<java.lang.Exception: void <init>(java.lang.String)>(\"clear failed.\")"
    "throw $r99"
    "$r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"
    "r155 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()"
    "$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()"
    "if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>()"
    "interfaceinvoke r155.<java.util.Iterator: java.lang.Object next()>()"
    "interfaceinvoke r155.<java.util.Iterator: void remove()>()"
    "goto [?= $z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()]"
    "$z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>()"
    "if $z16 != 0 goto $r6 = new java.util.LinkedHashMap"
    "$r97 = new java.lang.Exception"
    "specialinvoke $r97.<java.lang.Exception: void <init>(java.lang.String)>(\"Iterator.remove() failed\")"
    "throw $r97"
    "$r6 = new java.util.LinkedHashMap"
    "specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>()"
    "r156 = $r6"
    "$r7 = new java.util.ArrayList"
    "specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(s1)"
    "r157 = $r7"
    "i15 = 0"
    "if i15 >= s1 goto $r8 = new java.util.ArrayList"
    "$r95 = new java.lang.Integer"
    "specialinvoke $r95.<java.lang.Integer: void <init>(int)>(i15)"
    "r158 = $r95"
    "interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r158, r158)"
    "interfaceinvoke r157.<java.util.List: boolean add(java.lang.Object)>(r158)"
    "i15 = i15 + 1"
    "$r8 = new java.util.ArrayList"
    "$r9 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()"
    "specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9)"
    "$z17 = virtualinvoke $r8.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"
    "if $z17 != 0 goto i16 = s1 - 1"
    "$r94 = new java.lang.Exception"
    "specialinvoke $r94.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved.\")"
    "throw $r94"
    "i16 = s1 - 1"
    "if i16 < 0 goto $r10 = new java.util.ArrayList"
    "$r82 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i16)"
    "r159 = (java.lang.Integer) $r82"
    "$r83 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159)"
    "$z30 = virtualinvoke $r83.<java.lang.Object: boolean equals(java.lang.Object)>(r159)"
    "if $z30 != 0 goto i16 = i16 + -1"
    "$r84 = new java.lang.Exception"
    "$r85 = new java.lang.StringBuilder"
    "specialinvoke $r85.<java.lang.StringBuilder: void <init>()>()"
    "$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \")"
    "$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16)"
    "$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r89 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159)"
    "$r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89)"
    "$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r159)"
    "$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r84.<java.lang.Exception: void <init>(java.lang.String)>($r93)"
    "throw $r84"
    "i16 = i16 + -1"
    "$r10 = new java.util.ArrayList"
    "$r11 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()"
    "specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11)"
    "$z18 = virtualinvoke $r10.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"
    "if $z18 != 0 goto i17 = s1 - 1"
    "$r81 = new java.lang.Exception"
    "specialinvoke $r81.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved after read.\")"
    "throw $r81"
    "i17 = s1 - 1"
    "if i17 < 0 goto $r12 = new java.util.ArrayList"
    "$r79 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i17)"
    "r160 = (java.lang.Integer) $r79"
    "interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r160, r160)"
    "i17 = i17 + -1"
    "$r12 = new java.util.ArrayList"
    "$r13 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()"
    "specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13)"
    "$z19 = virtualinvoke $r12.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"
    "if $z19 != 0 goto $r14 = (java.util.LinkedHashMap) r156"
    "$r78 = new java.lang.Exception"
    "specialinvoke $r78.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not preserved after reinsert.\")"
    "throw $r78"
    "$r14 = (java.util.LinkedHashMap) r156"
    "$r15 = virtualinvoke $r14.<java.util.LinkedHashMap: java.lang.Object clone()>()"
    "r161 = (java.util.Map) $r15"
    "$z20 = interfaceinvoke r156.<java.util.Map: boolean equals(java.lang.Object)>(r161)"
    "if $z20 != 0 goto $r16 = new java.util.ArrayList"
    "$r77 = new java.lang.Exception"
    "specialinvoke $r77.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert-order Map != clone.\")"
    "throw $r77"
    "$r16 = new java.util.ArrayList"
    "specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>(r157)"
    "r162 = $r16"
    "staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r162)"
    "i18 = 0"
    "if i18 >= s1 goto $r17 = new java.util.ArrayList"
    "$r65 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i18)"
    "r163 = (java.lang.Integer) $r65"
    "$r66 = interfaceinvoke r161.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163)"
    "$z29 = virtualinvoke $r66.<java.lang.Object: boolean equals(java.lang.Object)>(r163)"
    "if $z29 != 0 goto i18 = i18 + 1"
    "$r67 = new java.lang.Exception"
    "$r68 = new java.lang.StringBuilder"
    "specialinvoke $r68.<java.lang.StringBuilder: void <init>()>()"
    "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \")"
    "$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)"
    "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r72 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163)"
    "$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72)"
    "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r163)"
    "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r67.<java.lang.Exception: void <init>(java.lang.String)>($r76)"
    "throw $r67"
    "i18 = i18 + 1"
    "$r17 = new java.util.ArrayList"
    "$r18 = interfaceinvoke r161.<java.util.Map: java.util.Set keySet()>()"
    "specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r18)"
    "$z21 = virtualinvoke $r17.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"
    "if $z21 != 0 goto $r19 = new java.util.LinkedHashMap"
    "$r64 = new java.lang.Exception"
    "specialinvoke $r64.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: altered by read.\")"
    "throw $r64"
    "$r19 = new java.util.LinkedHashMap"
    "specialinvoke $r19.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(1000, 0.75F, 1)"
    "r164 = $r19"
    "i19 = 0"
    "if i19 >= s1 goto $r20 = new java.util.ArrayList"
    "$r62 = new java.lang.Integer"
    "specialinvoke $r62.<java.lang.Integer: void <init>(int)>(i19)"
    "r165 = $r62"
    "interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r165, r165)"
    "i19 = i19 + 1"
    "$r20 = new java.util.ArrayList"
    "$r21 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()"
    "specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r21)"
    "$z22 = virtualinvoke $r20.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"
    "if $z22 != 0 goto i20 = 0"
    "$r61 = new java.lang.Exception"
    "specialinvoke $r61.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not properly preserved.\")"
    "throw $r61"
    "i20 = 0"
    "if i20 >= s1 goto $r22 = new java.util.ArrayList"
    "$r49 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i20)"
    "r166 = (java.lang.Integer) $r49"
    "$r50 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166)"
    "$z28 = virtualinvoke $r50.<java.lang.Object: boolean equals(java.lang.Object)>(r166)"
    "if $z28 != 0 goto i20 = i20 + 1"
    "$r51 = new java.lang.Exception"
    "$r52 = new java.lang.StringBuilder"
    "specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()"
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \")"
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20)"
    "$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r56 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166)"
    "$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56)"
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r166)"
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r51.<java.lang.Exception: void <init>(java.lang.String)>($r60)"
    "throw $r51"
    "i20 = i20 + 1"
    "$r22 = new java.util.ArrayList"
    "$r23 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()"
    "specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23)"
    "$z23 = virtualinvoke $r22.<java.util.ArrayList: boolean equals(java.lang.Object)>(r162)"
    "if $z23 != 0 goto i21 = 0"
    "$r48 = new java.lang.Exception"
    "specialinvoke $r48.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not properly altered by read.\")"
    "throw $r48"
    "i21 = 0"
    "if i21 >= s1 goto $r24 = new java.util.ArrayList"
    "$r46 = new java.lang.Integer"
    "specialinvoke $r46.<java.lang.Integer: void <init>(int)>(i21)"
    "r167 = $r46"
    "interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r167, r167)"
    "i21 = i21 + 1"
    "$r24 = new java.util.ArrayList"
    "$r25 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()"
    "specialinvoke $r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r25)"
    "$z24 = virtualinvoke $r24.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"
    "if $z24 != 0 goto $r26 = (java.util.LinkedHashMap) r164"
    "$r45 = new java.lang.Exception"
    "specialinvoke $r45.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not altered by reinsert.\")"
    "throw $r45"
    "$r26 = (java.util.LinkedHashMap) r164"
    "$r27 = virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object clone()>()"
    "r168 = (java.util.Map) $r27"
    "$z25 = interfaceinvoke r164.<java.util.Map: boolean equals(java.lang.Object)>(r168)"
    "if $z25 != 0 goto i22 = 0"
    "$r44 = new java.lang.Exception"
    "specialinvoke $r44.<java.lang.Exception: void <init>(java.lang.String)>(\"Access-order Map != clone.\")"
    "throw $r44"
    "i22 = 0"
    "if i22 >= s1 goto $r28 = new java.util.ArrayList"
    "$r32 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i22)"
    "r169 = (java.lang.Integer) $r32"
    "$r33 = interfaceinvoke r168.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169)"
    "$z27 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>(r169)"
    "if $z27 != 0 goto i22 = i22 + 1"
    "$r34 = new java.lang.Exception"
    "$r35 = new java.lang.StringBuilder"
    "specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()"
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \")"
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22)"
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r39 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169)"
    "$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39)"
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r169)"
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>($r43)"
    "throw $r34"
    "i22 = i22 + 1"
    "$r28 = new java.util.ArrayList"
    "$r29 = interfaceinvoke r168.<java.util.Map: java.util.Set keySet()>()"
    "specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r29)"
    "$z26 = virtualinvoke $r28.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"
    "if $z26 != 0 goto $r30 = <java.lang.System: java.io.PrintStream err>"
    "$r31 = new java.lang.Exception"
    "specialinvoke $r31.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: order not properly altered by read.\")"
    "throw $r31"
    "$r30 = <java.lang.System: java.io.PrintStream err>"
    "virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(\"Success.\")"
    "return"
    "r142 := @parameter0: java.lang.String[]"->"s0 = 500";
    "s0 = 500"->"s1 = 500";
    "s1 = 500"->"i10 = 0";
    "i10 = 0"->"if i10 >= s0 goto $r0 = new java.util.LinkedHashMap";
    "if i10 >= s0 goto $r0 = new java.util.LinkedHashMap"->"$r124 = new java.util.LinkedHashMap";
    "if i10 >= s0 goto $r0 = new java.util.LinkedHashMap"->"$r0 = new java.util.LinkedHashMap";
    "$r124 = new java.util.LinkedHashMap"->"specialinvoke $r124.<java.util.LinkedHashMap: void <init>()>()";
    "specialinvoke $r124.<java.util.LinkedHashMap: void <init>()>()"->"r143 = $r124";
    "r143 = $r124"->"r144 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>";
    "r144 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"->"i11 = 0";
    "i11 = 0"->"if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>()";
    "if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>()"->"$r139 = new java.lang.Integer";
    "if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>()"->"$i5 = interfaceinvoke r143.<java.util.Map: int size()>()";
    "$r139 = new java.lang.Integer"->"$r140 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Random rnd>";
    "$r140 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Random rnd>"->"$i9 = virtualinvoke $r140.<java.util.Random: int nextInt()>()";
    "$i9 = virtualinvoke $r140.<java.util.Random: int nextInt()>()"->"specialinvoke $r139.<java.lang.Integer: void <init>(int)>($i9)";
    "specialinvoke $r139.<java.lang.Integer: void <init>(int)>($i9)"->"r145 = $r139";
    "r145 = $r139"->"$z37 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r145)";
    "$z37 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r145)"->"if $z37 != 0 goto $r139 = new java.lang.Integer";
    "if $z37 != 0 goto $r139 = new java.lang.Integer"->"interfaceinvoke r143.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r145, r144)";
    "if $z37 != 0 goto $r139 = new java.lang.Integer"->"$r139 = new java.lang.Integer";
    "interfaceinvoke r143.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r145, r144)"->"r144 = r145";
    "r144 = r145"->"i11 = i11 + 1";
    "i11 = i11 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>()";
    "$i5 = interfaceinvoke r143.<java.util.Map: int size()>()"->"if $i5 == s1 goto $r125 = new java.util.HashMap";
    "if $i5 == s1 goto $r125 = new java.util.HashMap"->"$r138 = new java.lang.Exception";
    "if $i5 == s1 goto $r125 = new java.util.HashMap"->"$r125 = new java.util.HashMap";
    "$r138 = new java.lang.Exception"->"specialinvoke $r138.<java.lang.Exception: void <init>(java.lang.String)>(\"Size not as expected.\")";
    "specialinvoke $r138.<java.lang.Exception: void <init>(java.lang.String)>(\"Size not as expected.\")"->"throw $r138";
    "$r125 = new java.util.HashMap"->"specialinvoke $r125.<java.util.HashMap: void <init>(java.util.Map)>(r143)";
    "specialinvoke $r125.<java.util.HashMap: void <init>(java.util.Map)>(r143)"->"$i6 = virtualinvoke $r125.<java.util.HashMap: int hashCode()>()";
    "$i6 = virtualinvoke $r125.<java.util.HashMap: int hashCode()>()"->"$i7 = interfaceinvoke r143.<java.util.Map: int hashCode()>()";
    "$i7 = interfaceinvoke r143.<java.util.Map: int hashCode()>()"->"if $i6 == $i7 goto $r126 = new java.util.LinkedHashMap";
    "if $i6 == $i7 goto $r126 = new java.util.LinkedHashMap"->"$r137 = new java.lang.Exception";
    "if $i6 == $i7 goto $r126 = new java.util.LinkedHashMap"->"$r126 = new java.util.LinkedHashMap";
    "$r137 = new java.lang.Exception"->"specialinvoke $r137.<java.lang.Exception: void <init>(java.lang.String)>(\"Incorrect hashCode computation.\")";
    "specialinvoke $r137.<java.lang.Exception: void <init>(java.lang.String)>(\"Incorrect hashCode computation.\")"->"throw $r137";
    "$r126 = new java.util.LinkedHashMap"->"specialinvoke $r126.<java.util.LinkedHashMap: void <init>()>()";
    "specialinvoke $r126.<java.util.LinkedHashMap: void <init>()>()"->"r146 = $r126";
    "r146 = $r126"->"interfaceinvoke r146.<java.util.Map: void putAll(java.util.Map)>(r143)";
    "interfaceinvoke r146.<java.util.Map: void putAll(java.util.Map)>(r143)"->"$r127 = interfaceinvoke r146.<java.util.Map: java.util.Collection values()>()";
    "$r127 = interfaceinvoke r146.<java.util.Map: java.util.Collection values()>()"->"$r128 = interfaceinvoke r143.<java.util.Map: java.util.Set keySet()>()";
    "$r128 = interfaceinvoke r143.<java.util.Map: java.util.Set keySet()>()"->"interfaceinvoke $r127.<java.util.Collection: boolean removeAll(java.util.Collection)>($r128)";
    "interfaceinvoke $r127.<java.util.Collection: boolean removeAll(java.util.Collection)>($r128)"->"$i8 = interfaceinvoke r146.<java.util.Map: int size()>()";
    "$i8 = interfaceinvoke r146.<java.util.Map: int size()>()"->"if $i8 != 1 goto $r129 = new java.lang.Exception";
    "if $i8 != 1 goto $r129 = new java.lang.Exception"->"$r130 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>";
    "if $i8 != 1 goto $r129 = new java.lang.Exception"->"$r129 = new java.lang.Exception";
    "$r130 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"->"$z34 = interfaceinvoke r146.<java.util.Map: boolean containsValue(java.lang.Object)>($r130)";
    "$z34 = interfaceinvoke r146.<java.util.Map: boolean containsValue(java.lang.Object)>($r130)"->"if $z34 != 0 goto i12 = 0";
    "if $z34 != 0 goto i12 = 0"->"$r129 = new java.lang.Exception";
    "if $z34 != 0 goto i12 = 0"->"i12 = 0";
    "$r129 = new java.lang.Exception"->"specialinvoke $r129.<java.lang.Exception: void <init>(java.lang.String)>(\"Collection views test failed.\")";
    "specialinvoke $r129.<java.lang.Exception: void <init>(java.lang.String)>(\"Collection views test failed.\")"->"throw $r129";
    "i12 = 0"->"$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>";
    "$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"->"if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>()";
    "if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>()"->"$z36 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r144)";
    "if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>()"->"$z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>()";
    "$z36 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r144)"->"if $z36 != 0 goto r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144)";
    "if $z36 != 0 goto r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144)"->"$r136 = new java.lang.Exception";
    "if $z36 != 0 goto r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144)"->"r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144)";
    "$r136 = new java.lang.Exception"->"specialinvoke $r136.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list doesn\'t contain a link.\")";
    "specialinvoke $r136.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list doesn\'t contain a link.\")"->"throw $r136";
    "r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144)"->"if r147 != null goto interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144)";
    "if r147 != null goto interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144)"->"$r135 = new java.lang.Exception";
    "if r147 != null goto interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144)"->"interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144)";
    "$r135 = new java.lang.Exception"->"specialinvoke $r135.<java.lang.Exception: void <init>(java.lang.String)>(\"Could not retrieve a link.\")";
    "specialinvoke $r135.<java.lang.Exception: void <init>(java.lang.String)>(\"Could not retrieve a link.\")"->"throw $r135";
    "interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144)"->"r144 = r147";
    "r144 = r147"->"i12 = i12 + 1";
    "i12 = i12 + 1"->"goto [?= $r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>]";
    "goto [?= $r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>]"->"$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>";
    "$z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>()"->"if $z35 != 0 goto (branch)";
    "if $z35 != 0 goto (branch)"->"$r133 = new java.lang.Exception";
    "if $z35 != 0 goto (branch)"->"if i12 == s1 goto i10 = i10 + 1";
    "$r133 = new java.lang.Exception"->"specialinvoke $r133.<java.lang.Exception: void <init>(java.lang.String)>(\"Map nonempty after removing all links.\")";
    "specialinvoke $r133.<java.lang.Exception: void <init>(java.lang.String)>(\"Map nonempty after removing all links.\")"->"throw $r133";
    "if i12 == s1 goto i10 = i10 + 1"->"$r132 = new java.lang.Exception";
    "if i12 == s1 goto i10 = i10 + 1"->"i10 = i10 + 1";
    "$r132 = new java.lang.Exception"->"specialinvoke $r132.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list size not as expected.\")";
    "specialinvoke $r132.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list size not as expected.\")"->"throw $r132";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 >= s0 goto $r0 = new java.util.LinkedHashMap";
    "$r0 = new java.util.LinkedHashMap"->"specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()";
    "specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>()"->"r148 = $r0";
    "r148 = $r0"->"i13 = 0";
    "i13 = 0"->"if i13 >= s1 goto i14 = 0";
    "if i13 >= s1 goto i14 = 0"->"$r120 = new java.lang.Integer";
    "if i13 >= s1 goto i14 = 0"->"i14 = 0";
    "$r120 = new java.lang.Integer"->"specialinvoke $r120.<java.lang.Integer: void <init>(int)>(i13)";
    "specialinvoke $r120.<java.lang.Integer: void <init>(int)>(i13)"->"$r121 = new java.lang.Integer";
    "$r121 = new java.lang.Integer"->"$i4 = 2 * i13";
    "$i4 = 2 * i13"->"specialinvoke $r121.<java.lang.Integer: void <init>(int)>($i4)";
    "specialinvoke $r121.<java.lang.Integer: void <init>(int)>($i4)"->"$r122 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121)";
    "$r122 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121)"->"if $r122 == null goto i13 = i13 + 1";
    "if $r122 == null goto i13 = i13 + 1"->"$r123 = new java.lang.Exception";
    "if $r122 == null goto i13 = i13 + 1"->"i13 = i13 + 1";
    "$r123 = new java.lang.Exception"->"specialinvoke $r123.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns non-null value erroenously.\")";
    "specialinvoke $r123.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns non-null value erroenously.\")"->"throw $r123";
    "i13 = i13 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 >= s1 goto i14 = 0";
    "i14 = 0"->"$i2 = 2 * s1";
    "$i2 = 2 * s1"->"if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>";
    "if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"->"$r114 = new java.lang.Integer";
    "if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"->"$r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>";
    "$r114 = new java.lang.Integer"->"specialinvoke $r114.<java.lang.Integer: void <init>(int)>(i14)";
    "specialinvoke $r114.<java.lang.Integer: void <init>(int)>(i14)"->"$z32 = interfaceinvoke r148.<java.util.Map: boolean containsValue(java.lang.Object)>($r114)";
    "$z32 = interfaceinvoke r148.<java.util.Map: boolean containsValue(java.lang.Object)>($r114)"->"$i3 = i14 % 2";
    "$i3 = i14 % 2"->"if $i3 != 0 goto $z38 = 0";
    "if $i3 != 0 goto $z38 = 0"->"$z38 = 1";
    "if $i3 != 0 goto $z38 = 0"->"$z38 = 0";
    "$z38 = 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if $z32 == $z38 goto i14 = i14 + 1";
    "$z38 = 0"->"if $z32 == $z38 goto i14 = i14 + 1";
    "if $z32 == $z38 goto i14 = i14 + 1"->"$r115 = new java.lang.Exception";
    "if $z32 == $z38 goto i14 = i14 + 1"->"i14 = i14 + 1";
    "$r115 = new java.lang.Exception"->"$r116 = new java.lang.StringBuilder";
    "$r116 = new java.lang.StringBuilder"->"specialinvoke $r116.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r116.<java.lang.StringBuilder: void <init>()>()"->"$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \")";
    "$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \")"->"$r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)";
    "$r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14)"->"$r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r115.<java.lang.Exception: void <init>(java.lang.String)>($r119)";
    "specialinvoke $r115.<java.lang.Exception: void <init>(java.lang.String)>($r119)"->"throw $r115";
    "i14 = i14 + 1"->"goto [?= $i2 = 2 * s1]";
    "goto [?= $i2 = 2 * s1]"->"$i2 = 2 * s1";
    "$r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"->"$r1 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>";
    "$r1 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>"->"$r3 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1)";
    "$r3 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1)"->"if $r3 != null goto $r4 = new java.util.LinkedHashMap";
    "if $r3 != null goto $r4 = new java.util.LinkedHashMap"->"$r113 = new java.lang.Exception";
    "if $r3 != null goto $r4 = new java.util.LinkedHashMap"->"$r4 = new java.util.LinkedHashMap";
    "$r113 = new java.lang.Exception"->"specialinvoke $r113.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns a null value erroenously.\")";
    "specialinvoke $r113.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns a null value erroenously.\")"->"throw $r113";
    "$r4 = new java.util.LinkedHashMap"->"specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>()";
    "specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>()"->"r149 = $r4";
    "r149 = $r4"->"interfaceinvoke r149.<java.util.Map: void putAll(java.util.Map)>(r148)";
    "interfaceinvoke r149.<java.util.Map: void putAll(java.util.Map)>(r148)"->"$z0 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r149)";
    "$z0 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r149)"->"if $z0 != 0 goto $z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148)";
    "if $z0 != 0 goto $z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148)"->"$r112 = new java.lang.Exception";
    "if $z0 != 0 goto $z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148)"->"$z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148)";
    "$r112 = new java.lang.Exception"->"specialinvoke $r112.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (1)\")";
    "specialinvoke $r112.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (1)\")"->"throw $r112";
    "$z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148)"->"if $z1 != 0 goto r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()";
    "if $z1 != 0 goto r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"$r111 = new java.lang.Exception";
    "if $z1 != 0 goto r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()";
    "$r111 = new java.lang.Exception"->"specialinvoke $r111.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (2)\")";
    "specialinvoke $r111.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (2)\")"->"throw $r111";
    "r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"r151 = interfaceinvoke r149.<java.util.Map: java.util.Set entrySet()>()";
    "r151 = interfaceinvoke r149.<java.util.Map: java.util.Set entrySet()>()"->"$z2 = interfaceinvoke r150.<java.util.Set: boolean equals(java.lang.Object)>(r151)";
    "$z2 = interfaceinvoke r150.<java.util.Set: boolean equals(java.lang.Object)>(r151)"->"if $z2 != 0 goto $z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150)";
    "if $z2 != 0 goto $z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150)"->"$r110 = new java.lang.Exception";
    "if $z2 != 0 goto $z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150)"->"$z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150)";
    "$r110 = new java.lang.Exception"->"specialinvoke $r110.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (3)\")";
    "specialinvoke $r110.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (3)\")"->"throw $r110";
    "$z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150)"->"if $z3 != 0 goto $z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151)";
    "if $z3 != 0 goto $z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151)"->"$r109 = new java.lang.Exception";
    "if $z3 != 0 goto $z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151)"->"$z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151)";
    "$r109 = new java.lang.Exception"->"specialinvoke $r109.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (4)\")";
    "specialinvoke $r109.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (4)\")"->"throw $r109";
    "$z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151)"->"if $z4 != 0 goto $z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150)";
    "if $z4 != 0 goto $z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150)"->"$r108 = new java.lang.Exception";
    "if $z4 != 0 goto $z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150)"->"$z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150)";
    "$r108 = new java.lang.Exception"->"specialinvoke $r108.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain clone!\")";
    "specialinvoke $r108.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain clone!\")"->"throw $r108";
    "$z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150)"->"if $z5 != 0 goto r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148)";
    "if $z5 != 0 goto r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148)"->"$r107 = new java.lang.Exception";
    "if $z5 != 0 goto r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148)"->"r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148)";
    "$r107 = new java.lang.Exception"->"specialinvoke $r107.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone doesn\'t contain original!\")";
    "specialinvoke $r107.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone doesn\'t contain original!\")"->"throw $r107";
    "r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148)"->"$z6 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r152)";
    "$z6 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r152)"->"if $z6 != 0 goto $z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148)";
    "if $z6 != 0 goto $z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148)"->"$r106 = new java.lang.Exception";
    "if $z6 != 0 goto $z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148)"->"$z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148)";
    "$r106 = new java.lang.Exception"->"specialinvoke $r106.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (1)\")";
    "specialinvoke $r106.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (1)\")"->"throw $r106";
    "$z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148)"->"if $z7 != 0 goto r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()";
    "if $z7 != 0 goto r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"$r105 = new java.lang.Exception";
    "if $z7 != 0 goto r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()";
    "$r105 = new java.lang.Exception"->"specialinvoke $r105.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (2)\")";
    "specialinvoke $r105.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (2)\")"->"throw $r105";
    "r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"r154 = interfaceinvoke r152.<java.util.Map: java.util.Set entrySet()>()";
    "r154 = interfaceinvoke r152.<java.util.Map: java.util.Set entrySet()>()"->"$z8 = interfaceinvoke r153.<java.util.Set: boolean equals(java.lang.Object)>(r154)";
    "$z8 = interfaceinvoke r153.<java.util.Set: boolean equals(java.lang.Object)>(r154)"->"if $z8 != 0 goto $z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153)";
    "if $z8 != 0 goto $z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153)"->"$r104 = new java.lang.Exception";
    "if $z8 != 0 goto $z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153)"->"$z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153)";
    "$r104 = new java.lang.Exception"->"specialinvoke $r104.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (3)\")";
    "specialinvoke $r104.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (3)\")"->"throw $r104";
    "$z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153)"->"if $z9 != 0 goto $z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154)";
    "if $z9 != 0 goto $z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154)"->"$r103 = new java.lang.Exception";
    "if $z9 != 0 goto $z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154)"->"$z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154)";
    "$r103 = new java.lang.Exception"->"specialinvoke $r103.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (4)\")";
    "specialinvoke $r103.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (4)\")"->"throw $r103";
    "$z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154)"->"if $z10 != 0 goto $z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153)";
    "if $z10 != 0 goto $z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153)"->"$r102 = new java.lang.Exception";
    "if $z10 != 0 goto $z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153)"->"$z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153)";
    "$r102 = new java.lang.Exception"->"specialinvoke $r102.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain Serialize clone!\")";
    "specialinvoke $r102.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain Serialize clone!\")"->"throw $r102";
    "$z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153)"->"if $z11 != 0 goto interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153)";
    "if $z11 != 0 goto interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153)"->"$r101 = new java.lang.Exception";
    "if $z11 != 0 goto interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153)"->"interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153)";
    "$r101 = new java.lang.Exception"->"specialinvoke $r101.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone doesn\'t contain original!\")";
    "specialinvoke $r101.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone doesn\'t contain original!\")"->"throw $r101";
    "interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153)"->"$z13 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>()";
    "$z13 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>()"->"if $z13 != 0 goto interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148)";
    "if $z13 != 0 goto interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148)"->"$r100 = new java.lang.Exception";
    "if $z13 != 0 goto interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148)"->"interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148)";
    "$r100 = new java.lang.Exception"->"specialinvoke $r100.<java.lang.Exception: void <init>(java.lang.String)>(\"entrySet().removeAll failed.\")";
    "specialinvoke $r100.<java.lang.Exception: void <init>(java.lang.String)>(\"entrySet().removeAll failed.\")"->"throw $r100";
    "interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148)"->"interfaceinvoke r152.<java.util.Map: void clear()>()";
    "interfaceinvoke r152.<java.util.Map: void clear()>()"->"$z14 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>()";
    "$z14 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>()"->"if $z14 != 0 goto $r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()";
    "if $z14 != 0 goto $r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"$r99 = new java.lang.Exception";
    "if $z14 != 0 goto $r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"$r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()";
    "$r99 = new java.lang.Exception"->"specialinvoke $r99.<java.lang.Exception: void <init>(java.lang.String)>(\"clear failed.\")";
    "specialinvoke $r99.<java.lang.Exception: void <init>(java.lang.String)>(\"clear failed.\")"->"throw $r99";
    "$r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>()"->"r155 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()";
    "r155 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>()"->"$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()";
    "$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()"->"if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>()";
    "if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>()"->"interfaceinvoke r155.<java.util.Iterator: java.lang.Object next()>()";
    "if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>()"->"$z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>()";
    "interfaceinvoke r155.<java.util.Iterator: java.lang.Object next()>()"->"interfaceinvoke r155.<java.util.Iterator: void remove()>()";
    "interfaceinvoke r155.<java.util.Iterator: void remove()>()"->"goto [?= $z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()]"->"$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()";
    "$z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>()"->"if $z16 != 0 goto $r6 = new java.util.LinkedHashMap";
    "if $z16 != 0 goto $r6 = new java.util.LinkedHashMap"->"$r97 = new java.lang.Exception";
    "if $z16 != 0 goto $r6 = new java.util.LinkedHashMap"->"$r6 = new java.util.LinkedHashMap";
    "$r97 = new java.lang.Exception"->"specialinvoke $r97.<java.lang.Exception: void <init>(java.lang.String)>(\"Iterator.remove() failed\")";
    "specialinvoke $r97.<java.lang.Exception: void <init>(java.lang.String)>(\"Iterator.remove() failed\")"->"throw $r97";
    "$r6 = new java.util.LinkedHashMap"->"specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>()";
    "specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>()"->"r156 = $r6";
    "r156 = $r6"->"$r7 = new java.util.ArrayList";
    "$r7 = new java.util.ArrayList"->"specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(s1)";
    "specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(s1)"->"r157 = $r7";
    "r157 = $r7"->"i15 = 0";
    "i15 = 0"->"if i15 >= s1 goto $r8 = new java.util.ArrayList";
    "if i15 >= s1 goto $r8 = new java.util.ArrayList"->"$r95 = new java.lang.Integer";
    "if i15 >= s1 goto $r8 = new java.util.ArrayList"->"$r8 = new java.util.ArrayList";
    "$r95 = new java.lang.Integer"->"specialinvoke $r95.<java.lang.Integer: void <init>(int)>(i15)";
    "specialinvoke $r95.<java.lang.Integer: void <init>(int)>(i15)"->"r158 = $r95";
    "r158 = $r95"->"interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r158, r158)";
    "interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r158, r158)"->"interfaceinvoke r157.<java.util.List: boolean add(java.lang.Object)>(r158)";
    "interfaceinvoke r157.<java.util.List: boolean add(java.lang.Object)>(r158)"->"i15 = i15 + 1";
    "i15 = i15 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i15 >= s1 goto $r8 = new java.util.ArrayList";
    "$r8 = new java.util.ArrayList"->"$r9 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()";
    "$r9 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()"->"specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9)";
    "specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9)"->"$z17 = virtualinvoke $r8.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)";
    "$z17 = virtualinvoke $r8.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"->"if $z17 != 0 goto i16 = s1 - 1";
    "if $z17 != 0 goto i16 = s1 - 1"->"$r94 = new java.lang.Exception";
    "if $z17 != 0 goto i16 = s1 - 1"->"i16 = s1 - 1";
    "$r94 = new java.lang.Exception"->"specialinvoke $r94.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved.\")";
    "specialinvoke $r94.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved.\")"->"throw $r94";
    "i16 = s1 - 1"->"if i16 < 0 goto $r10 = new java.util.ArrayList";
    "if i16 < 0 goto $r10 = new java.util.ArrayList"->"$r82 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i16)";
    "if i16 < 0 goto $r10 = new java.util.ArrayList"->"$r10 = new java.util.ArrayList";
    "$r82 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i16)"->"r159 = (java.lang.Integer) $r82";
    "r159 = (java.lang.Integer) $r82"->"$r83 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159)";
    "$r83 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159)"->"$z30 = virtualinvoke $r83.<java.lang.Object: boolean equals(java.lang.Object)>(r159)";
    "$z30 = virtualinvoke $r83.<java.lang.Object: boolean equals(java.lang.Object)>(r159)"->"if $z30 != 0 goto i16 = i16 + -1";
    "if $z30 != 0 goto i16 = i16 + -1"->"$r84 = new java.lang.Exception";
    "if $z30 != 0 goto i16 = i16 + -1"->"i16 = i16 + -1";
    "$r84 = new java.lang.Exception"->"$r85 = new java.lang.StringBuilder";
    "$r85 = new java.lang.StringBuilder"->"specialinvoke $r85.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r85.<java.lang.StringBuilder: void <init>()>()"->"$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \")";
    "$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \")"->"$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16)";
    "$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16)"->"$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r89 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159)";
    "$r89 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159)"->"$r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89)";
    "$r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89)"->"$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r159)";
    "$r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r159)"->"$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r84.<java.lang.Exception: void <init>(java.lang.String)>($r93)";
    "specialinvoke $r84.<java.lang.Exception: void <init>(java.lang.String)>($r93)"->"throw $r84";
    "i16 = i16 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i16 < 0 goto $r10 = new java.util.ArrayList";
    "$r10 = new java.util.ArrayList"->"$r11 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()";
    "$r11 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()"->"specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11)";
    "specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11)"->"$z18 = virtualinvoke $r10.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)";
    "$z18 = virtualinvoke $r10.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"->"if $z18 != 0 goto i17 = s1 - 1";
    "if $z18 != 0 goto i17 = s1 - 1"->"$r81 = new java.lang.Exception";
    "if $z18 != 0 goto i17 = s1 - 1"->"i17 = s1 - 1";
    "$r81 = new java.lang.Exception"->"specialinvoke $r81.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved after read.\")";
    "specialinvoke $r81.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved after read.\")"->"throw $r81";
    "i17 = s1 - 1"->"if i17 < 0 goto $r12 = new java.util.ArrayList";
    "if i17 < 0 goto $r12 = new java.util.ArrayList"->"$r79 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i17)";
    "if i17 < 0 goto $r12 = new java.util.ArrayList"->"$r12 = new java.util.ArrayList";
    "$r79 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i17)"->"r160 = (java.lang.Integer) $r79";
    "r160 = (java.lang.Integer) $r79"->"interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r160, r160)";
    "interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r160, r160)"->"i17 = i17 + -1";
    "i17 = i17 + -1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i17 < 0 goto $r12 = new java.util.ArrayList";
    "$r12 = new java.util.ArrayList"->"$r13 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()";
    "$r13 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>()"->"specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13)";
    "specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13)"->"$z19 = virtualinvoke $r12.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)";
    "$z19 = virtualinvoke $r12.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"->"if $z19 != 0 goto $r14 = (java.util.LinkedHashMap) r156";
    "if $z19 != 0 goto $r14 = (java.util.LinkedHashMap) r156"->"$r78 = new java.lang.Exception";
    "if $z19 != 0 goto $r14 = (java.util.LinkedHashMap) r156"->"$r14 = (java.util.LinkedHashMap) r156";
    "$r78 = new java.lang.Exception"->"specialinvoke $r78.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not preserved after reinsert.\")";
    "specialinvoke $r78.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not preserved after reinsert.\")"->"throw $r78";
    "$r14 = (java.util.LinkedHashMap) r156"->"$r15 = virtualinvoke $r14.<java.util.LinkedHashMap: java.lang.Object clone()>()";
    "$r15 = virtualinvoke $r14.<java.util.LinkedHashMap: java.lang.Object clone()>()"->"r161 = (java.util.Map) $r15";
    "r161 = (java.util.Map) $r15"->"$z20 = interfaceinvoke r156.<java.util.Map: boolean equals(java.lang.Object)>(r161)";
    "$z20 = interfaceinvoke r156.<java.util.Map: boolean equals(java.lang.Object)>(r161)"->"if $z20 != 0 goto $r16 = new java.util.ArrayList";
    "if $z20 != 0 goto $r16 = new java.util.ArrayList"->"$r77 = new java.lang.Exception";
    "if $z20 != 0 goto $r16 = new java.util.ArrayList"->"$r16 = new java.util.ArrayList";
    "$r77 = new java.lang.Exception"->"specialinvoke $r77.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert-order Map != clone.\")";
    "specialinvoke $r77.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert-order Map != clone.\")"->"throw $r77";
    "$r16 = new java.util.ArrayList"->"specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>(r157)";
    "specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>(r157)"->"r162 = $r16";
    "r162 = $r16"->"staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r162)";
    "staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r162)"->"i18 = 0";
    "i18 = 0"->"if i18 >= s1 goto $r17 = new java.util.ArrayList";
    "if i18 >= s1 goto $r17 = new java.util.ArrayList"->"$r65 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i18)";
    "if i18 >= s1 goto $r17 = new java.util.ArrayList"->"$r17 = new java.util.ArrayList";
    "$r65 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i18)"->"r163 = (java.lang.Integer) $r65";
    "r163 = (java.lang.Integer) $r65"->"$r66 = interfaceinvoke r161.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163)";
    "$r66 = interfaceinvoke r161.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163)"->"$z29 = virtualinvoke $r66.<java.lang.Object: boolean equals(java.lang.Object)>(r163)";
    "$z29 = virtualinvoke $r66.<java.lang.Object: boolean equals(java.lang.Object)>(r163)"->"if $z29 != 0 goto i18 = i18 + 1";
    "if $z29 != 0 goto i18 = i18 + 1"->"$r67 = new java.lang.Exception";
    "if $z29 != 0 goto i18 = i18 + 1"->"i18 = i18 + 1";
    "$r67 = new java.lang.Exception"->"$r68 = new java.lang.StringBuilder";
    "$r68 = new java.lang.StringBuilder"->"specialinvoke $r68.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r68.<java.lang.StringBuilder: void <init>()>()"->"$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \")";
    "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \")"->"$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)";
    "$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)"->"$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r72 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163)";
    "$r72 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163)"->"$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72)";
    "$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72)"->"$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r163)";
    "$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r163)"->"$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r67.<java.lang.Exception: void <init>(java.lang.String)>($r76)";
    "specialinvoke $r67.<java.lang.Exception: void <init>(java.lang.String)>($r76)"->"throw $r67";
    "i18 = i18 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i18 >= s1 goto $r17 = new java.util.ArrayList";
    "$r17 = new java.util.ArrayList"->"$r18 = interfaceinvoke r161.<java.util.Map: java.util.Set keySet()>()";
    "$r18 = interfaceinvoke r161.<java.util.Map: java.util.Set keySet()>()"->"specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r18)";
    "specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r18)"->"$z21 = virtualinvoke $r17.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)";
    "$z21 = virtualinvoke $r17.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"->"if $z21 != 0 goto $r19 = new java.util.LinkedHashMap";
    "if $z21 != 0 goto $r19 = new java.util.LinkedHashMap"->"$r64 = new java.lang.Exception";
    "if $z21 != 0 goto $r19 = new java.util.LinkedHashMap"->"$r19 = new java.util.LinkedHashMap";
    "$r64 = new java.lang.Exception"->"specialinvoke $r64.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: altered by read.\")";
    "specialinvoke $r64.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: altered by read.\")"->"throw $r64";
    "$r19 = new java.util.LinkedHashMap"->"specialinvoke $r19.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(1000, 0.75F, 1)";
    "specialinvoke $r19.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(1000, 0.75F, 1)"->"r164 = $r19";
    "r164 = $r19"->"i19 = 0";
    "i19 = 0"->"if i19 >= s1 goto $r20 = new java.util.ArrayList";
    "if i19 >= s1 goto $r20 = new java.util.ArrayList"->"$r62 = new java.lang.Integer";
    "if i19 >= s1 goto $r20 = new java.util.ArrayList"->"$r20 = new java.util.ArrayList";
    "$r62 = new java.lang.Integer"->"specialinvoke $r62.<java.lang.Integer: void <init>(int)>(i19)";
    "specialinvoke $r62.<java.lang.Integer: void <init>(int)>(i19)"->"r165 = $r62";
    "r165 = $r62"->"interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r165, r165)";
    "interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r165, r165)"->"i19 = i19 + 1";
    "i19 = i19 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i19 >= s1 goto $r20 = new java.util.ArrayList";
    "$r20 = new java.util.ArrayList"->"$r21 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()";
    "$r21 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()"->"specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r21)";
    "specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r21)"->"$z22 = virtualinvoke $r20.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)";
    "$z22 = virtualinvoke $r20.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"->"if $z22 != 0 goto i20 = 0";
    "if $z22 != 0 goto i20 = 0"->"$r61 = new java.lang.Exception";
    "if $z22 != 0 goto i20 = 0"->"i20 = 0";
    "$r61 = new java.lang.Exception"->"specialinvoke $r61.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not properly preserved.\")";
    "specialinvoke $r61.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not properly preserved.\")"->"throw $r61";
    "i20 = 0"->"if i20 >= s1 goto $r22 = new java.util.ArrayList";
    "if i20 >= s1 goto $r22 = new java.util.ArrayList"->"$r49 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i20)";
    "if i20 >= s1 goto $r22 = new java.util.ArrayList"->"$r22 = new java.util.ArrayList";
    "$r49 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i20)"->"r166 = (java.lang.Integer) $r49";
    "r166 = (java.lang.Integer) $r49"->"$r50 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166)";
    "$r50 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166)"->"$z28 = virtualinvoke $r50.<java.lang.Object: boolean equals(java.lang.Object)>(r166)";
    "$z28 = virtualinvoke $r50.<java.lang.Object: boolean equals(java.lang.Object)>(r166)"->"if $z28 != 0 goto i20 = i20 + 1";
    "if $z28 != 0 goto i20 = i20 + 1"->"$r51 = new java.lang.Exception";
    "if $z28 != 0 goto i20 = i20 + 1"->"i20 = i20 + 1";
    "$r51 = new java.lang.Exception"->"$r52 = new java.lang.StringBuilder";
    "$r52 = new java.lang.StringBuilder"->"specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()"->"$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \")";
    "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \")"->"$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20)";
    "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20)"->"$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r56 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166)";
    "$r56 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166)"->"$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56)";
    "$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56)"->"$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r166)";
    "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r166)"->"$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r51.<java.lang.Exception: void <init>(java.lang.String)>($r60)";
    "specialinvoke $r51.<java.lang.Exception: void <init>(java.lang.String)>($r60)"->"throw $r51";
    "i20 = i20 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i20 >= s1 goto $r22 = new java.util.ArrayList";
    "$r22 = new java.util.ArrayList"->"$r23 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()";
    "$r23 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()"->"specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23)";
    "specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23)"->"$z23 = virtualinvoke $r22.<java.util.ArrayList: boolean equals(java.lang.Object)>(r162)";
    "$z23 = virtualinvoke $r22.<java.util.ArrayList: boolean equals(java.lang.Object)>(r162)"->"if $z23 != 0 goto i21 = 0";
    "if $z23 != 0 goto i21 = 0"->"$r48 = new java.lang.Exception";
    "if $z23 != 0 goto i21 = 0"->"i21 = 0";
    "$r48 = new java.lang.Exception"->"specialinvoke $r48.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not properly altered by read.\")";
    "specialinvoke $r48.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not properly altered by read.\")"->"throw $r48";
    "i21 = 0"->"if i21 >= s1 goto $r24 = new java.util.ArrayList";
    "if i21 >= s1 goto $r24 = new java.util.ArrayList"->"$r46 = new java.lang.Integer";
    "if i21 >= s1 goto $r24 = new java.util.ArrayList"->"$r24 = new java.util.ArrayList";
    "$r46 = new java.lang.Integer"->"specialinvoke $r46.<java.lang.Integer: void <init>(int)>(i21)";
    "specialinvoke $r46.<java.lang.Integer: void <init>(int)>(i21)"->"r167 = $r46";
    "r167 = $r46"->"interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r167, r167)";
    "interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r167, r167)"->"i21 = i21 + 1";
    "i21 = i21 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i21 >= s1 goto $r24 = new java.util.ArrayList";
    "$r24 = new java.util.ArrayList"->"$r25 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()";
    "$r25 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>()"->"specialinvoke $r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r25)";
    "specialinvoke $r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r25)"->"$z24 = virtualinvoke $r24.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)";
    "$z24 = virtualinvoke $r24.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"->"if $z24 != 0 goto $r26 = (java.util.LinkedHashMap) r164";
    "if $z24 != 0 goto $r26 = (java.util.LinkedHashMap) r164"->"$r45 = new java.lang.Exception";
    "if $z24 != 0 goto $r26 = (java.util.LinkedHashMap) r164"->"$r26 = (java.util.LinkedHashMap) r164";
    "$r45 = new java.lang.Exception"->"specialinvoke $r45.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not altered by reinsert.\")";
    "specialinvoke $r45.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not altered by reinsert.\")"->"throw $r45";
    "$r26 = (java.util.LinkedHashMap) r164"->"$r27 = virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object clone()>()";
    "$r27 = virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object clone()>()"->"r168 = (java.util.Map) $r27";
    "r168 = (java.util.Map) $r27"->"$z25 = interfaceinvoke r164.<java.util.Map: boolean equals(java.lang.Object)>(r168)";
    "$z25 = interfaceinvoke r164.<java.util.Map: boolean equals(java.lang.Object)>(r168)"->"if $z25 != 0 goto i22 = 0";
    "if $z25 != 0 goto i22 = 0"->"$r44 = new java.lang.Exception";
    "if $z25 != 0 goto i22 = 0"->"i22 = 0";
    "$r44 = new java.lang.Exception"->"specialinvoke $r44.<java.lang.Exception: void <init>(java.lang.String)>(\"Access-order Map != clone.\")";
    "specialinvoke $r44.<java.lang.Exception: void <init>(java.lang.String)>(\"Access-order Map != clone.\")"->"throw $r44";
    "i22 = 0"->"if i22 >= s1 goto $r28 = new java.util.ArrayList";
    "if i22 >= s1 goto $r28 = new java.util.ArrayList"->"$r32 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i22)";
    "if i22 >= s1 goto $r28 = new java.util.ArrayList"->"$r28 = new java.util.ArrayList";
    "$r32 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i22)"->"r169 = (java.lang.Integer) $r32";
    "r169 = (java.lang.Integer) $r32"->"$r33 = interfaceinvoke r168.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169)";
    "$r33 = interfaceinvoke r168.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169)"->"$z27 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>(r169)";
    "$z27 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>(r169)"->"if $z27 != 0 goto i22 = i22 + 1";
    "if $z27 != 0 goto i22 = i22 + 1"->"$r34 = new java.lang.Exception";
    "if $z27 != 0 goto i22 = i22 + 1"->"i22 = i22 + 1";
    "$r34 = new java.lang.Exception"->"$r35 = new java.lang.StringBuilder";
    "$r35 = new java.lang.StringBuilder"->"specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()"->"$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \")";
    "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \")"->"$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22)";
    "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22)"->"$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r39 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169)";
    "$r39 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169)"->"$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39)";
    "$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39)"->"$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r169)";
    "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r169)"->"$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>($r43)";
    "specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>($r43)"->"throw $r34";
    "i22 = i22 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i22 >= s1 goto $r28 = new java.util.ArrayList";
    "$r28 = new java.util.ArrayList"->"$r29 = interfaceinvoke r168.<java.util.Map: java.util.Set keySet()>()";
    "$r29 = interfaceinvoke r168.<java.util.Map: java.util.Set keySet()>()"->"specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r29)";
    "specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r29)"->"$z26 = virtualinvoke $r28.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)";
    "$z26 = virtualinvoke $r28.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157)"->"if $z26 != 0 goto $r30 = <java.lang.System: java.io.PrintStream err>";
    "if $z26 != 0 goto $r30 = <java.lang.System: java.io.PrintStream err>"->"$r31 = new java.lang.Exception";
    "if $z26 != 0 goto $r30 = <java.lang.System: java.io.PrintStream err>"->"$r30 = <java.lang.System: java.io.PrintStream err>";
    "$r31 = new java.lang.Exception"->"specialinvoke $r31.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: order not properly altered by read.\")";
    "specialinvoke $r31.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: order not properly altered by read.\")"->"throw $r31";
    "$r30 = <java.lang.System: java.io.PrintStream err>"->"virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(\"Success.\")";
    "virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(\"Success.\")"->"return";
}
