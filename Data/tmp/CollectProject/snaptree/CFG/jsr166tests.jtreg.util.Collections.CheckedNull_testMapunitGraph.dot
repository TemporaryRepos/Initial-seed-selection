digraph "unitGraph" {
    "r0 := @this: jsr166tests.jtreg.util.Collections.CheckedNull"
    "r1 := @parameter0: java.util.Map"
    "$z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z0)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", null)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, \"foo\")"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, null)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", \"bar\")"
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"
    "$r3 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"
    "$r4 = new jsr166tests.jtreg.util.Collections.CheckedNull$4"
    "specialinvoke $r4.<jsr166tests.jtreg.util.Collections.CheckedNull$4: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"
    "$r3[0] = $r4"
    "$r5 = new jsr166tests.jtreg.util.Collections.CheckedNull$5"
    "specialinvoke $r5.<jsr166tests.jtreg.util.Collections.CheckedNull$5: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"
    "$r3[1] = $r5"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r3)"
    "$r6 = new jsr166tests.jtreg.util.Collections.CheckedNull$6"
    "specialinvoke $r6.<jsr166tests.jtreg.util.Collections.CheckedNull$6: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull)>(r0)"
    "r24 = $r6"
    "$r7 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[5]"
    "$r8 = new jsr166tests.jtreg.util.Collections.CheckedNull$7"
    "specialinvoke $r8.<jsr166tests.jtreg.util.Collections.CheckedNull$7: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"
    "$r7[0] = $r8"
    "$r9 = new jsr166tests.jtreg.util.Collections.CheckedNull$8"
    "specialinvoke $r9.<jsr166tests.jtreg.util.Collections.CheckedNull$8: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"
    "$r7[1] = $r9"
    "$r10 = new jsr166tests.jtreg.util.Collections.CheckedNull$9"
    "specialinvoke $r10.<jsr166tests.jtreg.util.Collections.CheckedNull$9: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"
    "$r7[2] = $r10"
    "$r11 = new jsr166tests.jtreg.util.Collections.CheckedNull$10"
    "specialinvoke $r11.<jsr166tests.jtreg.util.Collections.CheckedNull$10: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map,java.util.Collection)>(r0, r1, r24)"
    "$r7[3] = $r11"
    "$r12 = new jsr166tests.jtreg.util.Collections.CheckedNull$11"
    "specialinvoke $r12.<jsr166tests.jtreg.util.Collections.CheckedNull$11: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map,java.util.Collection)>(r0, r1, r24)"
    "$r7[4] = $r12"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r7)"
    "$r13 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"
    "$r14 = new jsr166tests.jtreg.util.Collections.CheckedNull$12"
    "specialinvoke $r14.<jsr166tests.jtreg.util.Collections.CheckedNull$12: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"
    "$r13[0] = $r14"
    "$r15 = new jsr166tests.jtreg.util.Collections.CheckedNull$13"
    "specialinvoke $r15.<jsr166tests.jtreg.util.Collections.CheckedNull$13: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"
    "$r13[1] = $r15"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r13)"
    "$i0 = interfaceinvoke r1.<java.util.Map: int size()>()"
    "$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r16, $r17)"
    "$r18 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()"
    "$r19 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(\"a\")"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r18, $r19)"
    "$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"
    "$r21 = new java.util.AbstractMap$SimpleImmutableEntry"
    "specialinvoke $r21.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"
    "$r22 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r21)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r20, $r22)"
    "goto [?= return]"
    "$r23 := @caughtexception"
    "r25 = $r23"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void unexpected(java.lang.Throwable)>(r25)"
    "return"
    "r0 := @this: jsr166tests.jtreg.util.Collections.CheckedNull"->"r1 := @parameter0: java.util.Map";
    "r1 := @parameter0: java.util.Map"->"$z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()";
    "r1 := @parameter0: java.util.Map"->"$r23 := @caughtexception";
    "$z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z0)";
    "$z0 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>()"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z0)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", null)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z0)"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", null)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, \"foo\")";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", null)"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, \"foo\")"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, null)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, \"foo\")"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, null)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", \"bar\")";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, null)"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", \"bar\")"->"interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", \"bar\")"->"$r23 := @caughtexception";
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", null)";
    "interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", null)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, \"foo\")";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", null)"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, \"foo\")"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, null)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, \"foo\")"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, null)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", \"bar\")";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, null, null)"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", \"bar\")"->"$r3 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void put(java.util.Map,java.lang.Object,java.lang.Object)>(r1, \"foo\", \"bar\")"->"$r23 := @caughtexception";
    "$r3 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"->"$r4 = new jsr166tests.jtreg.util.Collections.CheckedNull$4";
    "$r3 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"->"$r23 := @caughtexception";
    "$r4 = new jsr166tests.jtreg.util.Collections.CheckedNull$4"->"specialinvoke $r4.<jsr166tests.jtreg.util.Collections.CheckedNull$4: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)";
    "$r4 = new jsr166tests.jtreg.util.Collections.CheckedNull$4"->"$r23 := @caughtexception";
    "specialinvoke $r4.<jsr166tests.jtreg.util.Collections.CheckedNull$4: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r3[0] = $r4";
    "specialinvoke $r4.<jsr166tests.jtreg.util.Collections.CheckedNull$4: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r23 := @caughtexception";
    "$r3[0] = $r4"->"$r5 = new jsr166tests.jtreg.util.Collections.CheckedNull$5";
    "$r3[0] = $r4"->"$r23 := @caughtexception";
    "$r5 = new jsr166tests.jtreg.util.Collections.CheckedNull$5"->"specialinvoke $r5.<jsr166tests.jtreg.util.Collections.CheckedNull$5: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)";
    "$r5 = new jsr166tests.jtreg.util.Collections.CheckedNull$5"->"$r23 := @caughtexception";
    "specialinvoke $r5.<jsr166tests.jtreg.util.Collections.CheckedNull$5: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r3[1] = $r5";
    "specialinvoke $r5.<jsr166tests.jtreg.util.Collections.CheckedNull$5: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r23 := @caughtexception";
    "$r3[1] = $r5"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r3)";
    "$r3[1] = $r5"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r3)"->"$r6 = new jsr166tests.jtreg.util.Collections.CheckedNull$6";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r3)"->"$r23 := @caughtexception";
    "$r6 = new jsr166tests.jtreg.util.Collections.CheckedNull$6"->"specialinvoke $r6.<jsr166tests.jtreg.util.Collections.CheckedNull$6: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull)>(r0)";
    "$r6 = new jsr166tests.jtreg.util.Collections.CheckedNull$6"->"$r23 := @caughtexception";
    "specialinvoke $r6.<jsr166tests.jtreg.util.Collections.CheckedNull$6: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull)>(r0)"->"r24 = $r6";
    "specialinvoke $r6.<jsr166tests.jtreg.util.Collections.CheckedNull$6: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull)>(r0)"->"$r23 := @caughtexception";
    "r24 = $r6"->"$r7 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[5]";
    "r24 = $r6"->"$r23 := @caughtexception";
    "$r7 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[5]"->"$r8 = new jsr166tests.jtreg.util.Collections.CheckedNull$7";
    "$r7 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[5]"->"$r23 := @caughtexception";
    "$r8 = new jsr166tests.jtreg.util.Collections.CheckedNull$7"->"specialinvoke $r8.<jsr166tests.jtreg.util.Collections.CheckedNull$7: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)";
    "$r8 = new jsr166tests.jtreg.util.Collections.CheckedNull$7"->"$r23 := @caughtexception";
    "specialinvoke $r8.<jsr166tests.jtreg.util.Collections.CheckedNull$7: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r7[0] = $r8";
    "specialinvoke $r8.<jsr166tests.jtreg.util.Collections.CheckedNull$7: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r23 := @caughtexception";
    "$r7[0] = $r8"->"$r9 = new jsr166tests.jtreg.util.Collections.CheckedNull$8";
    "$r7[0] = $r8"->"$r23 := @caughtexception";
    "$r9 = new jsr166tests.jtreg.util.Collections.CheckedNull$8"->"specialinvoke $r9.<jsr166tests.jtreg.util.Collections.CheckedNull$8: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)";
    "$r9 = new jsr166tests.jtreg.util.Collections.CheckedNull$8"->"$r23 := @caughtexception";
    "specialinvoke $r9.<jsr166tests.jtreg.util.Collections.CheckedNull$8: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r7[1] = $r9";
    "specialinvoke $r9.<jsr166tests.jtreg.util.Collections.CheckedNull$8: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r23 := @caughtexception";
    "$r7[1] = $r9"->"$r10 = new jsr166tests.jtreg.util.Collections.CheckedNull$9";
    "$r7[1] = $r9"->"$r23 := @caughtexception";
    "$r10 = new jsr166tests.jtreg.util.Collections.CheckedNull$9"->"specialinvoke $r10.<jsr166tests.jtreg.util.Collections.CheckedNull$9: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)";
    "$r10 = new jsr166tests.jtreg.util.Collections.CheckedNull$9"->"$r23 := @caughtexception";
    "specialinvoke $r10.<jsr166tests.jtreg.util.Collections.CheckedNull$9: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r7[2] = $r10";
    "specialinvoke $r10.<jsr166tests.jtreg.util.Collections.CheckedNull$9: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r23 := @caughtexception";
    "$r7[2] = $r10"->"$r11 = new jsr166tests.jtreg.util.Collections.CheckedNull$10";
    "$r7[2] = $r10"->"$r23 := @caughtexception";
    "$r11 = new jsr166tests.jtreg.util.Collections.CheckedNull$10"->"specialinvoke $r11.<jsr166tests.jtreg.util.Collections.CheckedNull$10: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map,java.util.Collection)>(r0, r1, r24)";
    "$r11 = new jsr166tests.jtreg.util.Collections.CheckedNull$10"->"$r23 := @caughtexception";
    "specialinvoke $r11.<jsr166tests.jtreg.util.Collections.CheckedNull$10: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map,java.util.Collection)>(r0, r1, r24)"->"$r7[3] = $r11";
    "specialinvoke $r11.<jsr166tests.jtreg.util.Collections.CheckedNull$10: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map,java.util.Collection)>(r0, r1, r24)"->"$r23 := @caughtexception";
    "$r7[3] = $r11"->"$r12 = new jsr166tests.jtreg.util.Collections.CheckedNull$11";
    "$r7[3] = $r11"->"$r23 := @caughtexception";
    "$r12 = new jsr166tests.jtreg.util.Collections.CheckedNull$11"->"specialinvoke $r12.<jsr166tests.jtreg.util.Collections.CheckedNull$11: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map,java.util.Collection)>(r0, r1, r24)";
    "$r12 = new jsr166tests.jtreg.util.Collections.CheckedNull$11"->"$r23 := @caughtexception";
    "specialinvoke $r12.<jsr166tests.jtreg.util.Collections.CheckedNull$11: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map,java.util.Collection)>(r0, r1, r24)"->"$r7[4] = $r12";
    "specialinvoke $r12.<jsr166tests.jtreg.util.Collections.CheckedNull$11: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map,java.util.Collection)>(r0, r1, r24)"->"$r23 := @caughtexception";
    "$r7[4] = $r12"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r7)";
    "$r7[4] = $r12"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r7)"->"$r13 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r7)"->"$r23 := @caughtexception";
    "$r13 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"->"$r14 = new jsr166tests.jtreg.util.Collections.CheckedNull$12";
    "$r13 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"->"$r23 := @caughtexception";
    "$r14 = new jsr166tests.jtreg.util.Collections.CheckedNull$12"->"specialinvoke $r14.<jsr166tests.jtreg.util.Collections.CheckedNull$12: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)";
    "$r14 = new jsr166tests.jtreg.util.Collections.CheckedNull$12"->"$r23 := @caughtexception";
    "specialinvoke $r14.<jsr166tests.jtreg.util.Collections.CheckedNull$12: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r13[0] = $r14";
    "specialinvoke $r14.<jsr166tests.jtreg.util.Collections.CheckedNull$12: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r23 := @caughtexception";
    "$r13[0] = $r14"->"$r15 = new jsr166tests.jtreg.util.Collections.CheckedNull$13";
    "$r13[0] = $r14"->"$r23 := @caughtexception";
    "$r15 = new jsr166tests.jtreg.util.Collections.CheckedNull$13"->"specialinvoke $r15.<jsr166tests.jtreg.util.Collections.CheckedNull$13: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)";
    "$r15 = new jsr166tests.jtreg.util.Collections.CheckedNull$13"->"$r23 := @caughtexception";
    "specialinvoke $r15.<jsr166tests.jtreg.util.Collections.CheckedNull$13: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r13[1] = $r15";
    "specialinvoke $r15.<jsr166tests.jtreg.util.Collections.CheckedNull$13: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Map)>(r0, r1)"->"$r23 := @caughtexception";
    "$r13[1] = $r15"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r13)";
    "$r13[1] = $r15"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r13)"->"$i0 = interfaceinvoke r1.<java.util.Map: int size()>()";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r13)"->"$r23 := @caughtexception";
    "$i0 = interfaceinvoke r1.<java.util.Map: int size()>()"->"$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$i0 = interfaceinvoke r1.<java.util.Map: int size()>()"->"$r23 := @caughtexception";
    "$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r23 := @caughtexception";
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r16, $r17)";
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r16, $r17)"->"$r18 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r16, $r17)"->"$r23 := @caughtexception";
    "$r18 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()"->"$r19 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(\"a\")";
    "$r18 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()"->"$r23 := @caughtexception";
    "$r19 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(\"a\")"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r18, $r19)";
    "$r19 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(\"a\")"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r18, $r19)"->"$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r18, $r19)"->"$r23 := @caughtexception";
    "$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"->"$r21 = new java.util.AbstractMap$SimpleImmutableEntry";
    "$r20 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>()"->"$r23 := @caughtexception";
    "$r21 = new java.util.AbstractMap$SimpleImmutableEntry"->"specialinvoke $r21.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(\"a\", \"b\")";
    "$r21 = new java.util.AbstractMap$SimpleImmutableEntry"->"$r23 := @caughtexception";
    "specialinvoke $r21.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"->"$r22 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r21)";
    "specialinvoke $r21.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(\"a\", \"b\")"->"$r23 := @caughtexception";
    "$r22 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r21)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r20, $r22)";
    "$r22 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r21)"->"$r23 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r20, $r22)"->"goto [?= return]";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r20, $r22)"->"$r23 := @caughtexception";
    "goto [?= return]"->"return";
    "$r23 := @caughtexception"->"r25 = $r23";
    "r25 = $r23"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void unexpected(java.lang.Throwable)>(r25)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void unexpected(java.lang.Throwable)>(r25)"->"return";
}
