digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new java.util.Hashtable;
specialinvoke $r0.<java.util.Hashtable: void <init>()>();
r1 = $r0;
$i0 = interfaceinvoke r1.<java.util.Map: int hashCode()>();
if $i0 == 0 goto interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Joe\", \"Blow\");
"
    "Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"Empty Hashtable has nonzero hashCode.\");
throw $r6;
"
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Joe\", \"Blow\");
$i1 = interfaceinvoke r1.<java.util.Map: int hashCode()>();
$r3 = \"Joe\";
$i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();
$r4 = \"Blow\";
$i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>();
$i4 = $i2 ^ $i3;
if $i1 == $i4 goto return;
"
    "Block 3:
[preds: 2 ] [succs: ]
$r5 = new java.lang.Exception;
specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Non-empty Hashtable has wrong hashCode.\");
throw $r5;
"
    "Block 4:
[preds: 2 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new java.util.Hashtable;
specialinvoke $r0.<java.util.Hashtable: void <init>()>();
r1 = $r0;
$i0 = interfaceinvoke r1.<java.util.Map: int hashCode()>();
if $i0 == 0 goto interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Joe\", \"Blow\");
"->"Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"Empty Hashtable has nonzero hashCode.\");
throw $r6;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new java.util.Hashtable;
specialinvoke $r0.<java.util.Hashtable: void <init>()>();
r1 = $r0;
$i0 = interfaceinvoke r1.<java.util.Map: int hashCode()>();
if $i0 == 0 goto interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Joe\", \"Blow\");
"->"Block 2:
[preds: 0 ] [succs: 3 4 ]
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Joe\", \"Blow\");
$i1 = interfaceinvoke r1.<java.util.Map: int hashCode()>();
$r3 = \"Joe\";
$i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();
$r4 = \"Blow\";
$i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>();
$i4 = $i2 ^ $i3;
if $i1 == $i4 goto return;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Joe\", \"Blow\");
$i1 = interfaceinvoke r1.<java.util.Map: int hashCode()>();
$r3 = \"Joe\";
$i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();
$r4 = \"Blow\";
$i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>();
$i4 = $i2 ^ $i3;
if $i1 == $i4 goto return;
"->"Block 3:
[preds: 2 ] [succs: ]
$r5 = new java.lang.Exception;
specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Non-empty Hashtable has wrong hashCode.\");
throw $r5;
";
    "Block 2:
[preds: 0 ] [succs: 3 4 ]
interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"Joe\", \"Blow\");
$i1 = interfaceinvoke r1.<java.util.Map: int hashCode()>();
$r3 = \"Joe\";
$i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();
$r4 = \"Blow\";
$i3 = virtualinvoke $r4.<java.lang.String: int hashCode()>();
$i4 = $i2 ^ $i3;
if $i1 == $i4 goto return;
"->"Block 4:
[preds: 2 ] [succs: ]
return;
";
}
