digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r36 := @parameter0: java.lang.String[];
$r0 = newarray (java.util.List)[3];
$r1 = new java.util.ArrayList;
specialinvoke $r1.<java.util.ArrayList: void <init>()>();
$r0[0] = $r1;
$r2 = new java.util.LinkedList;
specialinvoke $r2.<java.util.LinkedList: void <init>()>();
$r0[1] = $r2;
$r3 = new java.util.Vector;
specialinvoke $r3.<java.util.Vector: void <init>()>();
$r0[2] = $r3;
r4 = $r0;
i6 = 0;
"
    "Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$i0 = lengthof r4;
if i6 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
r5 = r4[i6];
i7 = 0;
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= 120 goto i8 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r35 = new java.lang.Integer;
specialinvoke $r35.<java.lang.Integer: void <init>(int)>(i7);
interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r35);
i7 = i7 + 1;
goto [?= (branch)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
i8 = 0;
i9 = 0;
"
    "Block 6:
[preds: 5 19 ] [succs: 7 20 ]
if i9 >= 10000 goto i6 = i6 + 1;
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r6 = <jsr166tests.jtreg.util.Collections.Rotate: java.util.Random rnd>;
$i1 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(200);
i2 = $i1 - 100;
staticinvoke <java.util.Collections: void rotate(java.util.List,int)>(r5, i2);
$i3 = i8 + i2;
i8 = $i3 % 120;
if i8 >= 0 goto i10 = 0;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
i8 = i8 + 120;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 ]
i10 = 0;
i11 = i8;
"
    "Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i11 >= 120 goto i12 = 0;
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11);
$r22 = (java.lang.Integer) $r21;
$i5 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
if $i5 == i10 goto i11 = i11 + 1;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r23 = new java.lang.Exception;
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11);
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>($r34);
throw $r23;
"
    "Block 13:
[preds: 11 ] [succs: 10 ]
i11 = i11 + 1;
i10 = i10 + 1;
goto [?= (branch)];
"
    "Block 14:
[preds: 10 ] [succs: 15 ]
i12 = 0;
"
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i12 >= i8 goto i9 = i9 + 1;
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12);
$r8 = (java.lang.Integer) $r7;
$i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i4 == i10 goto i12 = i12 + 1;
"
    "Block 17:
[preds: 16 ] [succs: ]
$r9 = new java.lang.Exception;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$r16 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12);
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r20);
throw $r9;
"
    "Block 18:
[preds: 16 ] [succs: 15 ]
i12 = i12 + 1;
i10 = i10 + 1;
goto [?= (branch)];
"
    "Block 19:
[preds: 15 ] [succs: 6 ]
i9 = i9 + 1;
goto [?= (branch)];
"
    "Block 20:
[preds: 6 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= $i0 = lengthof r4];
"
    "Block 21:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r36 := @parameter0: java.lang.String[];
$r0 = newarray (java.util.List)[3];
$r1 = new java.util.ArrayList;
specialinvoke $r1.<java.util.ArrayList: void <init>()>();
$r0[0] = $r1;
$r2 = new java.util.LinkedList;
specialinvoke $r2.<java.util.LinkedList: void <init>()>();
$r0[1] = $r2;
$r3 = new java.util.Vector;
specialinvoke $r3.<java.util.Vector: void <init>()>();
$r0[2] = $r3;
r4 = $r0;
i6 = 0;
"->"Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$i0 = lengthof r4;
if i6 >= $i0 goto return;
";
    "Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$i0 = lengthof r4;
if i6 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
r5 = r4[i6];
i7 = 0;
";
    "Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$i0 = lengthof r4;
if i6 >= $i0 goto return;
"->"Block 21:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
r5 = r4[i6];
i7 = 0;
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= 120 goto i8 = 0;
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= 120 goto i8 = 0;
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$r35 = new java.lang.Integer;
specialinvoke $r35.<java.lang.Integer: void <init>(int)>(i7);
interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r35);
i7 = i7 + 1;
goto [?= (branch)];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= 120 goto i8 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
i8 = 0;
i9 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r35 = new java.lang.Integer;
specialinvoke $r35.<java.lang.Integer: void <init>(int)>(i7);
interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>($r35);
i7 = i7 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
if i7 >= 120 goto i8 = 0;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
i8 = 0;
i9 = 0;
"->"Block 6:
[preds: 5 19 ] [succs: 7 20 ]
if i9 >= 10000 goto i6 = i6 + 1;
";
    "Block 6:
[preds: 5 19 ] [succs: 7 20 ]
if i9 >= 10000 goto i6 = i6 + 1;
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
$r6 = <jsr166tests.jtreg.util.Collections.Rotate: java.util.Random rnd>;
$i1 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(200);
i2 = $i1 - 100;
staticinvoke <java.util.Collections: void rotate(java.util.List,int)>(r5, i2);
$i3 = i8 + i2;
i8 = $i3 % 120;
if i8 >= 0 goto i10 = 0;
";
    "Block 6:
[preds: 5 19 ] [succs: 7 20 ]
if i9 >= 10000 goto i6 = i6 + 1;
"->"Block 20:
[preds: 6 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= $i0 = lengthof r4];
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r6 = <jsr166tests.jtreg.util.Collections.Rotate: java.util.Random rnd>;
$i1 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(200);
i2 = $i1 - 100;
staticinvoke <java.util.Collections: void rotate(java.util.List,int)>(r5, i2);
$i3 = i8 + i2;
i8 = $i3 % 120;
if i8 >= 0 goto i10 = 0;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
i8 = i8 + 120;
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
$r6 = <jsr166tests.jtreg.util.Collections.Rotate: java.util.Random rnd>;
$i1 = virtualinvoke $r6.<java.util.Random: int nextInt(int)>(200);
i2 = $i1 - 100;
staticinvoke <java.util.Collections: void rotate(java.util.List,int)>(r5, i2);
$i3 = i8 + i2;
i8 = $i3 % 120;
if i8 >= 0 goto i10 = 0;
"->"Block 9:
[preds: 7 8 ] [succs: 10 ]
i10 = 0;
i11 = i8;
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
i8 = i8 + 120;
"->"Block 9:
[preds: 7 8 ] [succs: 10 ]
i10 = 0;
i11 = i8;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 ]
i10 = 0;
i11 = i8;
"->"Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i11 >= 120 goto i12 = 0;
";
    "Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i11 >= 120 goto i12 = 0;
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11);
$r22 = (java.lang.Integer) $r21;
$i5 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
if $i5 == i10 goto i11 = i11 + 1;
";
    "Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i11 >= 120 goto i12 = 0;
"->"Block 14:
[preds: 10 ] [succs: 15 ]
i12 = 0;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11);
$r22 = (java.lang.Integer) $r21;
$i5 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
if $i5 == i10 goto i11 = i11 + 1;
"->"Block 12:
[preds: 11 ] [succs: ]
$r23 = new java.lang.Exception;
$r24 = new java.lang.StringBuilder;
specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();
$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \");
$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\");
$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);
$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$r30 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11);
$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);
$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \");
$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);
$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>($r34);
throw $r23;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r21 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i11);
$r22 = (java.lang.Integer) $r21;
$i5 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();
if $i5 == i10 goto i11 = i11 + 1;
"->"Block 13:
[preds: 11 ] [succs: 10 ]
i11 = i11 + 1;
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 13:
[preds: 11 ] [succs: 10 ]
i11 = i11 + 1;
i10 = i10 + 1;
goto [?= (branch)];
"->"Block 10:
[preds: 9 13 ] [succs: 11 14 ]
if i11 >= 120 goto i12 = 0;
";
    "Block 14:
[preds: 10 ] [succs: 15 ]
i12 = 0;
"->"Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i12 >= i8 goto i9 = i9 + 1;
";
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i12 >= i8 goto i9 = i9 + 1;
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12);
$r8 = (java.lang.Integer) $r7;
$i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i4 == i10 goto i12 = i12 + 1;
";
    "Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i12 >= i8 goto i9 = i9 + 1;
"->"Block 19:
[preds: 15 ] [succs: 6 ]
i9 = i9 + 1;
goto [?= (branch)];
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12);
$r8 = (java.lang.Integer) $r7;
$i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i4 == i10 goto i12 = i12 + 1;
"->"Block 17:
[preds: 16 ] [succs: ]
$r9 = new java.lang.Exception;
$r10 = new java.lang.StringBuilder;
specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"j: \");
$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);
$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lst[\");
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]=\");
$r16 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12);
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", should be \");
$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);
$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r9.<java.lang.Exception: void <init>(java.lang.String)>($r20);
throw $r9;
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r7 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i12);
$r8 = (java.lang.Integer) $r7;
$i4 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();
if $i4 == i10 goto i12 = i12 + 1;
"->"Block 18:
[preds: 16 ] [succs: 15 ]
i12 = i12 + 1;
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 18:
[preds: 16 ] [succs: 15 ]
i12 = i12 + 1;
i10 = i10 + 1;
goto [?= (branch)];
"->"Block 15:
[preds: 14 18 ] [succs: 16 19 ]
if i12 >= i8 goto i9 = i9 + 1;
";
    "Block 19:
[preds: 15 ] [succs: 6 ]
i9 = i9 + 1;
goto [?= (branch)];
"->"Block 6:
[preds: 5 19 ] [succs: 7 20 ]
if i9 >= 10000 goto i6 = i6 + 1;
";
    "Block 20:
[preds: 6 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= $i0 = lengthof r4];
"->"Block 1:
[preds: 0 20 ] [succs: 2 21 ]
$i0 = lengthof r4;
if i6 >= $i0 goto return;
";
}
