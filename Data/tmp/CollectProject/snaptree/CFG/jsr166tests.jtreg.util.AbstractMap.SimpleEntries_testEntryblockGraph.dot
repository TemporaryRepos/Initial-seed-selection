digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.Map$Entry;
$r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();
$r2 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r1, $r2);
$r3 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r4 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$r5 = new java.util.AbstractMap$SimpleEntry;
$r7 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r6 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r5.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r7, $r6);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r5);
$r8 = new java.util.AbstractMap$SimpleEntry;
$r10 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r9 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
specialinvoke $r8.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r10, $r9);
$z0 = interfaceinvoke r0.<java.util.Map$Entry: boolean equals(java.lang.Object)>($r8);
if $z0 != 0 goto $z3 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z3 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z3)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z3 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z3);
$z1 = interfaceinvoke r0.<java.util.Map$Entry: boolean equals(java.lang.Object)>(null);
if $z1 != 0 goto $z4 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z4 = 0;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 12 13 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4);
$r11 = new java.util.AbstractMap$SimpleImmutableEntry;
$r13 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r12 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r11.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r11);
$r14 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=\");
$r19 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r14, $r21);
$z2 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z2 == 0 goto $r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"
    "Block 7:
[preds: 6 ] [succs: 14 ]
$r24 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
$r25 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r24);
$r26 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r25, $r26);
$r27 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r28 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r27, $r28);
$r29 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
$r30 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r29, $r30);
$r31 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r31, null);
goto [?= return];
"
    "Block 8:
[preds: 6 ] [succs: 12 13 9 ]
$r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"
    "Block 9:
[preds: 8 ] [succs: 12 13 10 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r22);
"
    "Block 10:
[preds: 9 ] [succs: 12 13 11 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
"
    "Block 11:
[preds: 10 ] [succs: 14 ]
goto [?= return];
"
    "Block 12:
[preds: 6 8 9 10 ] [succs: 14 ]
$r33 := @caughtexception;
r34 = $r33;
goto [?= return];
"
    "Block 13:
[preds: 6 8 9 10 ] [succs: 14 ]
$r32 := @caughtexception;
r35 = $r32;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r35);
"
    "Block 14:
[preds: 7 11 12 13 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.Map$Entry;
$r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();
$r2 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r1, $r2);
$r3 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r4 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$r5 = new java.util.AbstractMap$SimpleEntry;
$r7 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r6 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r5.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r7, $r6);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r5);
$r8 = new java.util.AbstractMap$SimpleEntry;
$r10 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r9 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
specialinvoke $r8.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r10, $r9);
$z0 = interfaceinvoke r0.<java.util.Map$Entry: boolean equals(java.lang.Object)>($r8);
if $z0 != 0 goto $z3 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z3 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z3)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.Map$Entry;
$r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();
$r2 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r1, $r2);
$r3 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r4 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$r5 = new java.util.AbstractMap$SimpleEntry;
$r7 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r6 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r5.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r7, $r6);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r5);
$r8 = new java.util.AbstractMap$SimpleEntry;
$r10 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r9 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
specialinvoke $r8.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>($r10, $r9);
$z0 = interfaceinvoke r0.<java.util.Map$Entry: boolean equals(java.lang.Object)>($r8);
if $z0 != 0 goto $z3 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z3 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z3 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z3)];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z3);
$z1 = interfaceinvoke r0.<java.util.Map$Entry: boolean equals(java.lang.Object)>(null);
if $z1 != 0 goto $z4 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z3 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z3);
$z1 = interfaceinvoke r0.<java.util.Map$Entry: boolean equals(java.lang.Object)>(null);
if $z1 != 0 goto $z4 = 0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z3);
$z1 = interfaceinvoke r0.<java.util.Map$Entry: boolean equals(java.lang.Object)>(null);
if $z1 != 0 goto $z4 = 0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4)];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z3);
$z1 = interfaceinvoke r0.<java.util.Map$Entry: boolean equals(java.lang.Object)>(null);
if $z1 != 0 goto $z4 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z4 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4)];
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 12 13 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4);
$r11 = new java.util.AbstractMap$SimpleImmutableEntry;
$r13 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r12 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r11.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r11);
$r14 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=\");
$r19 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r14, $r21);
$z2 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z2 == 0 goto $r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z4 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 12 13 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4);
$r11 = new java.util.AbstractMap$SimpleImmutableEntry;
$r13 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r12 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r11.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r11);
$r14 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=\");
$r19 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r14, $r21);
$z2 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z2 == 0 goto $r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 12 13 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4);
$r11 = new java.util.AbstractMap$SimpleImmutableEntry;
$r13 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r12 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r11.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r11);
$r14 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=\");
$r19 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r14, $r21);
$z2 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z2 == 0 goto $r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"->"Block 7:
[preds: 6 ] [succs: 14 ]
$r24 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
$r25 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r24);
$r26 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r25, $r26);
$r27 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r28 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r27, $r28);
$r29 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
$r30 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r29, $r30);
$r31 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r31, null);
goto [?= return];
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 12 13 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4);
$r11 = new java.util.AbstractMap$SimpleImmutableEntry;
$r13 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r12 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r11.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r11);
$r14 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=\");
$r19 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r14, $r21);
$z2 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z2 == 0 goto $r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"->"Block 8:
[preds: 6 ] [succs: 12 13 9 ]
$r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 12 13 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4);
$r11 = new java.util.AbstractMap$SimpleImmutableEntry;
$r13 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r12 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r11.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r11);
$r14 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=\");
$r19 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r14, $r21);
$z2 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z2 == 0 goto $r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"->"Block 12:
[preds: 6 8 9 10 ] [succs: 14 ]
$r33 := @caughtexception;
r34 = $r33;
goto [?= return];
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 12 13 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void check(boolean)>($z4);
$r11 = new java.util.AbstractMap$SimpleImmutableEntry;
$r13 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r12 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
specialinvoke $r11.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>($r13, $r12);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r11);
$r14 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
$r15 = new java.lang.StringBuilder;
specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();
$r16 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.String k>;
$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);
$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=\");
$r19 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);
$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r14, $r21);
$z2 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z2 == 0 goto $r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"->"Block 13:
[preds: 6 8 9 10 ] [succs: 14 ]
$r32 := @caughtexception;
r35 = $r32;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r35);
";
    "Block 7:
[preds: 6 ] [succs: 14 ]
$r24 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
$r25 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r24);
$r26 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r25, $r26);
$r27 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r28 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r27, $r28);
$r29 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
$r30 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r29, $r30);
$r31 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r31, null);
goto [?= return];
"->"Block 14:
[preds: 7 11 12 13 ] [succs: ]
return;
";
    "Block 8:
[preds: 6 ] [succs: 12 13 9 ]
$r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"->"Block 12:
[preds: 6 8 9 10 ] [succs: 14 ]
$r33 := @caughtexception;
r34 = $r33;
goto [?= return];
";
    "Block 8:
[preds: 6 ] [succs: 12 13 9 ]
$r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"->"Block 13:
[preds: 6 8 9 10 ] [succs: 14 ]
$r32 := @caughtexception;
r35 = $r32;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r35);
";
    "Block 8:
[preds: 6 ] [succs: 12 13 9 ]
$r22 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v2>;
"->"Block 9:
[preds: 8 ] [succs: 12 13 10 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r22);
";
    "Block 9:
[preds: 8 ] [succs: 12 13 10 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r22);
"->"Block 12:
[preds: 6 8 9 10 ] [succs: 14 ]
$r33 := @caughtexception;
r34 = $r33;
goto [?= return];
";
    "Block 9:
[preds: 8 ] [succs: 12 13 10 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r22);
"->"Block 13:
[preds: 6 8 9 10 ] [succs: 14 ]
$r32 := @caughtexception;
r35 = $r32;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r35);
";
    "Block 9:
[preds: 8 ] [succs: 12 13 10 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r22);
"->"Block 10:
[preds: 9 ] [succs: 12 13 11 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
";
    "Block 10:
[preds: 9 ] [succs: 12 13 11 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
"->"Block 12:
[preds: 6 8 9 10 ] [succs: 14 ]
$r33 := @caughtexception;
r34 = $r33;
goto [?= return];
";
    "Block 10:
[preds: 9 ] [succs: 12 13 11 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
"->"Block 13:
[preds: 6 8 9 10 ] [succs: 14 ]
$r32 := @caughtexception;
r35 = $r32;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r35);
";
    "Block 10:
[preds: 9 ] [succs: 12 13 11 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
"->"Block 11:
[preds: 10 ] [succs: 14 ]
goto [?= return];
";
    "Block 11:
[preds: 10 ] [succs: 14 ]
goto [?= return];
"->"Block 14:
[preds: 7 11 12 13 ] [succs: ]
return;
";
    "Block 12:
[preds: 6 8 9 10 ] [succs: 14 ]
$r33 := @caughtexception;
r34 = $r33;
goto [?= return];
"->"Block 14:
[preds: 7 11 12 13 ] [succs: ]
return;
";
    "Block 13:
[preds: 6 8 9 10 ] [succs: 14 ]
$r32 := @caughtexception;
r35 = $r32;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r35);
"->"Block 14:
[preds: 7 11 12 13 ] [succs: ]
return;
";
}
