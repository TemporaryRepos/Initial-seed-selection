digraph "unitGraph" {
    "r12 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.ArrayList"
    "$r1 = <java.lang.Boolean: java.lang.Boolean FALSE>"
    "$r2 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(100, $r1)"
    "specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2)"
    "r3 = $r0"
    "$r4 = <java.lang.Boolean: java.lang.Boolean TRUE>"
    "interfaceinvoke r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r4)"
    "i1 = 0"
    "if i1 >= 99 goto $r6 = new java.util.ArrayList"
    "$i0 = i1 + 1"
    "staticinvoke <java.util.Collections: void swap(java.util.List,int,int)>(r3, i1, $i0)"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "$r6 = new java.util.ArrayList"
    "$r7 = <java.lang.Boolean: java.lang.Boolean FALSE>"
    "$r8 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(100, $r7)"
    "specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r8)"
    "r13 = $r6"
    "$r9 = <java.lang.Boolean: java.lang.Boolean TRUE>"
    "interfaceinvoke r13.<java.util.List: java.lang.Object set(int,java.lang.Object)>(99, $r9)"
    "$z0 = interfaceinvoke r3.<java.util.List: boolean equals(java.lang.Object)>(r13)"
    "if $z0 != 0 goto return"
    "$r11 = new java.lang.RuntimeException"
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong result\")"
    "throw $r11"
    "return"
    "r12 := @parameter0: java.lang.String[]"->"$r0 = new java.util.ArrayList";
    "$r0 = new java.util.ArrayList"->"$r1 = <java.lang.Boolean: java.lang.Boolean FALSE>";
    "$r1 = <java.lang.Boolean: java.lang.Boolean FALSE>"->"$r2 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(100, $r1)";
    "$r2 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(100, $r1)"->"specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2)";
    "specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2)"->"r3 = $r0";
    "r3 = $r0"->"$r4 = <java.lang.Boolean: java.lang.Boolean TRUE>";
    "$r4 = <java.lang.Boolean: java.lang.Boolean TRUE>"->"interfaceinvoke r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r4)";
    "interfaceinvoke r3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r4)"->"i1 = 0";
    "i1 = 0"->"if i1 >= 99 goto $r6 = new java.util.ArrayList";
    "if i1 >= 99 goto $r6 = new java.util.ArrayList"->"$i0 = i1 + 1";
    "if i1 >= 99 goto $r6 = new java.util.ArrayList"->"$r6 = new java.util.ArrayList";
    "$i0 = i1 + 1"->"staticinvoke <java.util.Collections: void swap(java.util.List,int,int)>(r3, i1, $i0)";
    "staticinvoke <java.util.Collections: void swap(java.util.List,int,int)>(r3, i1, $i0)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= 99 goto $r6 = new java.util.ArrayList";
    "$r6 = new java.util.ArrayList"->"$r7 = <java.lang.Boolean: java.lang.Boolean FALSE>";
    "$r7 = <java.lang.Boolean: java.lang.Boolean FALSE>"->"$r8 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(100, $r7)";
    "$r8 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(100, $r7)"->"specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r8)";
    "specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>($r8)"->"r13 = $r6";
    "r13 = $r6"->"$r9 = <java.lang.Boolean: java.lang.Boolean TRUE>";
    "$r9 = <java.lang.Boolean: java.lang.Boolean TRUE>"->"interfaceinvoke r13.<java.util.List: java.lang.Object set(int,java.lang.Object)>(99, $r9)";
    "interfaceinvoke r13.<java.util.List: java.lang.Object set(int,java.lang.Object)>(99, $r9)"->"$z0 = interfaceinvoke r3.<java.util.List: boolean equals(java.lang.Object)>(r13)";
    "$z0 = interfaceinvoke r3.<java.util.List: boolean equals(java.lang.Object)>(r13)"->"if $z0 != 0 goto return";
    "if $z0 != 0 goto return"->"$r11 = new java.lang.RuntimeException";
    "if $z0 != 0 goto return"->"return";
    "$r11 = new java.lang.RuntimeException"->"specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong result\")";
    "specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Wrong result\")"->"throw $r11";
}
