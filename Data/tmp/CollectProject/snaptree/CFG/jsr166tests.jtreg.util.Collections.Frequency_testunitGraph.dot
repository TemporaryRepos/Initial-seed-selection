digraph "unitGraph" {
    "r0 := @parameter0: java.util.List"
    "i1 = 0"
    "if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0)"
    "i2 = 0"
    "if i2 >= i1 goto i1 = i1 + 1"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"
    "interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9)"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "i1 = i1 + 1"
    "staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0)"
    "i3 = 0"
    "if i3 >= 100 goto return"
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"
    "$i0 = staticinvoke <java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>(r0, $r1)"
    "if $i0 == i3 goto i3 = i3 + 1"
    "$r2 = new java.lang.RuntimeException"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)"
    "throw $r2"
    "i3 = i3 + 1"
    "return"
    "r0 := @parameter0: java.util.List"->"i1 = 0";
    "i1 = 0"->"if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0)";
    "if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0)"->"i2 = 0";
    "if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0)"->"staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0)";
    "i2 = 0"->"if i2 >= i1 goto i1 = i1 + 1";
    "if i2 >= i1 goto i1 = i1 + 1"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)";
    "if i2 >= i1 goto i1 = i1 + 1"->"i1 = i1 + 1";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1)"->"interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9)";
    "interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= i1 goto i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= 100 goto staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0)";
    "staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r0)"->"i3 = 0";
    "i3 = 0"->"if i3 >= 100 goto return";
    "if i3 >= 100 goto return"->"$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)";
    "if i3 >= 100 goto return"->"return";
    "$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3)"->"$i0 = staticinvoke <java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>(r0, $r1)";
    "$i0 = staticinvoke <java.util.Collections: int frequency(java.util.Collection,java.lang.Object)>(r0, $r1)"->"if $i0 == i3 goto i3 = i3 + 1";
    "if $i0 == i3 goto i3 = i3 + 1"->"$r2 = new java.lang.RuntimeException";
    "if $i0 == i3 goto i3 = i3 + 1"->"i3 = i3 + 1";
    "$r2 = new java.lang.RuntimeException"->"$r3 = new java.lang.StringBuilder";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()";
    "$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)";
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r8)"->"throw $r2";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= 100 goto return";
}
