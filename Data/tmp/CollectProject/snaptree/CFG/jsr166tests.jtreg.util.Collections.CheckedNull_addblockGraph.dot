digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: jsr166tests.jtreg.util.Collections.CheckedNull;
r0 := @parameter0: java.util.Collection;
r2 := @parameter1: java.lang.Object;
i0 = interfaceinvoke r0.<java.util.Collection: int size()>();
$z0 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
if $z0 != 0 goto $z8 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z8 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z8 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$i1 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$z3 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$z4 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
if $z4 != 0 goto $z9 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z9 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z9 = 0;
"
    "Block 6:
[preds: 4 5 ] [succs: ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9);
$r5 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r2);
$z5 = interfaceinvoke r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r5);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z5);
$z6 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6);
$i3 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
$i4 = i0 + 1;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r6, $r7);
$z7 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7);
$i5 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r8, $r9);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: jsr166tests.jtreg.util.Collections.CheckedNull;
r0 := @parameter0: java.util.Collection;
r2 := @parameter1: java.lang.Object;
i0 = interfaceinvoke r0.<java.util.Collection: int size()>();
$z0 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
if $z0 != 0 goto $z8 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z8 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: jsr166tests.jtreg.util.Collections.CheckedNull;
r0 := @parameter0: java.util.Collection;
r2 := @parameter1: java.lang.Object;
i0 = interfaceinvoke r0.<java.util.Collection: int size()>();
$z0 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
if $z0 != 0 goto $z8 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z8 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z8 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$i1 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$z3 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$z4 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
if $z4 != 0 goto $z9 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z8 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$i1 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$z3 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$z4 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
if $z4 != 0 goto $z9 = 0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$i1 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$z3 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$z4 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
if $z4 != 0 goto $z9 = 0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$z9 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean add(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$i1 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$z3 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$z4 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
if $z4 != 0 goto $z9 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z9 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z9 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)];
"->"Block 6:
[preds: 4 5 ] [succs: ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9);
$r5 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r2);
$z5 = interfaceinvoke r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r5);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z5);
$z6 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6);
$i3 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
$i4 = i0 + 1;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r6, $r7);
$z7 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7);
$i5 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r8, $r9);
return;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z9 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9);
$r5 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r2);
$z5 = interfaceinvoke r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r5);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z5);
$z6 = interfaceinvoke r0.<java.util.Collection: boolean contains(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6);
$i3 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
$i4 = i0 + 1;
$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r6, $r7);
$z7 = interfaceinvoke r0.<java.util.Collection: boolean remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7);
$i5 = interfaceinvoke r0.<java.util.Collection: int size()>();
$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r8, $r9);
return;
";
}
