digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.Vector"
    "specialinvoke $r0.<java.util.Vector: void <init>()>()"
    "r5 = $r0"
    "virtualinvoke r5.<java.util.Vector: boolean add(java.lang.Object)>(\"foo\")"
    "$r1 = newarray (java.lang.Integer)[3]"
    "virtualinvoke r5.<java.util.Vector: void copyInto(java.lang.Object[])>($r1)"
    "staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void fail(java.lang.String)>(\"Expected ArrayStoreException\")"
    "goto [?= return]"
    "$r3 := @caughtexception"
    "r6 = $r3"
    "staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void pass()>()"
    "$r2 := @caughtexception"
    "r7 = $r2"
    "staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void unexpected(java.lang.Throwable)>(r7)"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r3 := @caughtexception";
    "r4 := @parameter0: java.lang.String[]"->"$r2 := @caughtexception";
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new java.util.Vector";
    "$r0 = new java.util.Vector"->"$r3 := @caughtexception";
    "$r0 = new java.util.Vector"->"$r2 := @caughtexception";
    "$r0 = new java.util.Vector"->"specialinvoke $r0.<java.util.Vector: void <init>()>()";
    "specialinvoke $r0.<java.util.Vector: void <init>()>()"->"$r3 := @caughtexception";
    "specialinvoke $r0.<java.util.Vector: void <init>()>()"->"$r2 := @caughtexception";
    "specialinvoke $r0.<java.util.Vector: void <init>()>()"->"r5 = $r0";
    "r5 = $r0"->"$r3 := @caughtexception";
    "r5 = $r0"->"$r2 := @caughtexception";
    "r5 = $r0"->"virtualinvoke r5.<java.util.Vector: boolean add(java.lang.Object)>(\"foo\")";
    "virtualinvoke r5.<java.util.Vector: boolean add(java.lang.Object)>(\"foo\")"->"$r3 := @caughtexception";
    "virtualinvoke r5.<java.util.Vector: boolean add(java.lang.Object)>(\"foo\")"->"$r2 := @caughtexception";
    "virtualinvoke r5.<java.util.Vector: boolean add(java.lang.Object)>(\"foo\")"->"$r1 = newarray (java.lang.Integer)[3]";
    "$r1 = newarray (java.lang.Integer)[3]"->"$r3 := @caughtexception";
    "$r1 = newarray (java.lang.Integer)[3]"->"$r2 := @caughtexception";
    "$r1 = newarray (java.lang.Integer)[3]"->"virtualinvoke r5.<java.util.Vector: void copyInto(java.lang.Object[])>($r1)";
    "virtualinvoke r5.<java.util.Vector: void copyInto(java.lang.Object[])>($r1)"->"$r3 := @caughtexception";
    "virtualinvoke r5.<java.util.Vector: void copyInto(java.lang.Object[])>($r1)"->"$r2 := @caughtexception";
    "virtualinvoke r5.<java.util.Vector: void copyInto(java.lang.Object[])>($r1)"->"staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void fail(java.lang.String)>(\"Expected ArrayStoreException\")";
    "staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void fail(java.lang.String)>(\"Expected ArrayStoreException\")"->"$r3 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void fail(java.lang.String)>(\"Expected ArrayStoreException\")"->"$r2 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void fail(java.lang.String)>(\"Expected ArrayStoreException\")"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r3 := @caughtexception"->"r6 = $r3";
    "r6 = $r3"->"staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void pass()>()";
    "staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void pass()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"r7 = $r2";
    "r7 = $r2"->"staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void unexpected(java.lang.Throwable)>(r7)";
    "staticinvoke <jsr166tests.jtreg.util.Vector.CopyInto: void unexpected(java.lang.Throwable)>(r7)"->"return";
}
