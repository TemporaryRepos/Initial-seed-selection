digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 22 ]
r0 := @parameter0: java.util.NavigableMap;
r1 := @parameter1: java.util.NavigableMap;
"
    "Block 1:
[preds: 0 ] [succs: 2 22 ]
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"
    "Block 2:
[preds: 1 ] [succs: 3 22 ]
r7 = <jsr166tests.jtreg.util.Collection.BiggernYours: jsr166tests.jtreg.util.Collection.BiggernYours$MapFrobber[] putters>;
"
    "Block 3:
[preds: 2 ] [succs: 4 22 ]
i0 = lengthof r7;
"
    "Block 4:
[preds: 3 ] [succs: 5 22 ]
i2 = 0;
"
    "Block 5:
[preds: 4 20 ] [succs: 6 21 22 ]
if i2 >= i0 goto (branch);
"
    "Block 6:
[preds: 5 ] [succs: 7 22 ]
r2 = r7[i2];
"
    "Block 7:
[preds: 6 ] [succs: 8 22 ]
$r3 = newarray (java.util.Map)[2];
"
    "Block 8:
[preds: 7 ] [succs: 9 22 ]
$r3[0] = r0;
"
    "Block 9:
[preds: 8 ] [succs: 10 22 ]
$r3[1] = r1;
"
    "Block 10:
[preds: 9 ] [succs: 11 22 ]
r4 = $r3;
"
    "Block 11:
[preds: 10 ] [succs: 12 22 ]
i1 = lengthof r4;
"
    "Block 12:
[preds: 11 ] [succs: 13 22 ]
i3 = 0;
"
    "Block 13:
[preds: 12 17 ] [succs: 14 18 22 ]
if i3 >= i1 goto staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"
    "Block 14:
[preds: 13 ] [succs: 15 22 ]
r5 = r4[i3];
"
    "Block 15:
[preds: 14 ] [succs: 16 22 ]
virtualinvoke r2.<jsr166tests.jtreg.util.Collection.BiggernYours$MapFrobber: void frob(java.util.Map)>(r5);
"
    "Block 16:
[preds: 15 ] [succs: 17 22 ]
i3 = i3 + 1;
"
    "Block 17:
[preds: 16 ] [succs: 13 22 ]
goto [?= (branch)];
"
    "Block 18:
[preds: 13 ] [succs: 19 22 ]
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"
    "Block 19:
[preds: 18 ] [succs: 20 22 ]
i2 = i2 + 1;
"
    "Block 20:
[preds: 19 ] [succs: 5 22 ]
goto [?= (branch)];
"
    "Block 21:
[preds: 5 ] [succs: 23 ]
goto [?= return];
"
    "Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
"
    "Block 23:
[preds: 21 22 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 22 ]
r0 := @parameter0: java.util.NavigableMap;
r1 := @parameter1: java.util.NavigableMap;
"->"Block 1:
[preds: 0 ] [succs: 2 22 ]
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
";
    "Block 0:
[preds: ] [succs: 1 22 ]
r0 := @parameter0: java.util.NavigableMap;
r1 := @parameter1: java.util.NavigableMap;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 1:
[preds: 0 ] [succs: 2 22 ]
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"->"Block 2:
[preds: 1 ] [succs: 3 22 ]
r7 = <jsr166tests.jtreg.util.Collection.BiggernYours: jsr166tests.jtreg.util.Collection.BiggernYours$MapFrobber[] putters>;
";
    "Block 1:
[preds: 0 ] [succs: 2 22 ]
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 2:
[preds: 1 ] [succs: 3 22 ]
r7 = <jsr166tests.jtreg.util.Collection.BiggernYours: jsr166tests.jtreg.util.Collection.BiggernYours$MapFrobber[] putters>;
"->"Block 3:
[preds: 2 ] [succs: 4 22 ]
i0 = lengthof r7;
";
    "Block 2:
[preds: 1 ] [succs: 3 22 ]
r7 = <jsr166tests.jtreg.util.Collection.BiggernYours: jsr166tests.jtreg.util.Collection.BiggernYours$MapFrobber[] putters>;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 3:
[preds: 2 ] [succs: 4 22 ]
i0 = lengthof r7;
"->"Block 4:
[preds: 3 ] [succs: 5 22 ]
i2 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 4 22 ]
i0 = lengthof r7;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 4:
[preds: 3 ] [succs: 5 22 ]
i2 = 0;
"->"Block 5:
[preds: 4 20 ] [succs: 6 21 22 ]
if i2 >= i0 goto (branch);
";
    "Block 4:
[preds: 3 ] [succs: 5 22 ]
i2 = 0;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 5:
[preds: 4 20 ] [succs: 6 21 22 ]
if i2 >= i0 goto (branch);
"->"Block 6:
[preds: 5 ] [succs: 7 22 ]
r2 = r7[i2];
";
    "Block 5:
[preds: 4 20 ] [succs: 6 21 22 ]
if i2 >= i0 goto (branch);
"->"Block 21:
[preds: 5 ] [succs: 23 ]
goto [?= return];
";
    "Block 5:
[preds: 4 20 ] [succs: 6 21 22 ]
if i2 >= i0 goto (branch);
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 6:
[preds: 5 ] [succs: 7 22 ]
r2 = r7[i2];
"->"Block 7:
[preds: 6 ] [succs: 8 22 ]
$r3 = newarray (java.util.Map)[2];
";
    "Block 6:
[preds: 5 ] [succs: 7 22 ]
r2 = r7[i2];
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 7:
[preds: 6 ] [succs: 8 22 ]
$r3 = newarray (java.util.Map)[2];
"->"Block 8:
[preds: 7 ] [succs: 9 22 ]
$r3[0] = r0;
";
    "Block 7:
[preds: 6 ] [succs: 8 22 ]
$r3 = newarray (java.util.Map)[2];
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 8:
[preds: 7 ] [succs: 9 22 ]
$r3[0] = r0;
"->"Block 9:
[preds: 8 ] [succs: 10 22 ]
$r3[1] = r1;
";
    "Block 8:
[preds: 7 ] [succs: 9 22 ]
$r3[0] = r0;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 9:
[preds: 8 ] [succs: 10 22 ]
$r3[1] = r1;
"->"Block 10:
[preds: 9 ] [succs: 11 22 ]
r4 = $r3;
";
    "Block 9:
[preds: 8 ] [succs: 10 22 ]
$r3[1] = r1;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 10:
[preds: 9 ] [succs: 11 22 ]
r4 = $r3;
"->"Block 11:
[preds: 10 ] [succs: 12 22 ]
i1 = lengthof r4;
";
    "Block 10:
[preds: 9 ] [succs: 11 22 ]
r4 = $r3;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 11:
[preds: 10 ] [succs: 12 22 ]
i1 = lengthof r4;
"->"Block 12:
[preds: 11 ] [succs: 13 22 ]
i3 = 0;
";
    "Block 11:
[preds: 10 ] [succs: 12 22 ]
i1 = lengthof r4;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 12:
[preds: 11 ] [succs: 13 22 ]
i3 = 0;
"->"Block 13:
[preds: 12 17 ] [succs: 14 18 22 ]
if i3 >= i1 goto staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
";
    "Block 12:
[preds: 11 ] [succs: 13 22 ]
i3 = 0;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 13:
[preds: 12 17 ] [succs: 14 18 22 ]
if i3 >= i1 goto staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"->"Block 14:
[preds: 13 ] [succs: 15 22 ]
r5 = r4[i3];
";
    "Block 13:
[preds: 12 17 ] [succs: 14 18 22 ]
if i3 >= i1 goto staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"->"Block 18:
[preds: 13 ] [succs: 19 22 ]
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
";
    "Block 13:
[preds: 12 17 ] [succs: 14 18 22 ]
if i3 >= i1 goto staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 14:
[preds: 13 ] [succs: 15 22 ]
r5 = r4[i3];
"->"Block 15:
[preds: 14 ] [succs: 16 22 ]
virtualinvoke r2.<jsr166tests.jtreg.util.Collection.BiggernYours$MapFrobber: void frob(java.util.Map)>(r5);
";
    "Block 14:
[preds: 13 ] [succs: 15 22 ]
r5 = r4[i3];
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 15:
[preds: 14 ] [succs: 16 22 ]
virtualinvoke r2.<jsr166tests.jtreg.util.Collection.BiggernYours$MapFrobber: void frob(java.util.Map)>(r5);
"->"Block 16:
[preds: 15 ] [succs: 17 22 ]
i3 = i3 + 1;
";
    "Block 15:
[preds: 14 ] [succs: 16 22 ]
virtualinvoke r2.<jsr166tests.jtreg.util.Collection.BiggernYours$MapFrobber: void frob(java.util.Map)>(r5);
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 16:
[preds: 15 ] [succs: 17 22 ]
i3 = i3 + 1;
"->"Block 17:
[preds: 16 ] [succs: 13 22 ]
goto [?= (branch)];
";
    "Block 16:
[preds: 15 ] [succs: 17 22 ]
i3 = i3 + 1;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 17:
[preds: 16 ] [succs: 13 22 ]
goto [?= (branch)];
"->"Block 13:
[preds: 12 17 ] [succs: 14 18 22 ]
if i3 >= i1 goto staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
";
    "Block 17:
[preds: 16 ] [succs: 13 22 ]
goto [?= (branch)];
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 18:
[preds: 13 ] [succs: 19 22 ]
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"->"Block 19:
[preds: 18 ] [succs: 20 22 ]
i2 = i2 + 1;
";
    "Block 18:
[preds: 13 ] [succs: 19 22 ]
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void compareNavigableMaps(java.util.NavigableMap,java.util.NavigableMap)>(r0, r1);
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 19:
[preds: 18 ] [succs: 20 22 ]
i2 = i2 + 1;
"->"Block 20:
[preds: 19 ] [succs: 5 22 ]
goto [?= (branch)];
";
    "Block 19:
[preds: 18 ] [succs: 20 22 ]
i2 = i2 + 1;
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 20:
[preds: 19 ] [succs: 5 22 ]
goto [?= (branch)];
"->"Block 5:
[preds: 4 20 ] [succs: 6 21 22 ]
if i2 >= i0 goto (branch);
";
    "Block 20:
[preds: 19 ] [succs: 5 22 ]
goto [?= (branch)];
"->"Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
";
    "Block 21:
[preds: 5 ] [succs: 23 ]
goto [?= return];
"->"Block 23:
[preds: 21 22 ] [succs: ]
return;
";
    "Block 22:
[preds: 0 1 2 3 4 20 5 6 7 8 9 10 11 12 17 13 14 15 16 18 19 ] [succs: 23 ]
$r6 := @caughtexception;
r8 = $r6;
staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void unexpected(java.lang.Throwable,java.lang.Object)>(r8, r0);
"->"Block 23:
[preds: 21 22 ] [succs: ]
return;
";
}
