digraph "unitGraph" {
    "r27 := @parameter0: java.lang.String[]"
    "i0 = 100000"
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"
    "r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)"
    "$r2 = new java.util.concurrent.CopyOnWriteArraySet"
    "specialinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()"
    "r3 = $r2"
    "$r4 = new java.util.concurrent.CopyOnWriteArraySet"
    "specialinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()"
    "r5 = $r4"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r6)"
    "$r7 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$1"
    "specialinvoke $r7.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$1: void <init>(java.util.Set,java.lang.Integer)>(r5, r0)"
    "r8 = $r7"
    "virtualinvoke r8.<java.lang.Thread: void start()>()"
    "i2 = 0"
    "if i2 >= 100000 goto virtualinvoke r8.<java.lang.Thread: void join()>()"
    "$z6 = interfaceinvoke r3.<java.util.Set: boolean equals(java.lang.Object)>(r5)"
    "if $z6 != 0 goto $z8 = 0"
    "$z8 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z8)]"
    "$z8 = 0"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z8)"
    "$z7 = interfaceinvoke r5.<java.util.Set: boolean equals(java.lang.Object)>(r3)"
    "if $z7 != 0 goto $z9 = 0"
    "$z9 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z9)]"
    "$z9 = 0"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z9)"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "virtualinvoke r8.<java.lang.Thread: void join()>()"
    "$r9 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"
    "r28 = $r9"
    "$r10 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"
    "r11 = $r10"
    "$r12 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"
    "r13 = $r12"
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"
    "interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r14)"
    "$r15 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$2"
    "specialinvoke $r15.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$2: void <init>(java.util.List,java.lang.Integer)>(r11, r0)"
    "r16 = $r15"
    "virtualinvoke r16.<java.lang.Thread: void start()>()"
    "$r17 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$3"
    "specialinvoke $r17.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$3: void <init>(java.util.List,java.lang.Integer,java.lang.Integer)>(r13, r1, r0)"
    "r18 = $r17"
    "virtualinvoke r18.<java.lang.Thread: void start()>()"
    "i3 = 0"
    "if i3 >= 100000 goto virtualinvoke r16.<java.lang.Thread: void join()>()"
    "$z2 = interfaceinvoke r28.<java.util.List: boolean equals(java.lang.Object)>(r11)"
    "if $z2 != 0 goto $z10 = 0"
    "$z10 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z10)]"
    "$z10 = 0"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z10)"
    "$z3 = interfaceinvoke r11.<java.util.List: boolean equals(java.lang.Object)>(r28)"
    "if $z3 != 0 goto $z11 = 0"
    "$z11 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z11)]"
    "$z11 = 0"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z11)"
    "$r19 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r19.<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.util.Collection)>(r11)"
    "goto [?= $r20 = new java.util.concurrent.CopyOnWriteArrayList]"
    "$r26 := @caughtexception"
    "r29 = $r26"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r29)"
    "$r20 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"
    "virtualinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>(r13)"
    "goto [?= $r21 = new java.util.concurrent.CopyOnWriteArrayList]"
    "$r25 := @caughtexception"
    "r30 = $r25"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r30)"
    "$r21 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"
    "virtualinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(java.util.Collection)>(r13)"
    "goto [?= $r22 = new java.util.concurrent.CopyOnWriteArrayList]"
    "$r24 := @caughtexception"
    "r31 = $r24"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r31)"
    "$r22 = new java.util.concurrent.CopyOnWriteArrayList"
    "specialinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"
    "virtualinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>(0, r13)"
    "goto [?= i3 = i3 + 1]"
    "$r23 := @caughtexception"
    "r32 = $r23"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r32)"
    "i3 = i3 + 1"
    "virtualinvoke r16.<java.lang.Thread: void join()>()"
    "virtualinvoke r18.<java.lang.Thread: void join()>()"
    "return"
    "r27 := @parameter0: java.lang.String[]"->"i0 = 100000";
    "i0 = 100000"->"r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)";
    "r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2)"->"r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)";
    "r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3)"->"$r2 = new java.util.concurrent.CopyOnWriteArraySet";
    "$r2 = new java.util.concurrent.CopyOnWriteArraySet"->"specialinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()";
    "specialinvoke $r2.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new java.util.concurrent.CopyOnWriteArraySet";
    "$r4 = new java.util.concurrent.CopyOnWriteArraySet"->"specialinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()";
    "specialinvoke $r4.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>()"->"r5 = $r4";
    "r5 = $r4"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r6)";
    "interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r6)"->"$r7 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$1";
    "$r7 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$1"->"specialinvoke $r7.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$1: void <init>(java.util.Set,java.lang.Integer)>(r5, r0)";
    "specialinvoke $r7.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$1: void <init>(java.util.Set,java.lang.Integer)>(r5, r0)"->"r8 = $r7";
    "r8 = $r7"->"virtualinvoke r8.<java.lang.Thread: void start()>()";
    "virtualinvoke r8.<java.lang.Thread: void start()>()"->"i2 = 0";
    "i2 = 0"->"if i2 >= 100000 goto virtualinvoke r8.<java.lang.Thread: void join()>()";
    "if i2 >= 100000 goto virtualinvoke r8.<java.lang.Thread: void join()>()"->"$z6 = interfaceinvoke r3.<java.util.Set: boolean equals(java.lang.Object)>(r5)";
    "if i2 >= 100000 goto virtualinvoke r8.<java.lang.Thread: void join()>()"->"virtualinvoke r8.<java.lang.Thread: void join()>()";
    "$z6 = interfaceinvoke r3.<java.util.Set: boolean equals(java.lang.Object)>(r5)"->"if $z6 != 0 goto $z8 = 0";
    "if $z6 != 0 goto $z8 = 0"->"$z8 = 1";
    "if $z6 != 0 goto $z8 = 0"->"$z8 = 0";
    "$z8 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z8)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z8)]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z8)";
    "$z8 = 0"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z8)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z8)"->"$z7 = interfaceinvoke r5.<java.util.Set: boolean equals(java.lang.Object)>(r3)";
    "$z7 = interfaceinvoke r5.<java.util.Set: boolean equals(java.lang.Object)>(r3)"->"if $z7 != 0 goto $z9 = 0";
    "if $z7 != 0 goto $z9 = 0"->"$z9 = 1";
    "if $z7 != 0 goto $z9 = 0"->"$z9 = 0";
    "$z9 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z9)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z9)]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z9)";
    "$z9 = 0"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z9)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z9)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 100000 goto virtualinvoke r8.<java.lang.Thread: void join()>()";
    "virtualinvoke r8.<java.lang.Thread: void join()>()"->"$r9 = new java.util.concurrent.CopyOnWriteArrayList";
    "$r9 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()";
    "specialinvoke $r9.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"r28 = $r9";
    "r28 = $r9"->"$r10 = new java.util.concurrent.CopyOnWriteArrayList";
    "$r10 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()";
    "specialinvoke $r10.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"r11 = $r10";
    "r11 = $r10"->"$r12 = new java.util.concurrent.CopyOnWriteArrayList";
    "$r12 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()";
    "specialinvoke $r12.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"r13 = $r12";
    "r13 = $r12"->"$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)";
    "$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1)"->"interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r14)";
    "interfaceinvoke r28.<java.util.List: boolean add(java.lang.Object)>($r14)"->"$r15 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$2";
    "$r15 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$2"->"specialinvoke $r15.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$2: void <init>(java.util.List,java.lang.Integer)>(r11, r0)";
    "specialinvoke $r15.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$2: void <init>(java.util.List,java.lang.Integer)>(r11, r0)"->"r16 = $r15";
    "r16 = $r15"->"virtualinvoke r16.<java.lang.Thread: void start()>()";
    "virtualinvoke r16.<java.lang.Thread: void start()>()"->"$r17 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$3";
    "$r17 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$3"->"specialinvoke $r17.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$3: void <init>(java.util.List,java.lang.Integer,java.lang.Integer)>(r13, r1, r0)";
    "specialinvoke $r17.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows$3: void <init>(java.util.List,java.lang.Integer,java.lang.Integer)>(r13, r1, r0)"->"r18 = $r17";
    "r18 = $r17"->"virtualinvoke r18.<java.lang.Thread: void start()>()";
    "virtualinvoke r18.<java.lang.Thread: void start()>()"->"i3 = 0";
    "i3 = 0"->"if i3 >= 100000 goto virtualinvoke r16.<java.lang.Thread: void join()>()";
    "if i3 >= 100000 goto virtualinvoke r16.<java.lang.Thread: void join()>()"->"$z2 = interfaceinvoke r28.<java.util.List: boolean equals(java.lang.Object)>(r11)";
    "if i3 >= 100000 goto virtualinvoke r16.<java.lang.Thread: void join()>()"->"virtualinvoke r16.<java.lang.Thread: void join()>()";
    "$z2 = interfaceinvoke r28.<java.util.List: boolean equals(java.lang.Object)>(r11)"->"if $z2 != 0 goto $z10 = 0";
    "if $z2 != 0 goto $z10 = 0"->"$z10 = 1";
    "if $z2 != 0 goto $z10 = 0"->"$z10 = 0";
    "$z10 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z10)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z10)]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z10)";
    "$z10 = 0"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z10)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z10)"->"$z3 = interfaceinvoke r11.<java.util.List: boolean equals(java.lang.Object)>(r28)";
    "$z3 = interfaceinvoke r11.<java.util.List: boolean equals(java.lang.Object)>(r28)"->"if $z3 != 0 goto $z11 = 0";
    "if $z3 != 0 goto $z11 = 0"->"$z11 = 1";
    "if $z3 != 0 goto $z11 = 0"->"$z11 = 0";
    "$z11 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z11)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z11)]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z11)";
    "$z11 = 0"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z11)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z11)"->"$r19 = new java.util.concurrent.CopyOnWriteArrayList";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void check(boolean)>($z11)"->"$r26 := @caughtexception";
    "$r19 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r19.<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.util.Collection)>(r11)";
    "$r19 = new java.util.concurrent.CopyOnWriteArrayList"->"$r26 := @caughtexception";
    "specialinvoke $r19.<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.util.Collection)>(r11)"->"goto [?= $r20 = new java.util.concurrent.CopyOnWriteArrayList]";
    "specialinvoke $r19.<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.util.Collection)>(r11)"->"$r26 := @caughtexception";
    "goto [?= $r20 = new java.util.concurrent.CopyOnWriteArrayList]"->"$r20 = new java.util.concurrent.CopyOnWriteArrayList";
    "goto [?= $r20 = new java.util.concurrent.CopyOnWriteArrayList]"->"$r25 := @caughtexception";
    "$r26 := @caughtexception"->"r29 = $r26";
    "r29 = $r26"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r29)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r29)"->"$r20 = new java.util.concurrent.CopyOnWriteArrayList";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r29)"->"$r25 := @caughtexception";
    "$r20 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()";
    "$r20 = new java.util.concurrent.CopyOnWriteArrayList"->"$r25 := @caughtexception";
    "specialinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"virtualinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>(r13)";
    "specialinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"$r25 := @caughtexception";
    "virtualinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>(r13)"->"goto [?= $r21 = new java.util.concurrent.CopyOnWriteArrayList]";
    "virtualinvoke $r20.<java.util.concurrent.CopyOnWriteArrayList: int addAllAbsent(java.util.Collection)>(r13)"->"$r25 := @caughtexception";
    "goto [?= $r21 = new java.util.concurrent.CopyOnWriteArrayList]"->"$r21 = new java.util.concurrent.CopyOnWriteArrayList";
    "goto [?= $r21 = new java.util.concurrent.CopyOnWriteArrayList]"->"$r24 := @caughtexception";
    "$r25 := @caughtexception"->"r30 = $r25";
    "r30 = $r25"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r30)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r30)"->"$r21 = new java.util.concurrent.CopyOnWriteArrayList";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r30)"->"$r24 := @caughtexception";
    "$r21 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()";
    "$r21 = new java.util.concurrent.CopyOnWriteArrayList"->"$r24 := @caughtexception";
    "specialinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"virtualinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(java.util.Collection)>(r13)";
    "specialinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"$r24 := @caughtexception";
    "virtualinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(java.util.Collection)>(r13)"->"goto [?= $r22 = new java.util.concurrent.CopyOnWriteArrayList]";
    "virtualinvoke $r21.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(java.util.Collection)>(r13)"->"$r24 := @caughtexception";
    "goto [?= $r22 = new java.util.concurrent.CopyOnWriteArrayList]"->"$r22 = new java.util.concurrent.CopyOnWriteArrayList";
    "goto [?= $r22 = new java.util.concurrent.CopyOnWriteArrayList]"->"$r23 := @caughtexception";
    "$r24 := @caughtexception"->"r31 = $r24";
    "r31 = $r24"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r31)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r31)"->"$r22 = new java.util.concurrent.CopyOnWriteArrayList";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r31)"->"$r23 := @caughtexception";
    "$r22 = new java.util.concurrent.CopyOnWriteArrayList"->"specialinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()";
    "$r22 = new java.util.concurrent.CopyOnWriteArrayList"->"$r23 := @caughtexception";
    "specialinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"virtualinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>(0, r13)";
    "specialinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>()"->"$r23 := @caughtexception";
    "virtualinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>(0, r13)"->"goto [?= i3 = i3 + 1]";
    "virtualinvoke $r22.<java.util.concurrent.CopyOnWriteArrayList: boolean addAll(int,java.util.Collection)>(0, r13)"->"$r23 := @caughtexception";
    "goto [?= i3 = i3 + 1]"->"i3 = i3 + 1";
    "$r23 := @caughtexception"->"r32 = $r23";
    "r32 = $r23"->"staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r32)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArraySet.RacingCows: void unexpected(java.lang.Throwable)>(r32)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= 100000 goto virtualinvoke r16.<java.lang.Thread: void join()>()";
    "virtualinvoke r16.<java.lang.Thread: void join()>()"->"virtualinvoke r18.<java.lang.Thread: void join()>()";
    "virtualinvoke r18.<java.lang.Thread: void join()>()"->"return";
}
