digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r142 := @parameter0: java.lang.String[];
s0 = 500;
s1 = 500;
i10 = 0;
"
    "Block 1:
[preds: 0 24 ] [succs: 2 25 ]
if i10 >= s0 goto $r0 = new java.util.LinkedHashMap;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r124 = new java.util.LinkedHashMap;
specialinvoke $r124.<java.util.LinkedHashMap: void <init>()>();
r143 = $r124;
r144 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
i11 = 0;
"
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>();
"
    "Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r139 = new java.lang.Integer;
$r140 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Random rnd>;
$i9 = virtualinvoke $r140.<java.util.Random: int nextInt()>();
specialinvoke $r139.<java.lang.Integer: void <init>(int)>($i9);
r145 = $r139;
$z37 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r145);
if $z37 != 0 goto $r139 = new java.lang.Integer;
"
    "Block 5:
[preds: 4 ] [succs: 3 ]
interfaceinvoke r143.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r145, r144);
r144 = r145;
i11 = i11 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 3 ] [succs: 7 8 ]
$i5 = interfaceinvoke r143.<java.util.Map: int size()>();
if $i5 == s1 goto $r125 = new java.util.HashMap;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r138 = new java.lang.Exception;
specialinvoke $r138.<java.lang.Exception: void <init>(java.lang.String)>(\"Size not as expected.\");
throw $r138;
"
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$r125 = new java.util.HashMap;
specialinvoke $r125.<java.util.HashMap: void <init>(java.util.Map)>(r143);
$i6 = virtualinvoke $r125.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r143.<java.util.Map: int hashCode()>();
if $i6 == $i7 goto $r126 = new java.util.LinkedHashMap;
"
    "Block 9:
[preds: 8 ] [succs: ]
$r137 = new java.lang.Exception;
specialinvoke $r137.<java.lang.Exception: void <init>(java.lang.String)>(\"Incorrect hashCode computation.\");
throw $r137;
"
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$r126 = new java.util.LinkedHashMap;
specialinvoke $r126.<java.util.LinkedHashMap: void <init>()>();
r146 = $r126;
interfaceinvoke r146.<java.util.Map: void putAll(java.util.Map)>(r143);
$r127 = interfaceinvoke r146.<java.util.Map: java.util.Collection values()>();
$r128 = interfaceinvoke r143.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r127.<java.util.Collection: boolean removeAll(java.util.Collection)>($r128);
$i8 = interfaceinvoke r146.<java.util.Map: int size()>();
if $i8 != 1 goto $r129 = new java.lang.Exception;
"
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r130 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$z34 = interfaceinvoke r146.<java.util.Map: boolean containsValue(java.lang.Object)>($r130);
if $z34 != 0 goto i12 = 0;
"
    "Block 12:
[preds: 10 11 ] [succs: ]
$r129 = new java.lang.Exception;
specialinvoke $r129.<java.lang.Exception: void <init>(java.lang.String)>(\"Collection views test failed.\");
throw $r129;
"
    "Block 13:
[preds: 11 ] [succs: 14 ]
i12 = 0;
"
    "Block 14:
[preds: 13 19 ] [succs: 15 20 ]
$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
"
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$z36 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r144);
if $z36 != 0 goto r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144);
"
    "Block 16:
[preds: 15 ] [succs: ]
$r136 = new java.lang.Exception;
specialinvoke $r136.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list doesn\'t contain a link.\");
throw $r136;
"
    "Block 17:
[preds: 15 ] [succs: 18 19 ]
r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144);
if r147 != null goto interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144);
"
    "Block 18:
[preds: 17 ] [succs: ]
$r135 = new java.lang.Exception;
specialinvoke $r135.<java.lang.Exception: void <init>(java.lang.String)>(\"Could not retrieve a link.\");
throw $r135;
"
    "Block 19:
[preds: 17 ] [succs: 14 ]
interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144);
r144 = r147;
i12 = i12 + 1;
goto [?= $r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>];
"
    "Block 20:
[preds: 14 ] [succs: 21 22 ]
$z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
if $z35 != 0 goto (branch);
"
    "Block 21:
[preds: 20 ] [succs: ]
$r133 = new java.lang.Exception;
specialinvoke $r133.<java.lang.Exception: void <init>(java.lang.String)>(\"Map nonempty after removing all links.\");
throw $r133;
"
    "Block 22:
[preds: 20 ] [succs: 23 24 ]
if i12 == s1 goto i10 = i10 + 1;
"
    "Block 23:
[preds: 22 ] [succs: ]
$r132 = new java.lang.Exception;
specialinvoke $r132.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list size not as expected.\");
throw $r132;
"
    "Block 24:
[preds: 22 ] [succs: 1 ]
i10 = i10 + 1;
goto [?= (branch)];
"
    "Block 25:
[preds: 1 ] [succs: 26 ]
$r0 = new java.util.LinkedHashMap;
specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();
r148 = $r0;
i13 = 0;
"
    "Block 26:
[preds: 25 29 ] [succs: 27 30 ]
if i13 >= s1 goto i14 = 0;
"
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
$r120 = new java.lang.Integer;
specialinvoke $r120.<java.lang.Integer: void <init>(int)>(i13);
$r121 = new java.lang.Integer;
$i4 = 2 * i13;
specialinvoke $r121.<java.lang.Integer: void <init>(int)>($i4);
$r122 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121);
if $r122 == null goto i13 = i13 + 1;
"
    "Block 28:
[preds: 27 ] [succs: ]
$r123 = new java.lang.Exception;
specialinvoke $r123.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns non-null value erroenously.\");
throw $r123;
"
    "Block 29:
[preds: 27 ] [succs: 26 ]
i13 = i13 + 1;
goto [?= (branch)];
"
    "Block 30:
[preds: 26 ] [succs: 31 ]
i14 = 0;
"
    "Block 31:
[preds: 30 37 ] [succs: 32 38 ]
$i2 = 2 * s1;
if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
"
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$r114 = new java.lang.Integer;
specialinvoke $r114.<java.lang.Integer: void <init>(int)>(i14);
$z32 = interfaceinvoke r148.<java.util.Map: boolean containsValue(java.lang.Object)>($r114);
$i3 = i14 % 2;
if $i3 != 0 goto $z38 = 0;
"
    "Block 33:
[preds: 32 ] [succs: 35 ]
$z38 = 1;
goto [?= (branch)];
"
    "Block 34:
[preds: 32 ] [succs: 35 ]
$z38 = 0;
"
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
if $z32 == $z38 goto i14 = i14 + 1;
"
    "Block 36:
[preds: 35 ] [succs: ]
$r115 = new java.lang.Exception;
$r116 = new java.lang.StringBuilder;
specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();
$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \");
$r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);
$r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r115.<java.lang.Exception: void <init>(java.lang.String)>($r119);
throw $r115;
"
    "Block 37:
[preds: 35 ] [succs: 31 ]
i14 = i14 + 1;
goto [?= $i2 = 2 * s1];
"
    "Block 38:
[preds: 31 ] [succs: 39 40 ]
$r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$r1 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$r3 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);
if $r3 != null goto $r4 = new java.util.LinkedHashMap;
"
    "Block 39:
[preds: 38 ] [succs: ]
$r113 = new java.lang.Exception;
specialinvoke $r113.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns a null value erroenously.\");
throw $r113;
"
    "Block 40:
[preds: 38 ] [succs: 41 42 ]
$r4 = new java.util.LinkedHashMap;
specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();
r149 = $r4;
interfaceinvoke r149.<java.util.Map: void putAll(java.util.Map)>(r148);
$z0 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r149);
if $z0 != 0 goto $z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148);
"
    "Block 41:
[preds: 40 ] [succs: ]
$r112 = new java.lang.Exception;
specialinvoke $r112.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (1)\");
throw $r112;
"
    "Block 42:
[preds: 40 ] [succs: 43 44 ]
$z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148);
if $z1 != 0 goto r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"
    "Block 43:
[preds: 42 ] [succs: ]
$r111 = new java.lang.Exception;
specialinvoke $r111.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (2)\");
throw $r111;
"
    "Block 44:
[preds: 42 ] [succs: 45 46 ]
r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r151 = interfaceinvoke r149.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r150.<java.util.Set: boolean equals(java.lang.Object)>(r151);
if $z2 != 0 goto $z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150);
"
    "Block 45:
[preds: 44 ] [succs: ]
$r110 = new java.lang.Exception;
specialinvoke $r110.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (3)\");
throw $r110;
"
    "Block 46:
[preds: 44 ] [succs: 47 48 ]
$z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150);
if $z3 != 0 goto $z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151);
"
    "Block 47:
[preds: 46 ] [succs: ]
$r109 = new java.lang.Exception;
specialinvoke $r109.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (4)\");
throw $r109;
"
    "Block 48:
[preds: 46 ] [succs: 49 50 ]
$z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151);
if $z4 != 0 goto $z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150);
"
    "Block 49:
[preds: 48 ] [succs: ]
$r108 = new java.lang.Exception;
specialinvoke $r108.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain clone!\");
throw $r108;
"
    "Block 50:
[preds: 48 ] [succs: 51 52 ]
$z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150);
if $z5 != 0 goto r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148);
"
    "Block 51:
[preds: 50 ] [succs: ]
$r107 = new java.lang.Exception;
specialinvoke $r107.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone doesn\'t contain original!\");
throw $r107;
"
    "Block 52:
[preds: 50 ] [succs: 53 54 ]
r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148);
$z6 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r152);
if $z6 != 0 goto $z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148);
"
    "Block 53:
[preds: 52 ] [succs: ]
$r106 = new java.lang.Exception;
specialinvoke $r106.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (1)\");
throw $r106;
"
    "Block 54:
[preds: 52 ] [succs: 55 56 ]
$z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148);
if $z7 != 0 goto r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"
    "Block 55:
[preds: 54 ] [succs: ]
$r105 = new java.lang.Exception;
specialinvoke $r105.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (2)\");
throw $r105;
"
    "Block 56:
[preds: 54 ] [succs: 57 58 ]
r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r154 = interfaceinvoke r152.<java.util.Map: java.util.Set entrySet()>();
$z8 = interfaceinvoke r153.<java.util.Set: boolean equals(java.lang.Object)>(r154);
if $z8 != 0 goto $z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153);
"
    "Block 57:
[preds: 56 ] [succs: ]
$r104 = new java.lang.Exception;
specialinvoke $r104.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (3)\");
throw $r104;
"
    "Block 58:
[preds: 56 ] [succs: 59 60 ]
$z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153);
if $z9 != 0 goto $z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154);
"
    "Block 59:
[preds: 58 ] [succs: ]
$r103 = new java.lang.Exception;
specialinvoke $r103.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (4)\");
throw $r103;
"
    "Block 60:
[preds: 58 ] [succs: 61 62 ]
$z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154);
if $z10 != 0 goto $z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153);
"
    "Block 61:
[preds: 60 ] [succs: ]
$r102 = new java.lang.Exception;
specialinvoke $r102.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain Serialize clone!\");
throw $r102;
"
    "Block 62:
[preds: 60 ] [succs: 63 64 ]
$z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153);
if $z11 != 0 goto interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153);
"
    "Block 63:
[preds: 62 ] [succs: ]
$r101 = new java.lang.Exception;
specialinvoke $r101.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone doesn\'t contain original!\");
throw $r101;
"
    "Block 64:
[preds: 62 ] [succs: 65 66 ]
interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153);
$z13 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>();
if $z13 != 0 goto interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148);
"
    "Block 65:
[preds: 64 ] [succs: ]
$r100 = new java.lang.Exception;
specialinvoke $r100.<java.lang.Exception: void <init>(java.lang.String)>(\"entrySet().removeAll failed.\");
throw $r100;
"
    "Block 66:
[preds: 64 ] [succs: 67 68 ]
interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148);
interfaceinvoke r152.<java.util.Map: void clear()>();
$z14 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>();
if $z14 != 0 goto $r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"
    "Block 67:
[preds: 66 ] [succs: ]
$r99 = new java.lang.Exception;
specialinvoke $r99.<java.lang.Exception: void <init>(java.lang.String)>(\"clear failed.\");
throw $r99;
"
    "Block 68:
[preds: 66 ] [succs: 69 ]
$r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r155 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 69:
[preds: 68 70 ] [succs: 70 71 ]
$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>();
if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
"
    "Block 70:
[preds: 69 ] [succs: 69 ]
interfaceinvoke r155.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r155.<java.util.Iterator: void remove()>();
goto [?= $z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 71:
[preds: 69 ] [succs: 72 73 ]
$z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
if $z16 != 0 goto $r6 = new java.util.LinkedHashMap;
"
    "Block 72:
[preds: 71 ] [succs: ]
$r97 = new java.lang.Exception;
specialinvoke $r97.<java.lang.Exception: void <init>(java.lang.String)>(\"Iterator.remove() failed\");
throw $r97;
"
    "Block 73:
[preds: 71 ] [succs: 74 ]
$r6 = new java.util.LinkedHashMap;
specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();
r156 = $r6;
$r7 = new java.util.ArrayList;
specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(s1);
r157 = $r7;
i15 = 0;
"
    "Block 74:
[preds: 73 75 ] [succs: 75 76 ]
if i15 >= s1 goto $r8 = new java.util.ArrayList;
"
    "Block 75:
[preds: 74 ] [succs: 74 ]
$r95 = new java.lang.Integer;
specialinvoke $r95.<java.lang.Integer: void <init>(int)>(i15);
r158 = $r95;
interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r158, r158);
interfaceinvoke r157.<java.util.List: boolean add(java.lang.Object)>(r158);
i15 = i15 + 1;
goto [?= (branch)];
"
    "Block 76:
[preds: 74 ] [succs: 77 78 ]
$r8 = new java.util.ArrayList;
$r9 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);
$z17 = virtualinvoke $r8.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z17 != 0 goto i16 = s1 - 1;
"
    "Block 77:
[preds: 76 ] [succs: ]
$r94 = new java.lang.Exception;
specialinvoke $r94.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved.\");
throw $r94;
"
    "Block 78:
[preds: 76 ] [succs: 79 ]
i16 = s1 - 1;
"
    "Block 79:
[preds: 78 82 ] [succs: 80 83 ]
if i16 < 0 goto $r10 = new java.util.ArrayList;
"
    "Block 80:
[preds: 79 ] [succs: 81 82 ]
$r82 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i16);
r159 = (java.lang.Integer) $r82;
$r83 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159);
$z30 = virtualinvoke $r83.<java.lang.Object: boolean equals(java.lang.Object)>(r159);
if $z30 != 0 goto i16 = i16 + -1;
"
    "Block 81:
[preds: 80 ] [succs: ]
$r84 = new java.lang.Exception;
$r85 = new java.lang.StringBuilder;
specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \");
$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);
$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r89 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159);
$r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r159);
$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r84.<java.lang.Exception: void <init>(java.lang.String)>($r93);
throw $r84;
"
    "Block 82:
[preds: 80 ] [succs: 79 ]
i16 = i16 + -1;
goto [?= (branch)];
"
    "Block 83:
[preds: 79 ] [succs: 84 85 ]
$r10 = new java.util.ArrayList;
$r11 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);
$z18 = virtualinvoke $r10.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z18 != 0 goto i17 = s1 - 1;
"
    "Block 84:
[preds: 83 ] [succs: ]
$r81 = new java.lang.Exception;
specialinvoke $r81.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved after read.\");
throw $r81;
"
    "Block 85:
[preds: 83 ] [succs: 86 ]
i17 = s1 - 1;
"
    "Block 86:
[preds: 85 87 ] [succs: 87 88 ]
if i17 < 0 goto $r12 = new java.util.ArrayList;
"
    "Block 87:
[preds: 86 ] [succs: 86 ]
$r79 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i17);
r160 = (java.lang.Integer) $r79;
interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r160, r160);
i17 = i17 + -1;
goto [?= (branch)];
"
    "Block 88:
[preds: 86 ] [succs: 89 90 ]
$r12 = new java.util.ArrayList;
$r13 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);
$z19 = virtualinvoke $r12.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z19 != 0 goto $r14 = (java.util.LinkedHashMap) r156;
"
    "Block 89:
[preds: 88 ] [succs: ]
$r78 = new java.lang.Exception;
specialinvoke $r78.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not preserved after reinsert.\");
throw $r78;
"
    "Block 90:
[preds: 88 ] [succs: 91 92 ]
$r14 = (java.util.LinkedHashMap) r156;
$r15 = virtualinvoke $r14.<java.util.LinkedHashMap: java.lang.Object clone()>();
r161 = (java.util.Map) $r15;
$z20 = interfaceinvoke r156.<java.util.Map: boolean equals(java.lang.Object)>(r161);
if $z20 != 0 goto $r16 = new java.util.ArrayList;
"
    "Block 91:
[preds: 90 ] [succs: ]
$r77 = new java.lang.Exception;
specialinvoke $r77.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert-order Map != clone.\");
throw $r77;
"
    "Block 92:
[preds: 90 ] [succs: 93 ]
$r16 = new java.util.ArrayList;
specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>(r157);
r162 = $r16;
staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r162);
i18 = 0;
"
    "Block 93:
[preds: 92 96 ] [succs: 94 97 ]
if i18 >= s1 goto $r17 = new java.util.ArrayList;
"
    "Block 94:
[preds: 93 ] [succs: 95 96 ]
$r65 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i18);
r163 = (java.lang.Integer) $r65;
$r66 = interfaceinvoke r161.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163);
$z29 = virtualinvoke $r66.<java.lang.Object: boolean equals(java.lang.Object)>(r163);
if $z29 != 0 goto i18 = i18 + 1;
"
    "Block 95:
[preds: 94 ] [succs: ]
$r67 = new java.lang.Exception;
$r68 = new java.lang.StringBuilder;
specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();
$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \");
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);
$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r72 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163);
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r163);
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r67.<java.lang.Exception: void <init>(java.lang.String)>($r76);
throw $r67;
"
    "Block 96:
[preds: 94 ] [succs: 93 ]
i18 = i18 + 1;
goto [?= (branch)];
"
    "Block 97:
[preds: 93 ] [succs: 98 99 ]
$r17 = new java.util.ArrayList;
$r18 = interfaceinvoke r161.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r18);
$z21 = virtualinvoke $r17.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z21 != 0 goto $r19 = new java.util.LinkedHashMap;
"
    "Block 98:
[preds: 97 ] [succs: ]
$r64 = new java.lang.Exception;
specialinvoke $r64.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: altered by read.\");
throw $r64;
"
    "Block 99:
[preds: 97 ] [succs: 100 ]
$r19 = new java.util.LinkedHashMap;
specialinvoke $r19.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(1000, 0.75F, 1);
r164 = $r19;
i19 = 0;
"
    "Block 100:
[preds: 99 101 ] [succs: 101 102 ]
if i19 >= s1 goto $r20 = new java.util.ArrayList;
"
    "Block 101:
[preds: 100 ] [succs: 100 ]
$r62 = new java.lang.Integer;
specialinvoke $r62.<java.lang.Integer: void <init>(int)>(i19);
r165 = $r62;
interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r165, r165);
i19 = i19 + 1;
goto [?= (branch)];
"
    "Block 102:
[preds: 100 ] [succs: 103 104 ]
$r20 = new java.util.ArrayList;
$r21 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r21);
$z22 = virtualinvoke $r20.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z22 != 0 goto i20 = 0;
"
    "Block 103:
[preds: 102 ] [succs: ]
$r61 = new java.lang.Exception;
specialinvoke $r61.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not properly preserved.\");
throw $r61;
"
    "Block 104:
[preds: 102 ] [succs: 105 ]
i20 = 0;
"
    "Block 105:
[preds: 104 108 ] [succs: 106 109 ]
if i20 >= s1 goto $r22 = new java.util.ArrayList;
"
    "Block 106:
[preds: 105 ] [succs: 107 108 ]
$r49 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i20);
r166 = (java.lang.Integer) $r49;
$r50 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166);
$z28 = virtualinvoke $r50.<java.lang.Object: boolean equals(java.lang.Object)>(r166);
if $z28 != 0 goto i20 = i20 + 1;
"
    "Block 107:
[preds: 106 ] [succs: ]
$r51 = new java.lang.Exception;
$r52 = new java.lang.StringBuilder;
specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \");
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r56 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166);
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r166);
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r51.<java.lang.Exception: void <init>(java.lang.String)>($r60);
throw $r51;
"
    "Block 108:
[preds: 106 ] [succs: 105 ]
i20 = i20 + 1;
goto [?= (branch)];
"
    "Block 109:
[preds: 105 ] [succs: 110 111 ]
$r22 = new java.util.ArrayList;
$r23 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23);
$z23 = virtualinvoke $r22.<java.util.ArrayList: boolean equals(java.lang.Object)>(r162);
if $z23 != 0 goto i21 = 0;
"
    "Block 110:
[preds: 109 ] [succs: ]
$r48 = new java.lang.Exception;
specialinvoke $r48.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not properly altered by read.\");
throw $r48;
"
    "Block 111:
[preds: 109 ] [succs: 112 ]
i21 = 0;
"
    "Block 112:
[preds: 111 113 ] [succs: 113 114 ]
if i21 >= s1 goto $r24 = new java.util.ArrayList;
"
    "Block 113:
[preds: 112 ] [succs: 112 ]
$r46 = new java.lang.Integer;
specialinvoke $r46.<java.lang.Integer: void <init>(int)>(i21);
r167 = $r46;
interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r167, r167);
i21 = i21 + 1;
goto [?= (branch)];
"
    "Block 114:
[preds: 112 ] [succs: 115 116 ]
$r24 = new java.util.ArrayList;
$r25 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r25);
$z24 = virtualinvoke $r24.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z24 != 0 goto $r26 = (java.util.LinkedHashMap) r164;
"
    "Block 115:
[preds: 114 ] [succs: ]
$r45 = new java.lang.Exception;
specialinvoke $r45.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not altered by reinsert.\");
throw $r45;
"
    "Block 116:
[preds: 114 ] [succs: 117 118 ]
$r26 = (java.util.LinkedHashMap) r164;
$r27 = virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object clone()>();
r168 = (java.util.Map) $r27;
$z25 = interfaceinvoke r164.<java.util.Map: boolean equals(java.lang.Object)>(r168);
if $z25 != 0 goto i22 = 0;
"
    "Block 117:
[preds: 116 ] [succs: ]
$r44 = new java.lang.Exception;
specialinvoke $r44.<java.lang.Exception: void <init>(java.lang.String)>(\"Access-order Map != clone.\");
throw $r44;
"
    "Block 118:
[preds: 116 ] [succs: 119 ]
i22 = 0;
"
    "Block 119:
[preds: 118 122 ] [succs: 120 123 ]
if i22 >= s1 goto $r28 = new java.util.ArrayList;
"
    "Block 120:
[preds: 119 ] [succs: 121 122 ]
$r32 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i22);
r169 = (java.lang.Integer) $r32;
$r33 = interfaceinvoke r168.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169);
$z27 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>(r169);
if $z27 != 0 goto i22 = i22 + 1;
"
    "Block 121:
[preds: 120 ] [succs: ]
$r34 = new java.lang.Exception;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r39 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169);
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r169);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>($r43);
throw $r34;
"
    "Block 122:
[preds: 120 ] [succs: 119 ]
i22 = i22 + 1;
goto [?= (branch)];
"
    "Block 123:
[preds: 119 ] [succs: 124 125 ]
$r28 = new java.util.ArrayList;
$r29 = interfaceinvoke r168.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r29);
$z26 = virtualinvoke $r28.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z26 != 0 goto $r30 = <java.lang.System: java.io.PrintStream err>;
"
    "Block 124:
[preds: 123 ] [succs: ]
$r31 = new java.lang.Exception;
specialinvoke $r31.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: order not properly altered by read.\");
throw $r31;
"
    "Block 125:
[preds: 123 ] [succs: ]
$r30 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(\"Success.\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r142 := @parameter0: java.lang.String[];
s0 = 500;
s1 = 500;
i10 = 0;
"->"Block 1:
[preds: 0 24 ] [succs: 2 25 ]
if i10 >= s0 goto $r0 = new java.util.LinkedHashMap;
";
    "Block 1:
[preds: 0 24 ] [succs: 2 25 ]
if i10 >= s0 goto $r0 = new java.util.LinkedHashMap;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
$r124 = new java.util.LinkedHashMap;
specialinvoke $r124.<java.util.LinkedHashMap: void <init>()>();
r143 = $r124;
r144 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
i11 = 0;
";
    "Block 1:
[preds: 0 24 ] [succs: 2 25 ]
if i10 >= s0 goto $r0 = new java.util.LinkedHashMap;
"->"Block 25:
[preds: 1 ] [succs: 26 ]
$r0 = new java.util.LinkedHashMap;
specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();
r148 = $r0;
i13 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
$r124 = new java.util.LinkedHashMap;
specialinvoke $r124.<java.util.LinkedHashMap: void <init>()>();
r143 = $r124;
r144 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
i11 = 0;
"->"Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>();
";
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>();
"->"Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r139 = new java.lang.Integer;
$r140 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Random rnd>;
$i9 = virtualinvoke $r140.<java.util.Random: int nextInt()>();
specialinvoke $r139.<java.lang.Integer: void <init>(int)>($i9);
r145 = $r139;
$z37 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r145);
if $z37 != 0 goto $r139 = new java.lang.Integer;
";
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>();
"->"Block 6:
[preds: 3 ] [succs: 7 8 ]
$i5 = interfaceinvoke r143.<java.util.Map: int size()>();
if $i5 == s1 goto $r125 = new java.util.HashMap;
";
    "Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r139 = new java.lang.Integer;
$r140 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Random rnd>;
$i9 = virtualinvoke $r140.<java.util.Random: int nextInt()>();
specialinvoke $r139.<java.lang.Integer: void <init>(int)>($i9);
r145 = $r139;
$z37 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r145);
if $z37 != 0 goto $r139 = new java.lang.Integer;
"->"Block 5:
[preds: 4 ] [succs: 3 ]
interfaceinvoke r143.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r145, r144);
r144 = r145;
i11 = i11 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r139 = new java.lang.Integer;
$r140 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Random rnd>;
$i9 = virtualinvoke $r140.<java.util.Random: int nextInt()>();
specialinvoke $r139.<java.lang.Integer: void <init>(int)>($i9);
r145 = $r139;
$z37 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r145);
if $z37 != 0 goto $r139 = new java.lang.Integer;
"->"Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r139 = new java.lang.Integer;
$r140 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Random rnd>;
$i9 = virtualinvoke $r140.<java.util.Random: int nextInt()>();
specialinvoke $r139.<java.lang.Integer: void <init>(int)>($i9);
r145 = $r139;
$z37 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r145);
if $z37 != 0 goto $r139 = new java.lang.Integer;
";
    "Block 5:
[preds: 4 ] [succs: 3 ]
interfaceinvoke r143.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r145, r144);
r144 = r145;
i11 = i11 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i11 >= s1 goto $i5 = interfaceinvoke r143.<java.util.Map: int size()>();
";
    "Block 6:
[preds: 3 ] [succs: 7 8 ]
$i5 = interfaceinvoke r143.<java.util.Map: int size()>();
if $i5 == s1 goto $r125 = new java.util.HashMap;
"->"Block 7:
[preds: 6 ] [succs: ]
$r138 = new java.lang.Exception;
specialinvoke $r138.<java.lang.Exception: void <init>(java.lang.String)>(\"Size not as expected.\");
throw $r138;
";
    "Block 6:
[preds: 3 ] [succs: 7 8 ]
$i5 = interfaceinvoke r143.<java.util.Map: int size()>();
if $i5 == s1 goto $r125 = new java.util.HashMap;
"->"Block 8:
[preds: 6 ] [succs: 9 10 ]
$r125 = new java.util.HashMap;
specialinvoke $r125.<java.util.HashMap: void <init>(java.util.Map)>(r143);
$i6 = virtualinvoke $r125.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r143.<java.util.Map: int hashCode()>();
if $i6 == $i7 goto $r126 = new java.util.LinkedHashMap;
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$r125 = new java.util.HashMap;
specialinvoke $r125.<java.util.HashMap: void <init>(java.util.Map)>(r143);
$i6 = virtualinvoke $r125.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r143.<java.util.Map: int hashCode()>();
if $i6 == $i7 goto $r126 = new java.util.LinkedHashMap;
"->"Block 9:
[preds: 8 ] [succs: ]
$r137 = new java.lang.Exception;
specialinvoke $r137.<java.lang.Exception: void <init>(java.lang.String)>(\"Incorrect hashCode computation.\");
throw $r137;
";
    "Block 8:
[preds: 6 ] [succs: 9 10 ]
$r125 = new java.util.HashMap;
specialinvoke $r125.<java.util.HashMap: void <init>(java.util.Map)>(r143);
$i6 = virtualinvoke $r125.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r143.<java.util.Map: int hashCode()>();
if $i6 == $i7 goto $r126 = new java.util.LinkedHashMap;
"->"Block 10:
[preds: 8 ] [succs: 11 12 ]
$r126 = new java.util.LinkedHashMap;
specialinvoke $r126.<java.util.LinkedHashMap: void <init>()>();
r146 = $r126;
interfaceinvoke r146.<java.util.Map: void putAll(java.util.Map)>(r143);
$r127 = interfaceinvoke r146.<java.util.Map: java.util.Collection values()>();
$r128 = interfaceinvoke r143.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r127.<java.util.Collection: boolean removeAll(java.util.Collection)>($r128);
$i8 = interfaceinvoke r146.<java.util.Map: int size()>();
if $i8 != 1 goto $r129 = new java.lang.Exception;
";
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$r126 = new java.util.LinkedHashMap;
specialinvoke $r126.<java.util.LinkedHashMap: void <init>()>();
r146 = $r126;
interfaceinvoke r146.<java.util.Map: void putAll(java.util.Map)>(r143);
$r127 = interfaceinvoke r146.<java.util.Map: java.util.Collection values()>();
$r128 = interfaceinvoke r143.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r127.<java.util.Collection: boolean removeAll(java.util.Collection)>($r128);
$i8 = interfaceinvoke r146.<java.util.Map: int size()>();
if $i8 != 1 goto $r129 = new java.lang.Exception;
"->"Block 11:
[preds: 10 ] [succs: 12 13 ]
$r130 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$z34 = interfaceinvoke r146.<java.util.Map: boolean containsValue(java.lang.Object)>($r130);
if $z34 != 0 goto i12 = 0;
";
    "Block 10:
[preds: 8 ] [succs: 11 12 ]
$r126 = new java.util.LinkedHashMap;
specialinvoke $r126.<java.util.LinkedHashMap: void <init>()>();
r146 = $r126;
interfaceinvoke r146.<java.util.Map: void putAll(java.util.Map)>(r143);
$r127 = interfaceinvoke r146.<java.util.Map: java.util.Collection values()>();
$r128 = interfaceinvoke r143.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r127.<java.util.Collection: boolean removeAll(java.util.Collection)>($r128);
$i8 = interfaceinvoke r146.<java.util.Map: int size()>();
if $i8 != 1 goto $r129 = new java.lang.Exception;
"->"Block 12:
[preds: 10 11 ] [succs: ]
$r129 = new java.lang.Exception;
specialinvoke $r129.<java.lang.Exception: void <init>(java.lang.String)>(\"Collection views test failed.\");
throw $r129;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r130 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$z34 = interfaceinvoke r146.<java.util.Map: boolean containsValue(java.lang.Object)>($r130);
if $z34 != 0 goto i12 = 0;
"->"Block 12:
[preds: 10 11 ] [succs: ]
$r129 = new java.lang.Exception;
specialinvoke $r129.<java.lang.Exception: void <init>(java.lang.String)>(\"Collection views test failed.\");
throw $r129;
";
    "Block 11:
[preds: 10 ] [succs: 12 13 ]
$r130 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$z34 = interfaceinvoke r146.<java.util.Map: boolean containsValue(java.lang.Object)>($r130);
if $z34 != 0 goto i12 = 0;
"->"Block 13:
[preds: 11 ] [succs: 14 ]
i12 = 0;
";
    "Block 13:
[preds: 11 ] [succs: 14 ]
i12 = 0;
"->"Block 14:
[preds: 13 19 ] [succs: 15 20 ]
$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
";
    "Block 14:
[preds: 13 19 ] [succs: 15 20 ]
$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
"->"Block 15:
[preds: 14 ] [succs: 16 17 ]
$z36 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r144);
if $z36 != 0 goto r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144);
";
    "Block 14:
[preds: 13 19 ] [succs: 15 20 ]
$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
"->"Block 20:
[preds: 14 ] [succs: 21 22 ]
$z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
if $z35 != 0 goto (branch);
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$z36 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r144);
if $z36 != 0 goto r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144);
"->"Block 16:
[preds: 15 ] [succs: ]
$r136 = new java.lang.Exception;
specialinvoke $r136.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list doesn\'t contain a link.\");
throw $r136;
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$z36 = interfaceinvoke r143.<java.util.Map: boolean containsKey(java.lang.Object)>(r144);
if $z36 != 0 goto r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144);
"->"Block 17:
[preds: 15 ] [succs: 18 19 ]
r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144);
if r147 != null goto interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144);
";
    "Block 17:
[preds: 15 ] [succs: 18 19 ]
r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144);
if r147 != null goto interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144);
"->"Block 18:
[preds: 17 ] [succs: ]
$r135 = new java.lang.Exception;
specialinvoke $r135.<java.lang.Exception: void <init>(java.lang.String)>(\"Could not retrieve a link.\");
throw $r135;
";
    "Block 17:
[preds: 15 ] [succs: 18 19 ]
r147 = interfaceinvoke r143.<java.util.Map: java.lang.Object get(java.lang.Object)>(r144);
if r147 != null goto interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144);
"->"Block 19:
[preds: 17 ] [succs: 14 ]
interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144);
r144 = r147;
i12 = i12 + 1;
goto [?= $r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>];
";
    "Block 19:
[preds: 17 ] [succs: 14 ]
interfaceinvoke r143.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r144);
r144 = r147;
i12 = i12 + 1;
goto [?= $r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>];
"->"Block 14:
[preds: 13 19 ] [succs: 15 20 ]
$r131 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
if r144 == $r131 goto $z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
";
    "Block 20:
[preds: 14 ] [succs: 21 22 ]
$z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
if $z35 != 0 goto (branch);
"->"Block 21:
[preds: 20 ] [succs: ]
$r133 = new java.lang.Exception;
specialinvoke $r133.<java.lang.Exception: void <init>(java.lang.String)>(\"Map nonempty after removing all links.\");
throw $r133;
";
    "Block 20:
[preds: 14 ] [succs: 21 22 ]
$z35 = interfaceinvoke r143.<java.util.Map: boolean isEmpty()>();
if $z35 != 0 goto (branch);
"->"Block 22:
[preds: 20 ] [succs: 23 24 ]
if i12 == s1 goto i10 = i10 + 1;
";
    "Block 22:
[preds: 20 ] [succs: 23 24 ]
if i12 == s1 goto i10 = i10 + 1;
"->"Block 23:
[preds: 22 ] [succs: ]
$r132 = new java.lang.Exception;
specialinvoke $r132.<java.lang.Exception: void <init>(java.lang.String)>(\"Linked list size not as expected.\");
throw $r132;
";
    "Block 22:
[preds: 20 ] [succs: 23 24 ]
if i12 == s1 goto i10 = i10 + 1;
"->"Block 24:
[preds: 22 ] [succs: 1 ]
i10 = i10 + 1;
goto [?= (branch)];
";
    "Block 24:
[preds: 22 ] [succs: 1 ]
i10 = i10 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 24 ] [succs: 2 25 ]
if i10 >= s0 goto $r0 = new java.util.LinkedHashMap;
";
    "Block 25:
[preds: 1 ] [succs: 26 ]
$r0 = new java.util.LinkedHashMap;
specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();
r148 = $r0;
i13 = 0;
"->"Block 26:
[preds: 25 29 ] [succs: 27 30 ]
if i13 >= s1 goto i14 = 0;
";
    "Block 26:
[preds: 25 29 ] [succs: 27 30 ]
if i13 >= s1 goto i14 = 0;
"->"Block 27:
[preds: 26 ] [succs: 28 29 ]
$r120 = new java.lang.Integer;
specialinvoke $r120.<java.lang.Integer: void <init>(int)>(i13);
$r121 = new java.lang.Integer;
$i4 = 2 * i13;
specialinvoke $r121.<java.lang.Integer: void <init>(int)>($i4);
$r122 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121);
if $r122 == null goto i13 = i13 + 1;
";
    "Block 26:
[preds: 25 29 ] [succs: 27 30 ]
if i13 >= s1 goto i14 = 0;
"->"Block 30:
[preds: 26 ] [succs: 31 ]
i14 = 0;
";
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
$r120 = new java.lang.Integer;
specialinvoke $r120.<java.lang.Integer: void <init>(int)>(i13);
$r121 = new java.lang.Integer;
$i4 = 2 * i13;
specialinvoke $r121.<java.lang.Integer: void <init>(int)>($i4);
$r122 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121);
if $r122 == null goto i13 = i13 + 1;
"->"Block 28:
[preds: 27 ] [succs: ]
$r123 = new java.lang.Exception;
specialinvoke $r123.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns non-null value erroenously.\");
throw $r123;
";
    "Block 27:
[preds: 26 ] [succs: 28 29 ]
$r120 = new java.lang.Integer;
specialinvoke $r120.<java.lang.Integer: void <init>(int)>(i13);
$r121 = new java.lang.Integer;
$i4 = 2 * i13;
specialinvoke $r121.<java.lang.Integer: void <init>(int)>($i4);
$r122 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r120, $r121);
if $r122 == null goto i13 = i13 + 1;
"->"Block 29:
[preds: 27 ] [succs: 26 ]
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 29:
[preds: 27 ] [succs: 26 ]
i13 = i13 + 1;
goto [?= (branch)];
"->"Block 26:
[preds: 25 29 ] [succs: 27 30 ]
if i13 >= s1 goto i14 = 0;
";
    "Block 30:
[preds: 26 ] [succs: 31 ]
i14 = 0;
"->"Block 31:
[preds: 30 37 ] [succs: 32 38 ]
$i2 = 2 * s1;
if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
";
    "Block 31:
[preds: 30 37 ] [succs: 32 38 ]
$i2 = 2 * s1;
if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
"->"Block 32:
[preds: 31 ] [succs: 33 34 ]
$r114 = new java.lang.Integer;
specialinvoke $r114.<java.lang.Integer: void <init>(int)>(i14);
$z32 = interfaceinvoke r148.<java.util.Map: boolean containsValue(java.lang.Object)>($r114);
$i3 = i14 % 2;
if $i3 != 0 goto $z38 = 0;
";
    "Block 31:
[preds: 30 37 ] [succs: 32 38 ]
$i2 = 2 * s1;
if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
"->"Block 38:
[preds: 31 ] [succs: 39 40 ]
$r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$r1 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$r3 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);
if $r3 != null goto $r4 = new java.util.LinkedHashMap;
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$r114 = new java.lang.Integer;
specialinvoke $r114.<java.lang.Integer: void <init>(int)>(i14);
$z32 = interfaceinvoke r148.<java.util.Map: boolean containsValue(java.lang.Object)>($r114);
$i3 = i14 % 2;
if $i3 != 0 goto $z38 = 0;
"->"Block 33:
[preds: 32 ] [succs: 35 ]
$z38 = 1;
goto [?= (branch)];
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$r114 = new java.lang.Integer;
specialinvoke $r114.<java.lang.Integer: void <init>(int)>(i14);
$z32 = interfaceinvoke r148.<java.util.Map: boolean containsValue(java.lang.Object)>($r114);
$i3 = i14 % 2;
if $i3 != 0 goto $z38 = 0;
"->"Block 34:
[preds: 32 ] [succs: 35 ]
$z38 = 0;
";
    "Block 33:
[preds: 32 ] [succs: 35 ]
$z38 = 1;
goto [?= (branch)];
"->"Block 35:
[preds: 33 34 ] [succs: 36 37 ]
if $z32 == $z38 goto i14 = i14 + 1;
";
    "Block 34:
[preds: 32 ] [succs: 35 ]
$z38 = 0;
"->"Block 35:
[preds: 33 34 ] [succs: 36 37 ]
if $z32 == $z38 goto i14 = i14 + 1;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
if $z32 == $z38 goto i14 = i14 + 1;
"->"Block 36:
[preds: 35 ] [succs: ]
$r115 = new java.lang.Exception;
$r116 = new java.lang.StringBuilder;
specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();
$r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \");
$r118 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);
$r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r115.<java.lang.Exception: void <init>(java.lang.String)>($r119);
throw $r115;
";
    "Block 35:
[preds: 33 34 ] [succs: 36 37 ]
if $z32 == $z38 goto i14 = i14 + 1;
"->"Block 37:
[preds: 35 ] [succs: 31 ]
i14 = i14 + 1;
goto [?= $i2 = 2 * s1];
";
    "Block 37:
[preds: 35 ] [succs: 31 ]
i14 = i14 + 1;
goto [?= $i2 = 2 * s1];
"->"Block 31:
[preds: 30 37 ] [succs: 32 38 ]
$i2 = 2 * s1;
if i14 >= $i2 goto $r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
";
    "Block 38:
[preds: 31 ] [succs: 39 40 ]
$r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$r1 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$r3 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);
if $r3 != null goto $r4 = new java.util.LinkedHashMap;
"->"Block 39:
[preds: 38 ] [succs: ]
$r113 = new java.lang.Exception;
specialinvoke $r113.<java.lang.Exception: void <init>(java.lang.String)>(\"put returns a null value erroenously.\");
throw $r113;
";
    "Block 38:
[preds: 31 ] [succs: 39 40 ]
$r2 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$r1 = <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.lang.Object nil>;
$r3 = interfaceinvoke r148.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);
if $r3 != null goto $r4 = new java.util.LinkedHashMap;
"->"Block 40:
[preds: 38 ] [succs: 41 42 ]
$r4 = new java.util.LinkedHashMap;
specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();
r149 = $r4;
interfaceinvoke r149.<java.util.Map: void putAll(java.util.Map)>(r148);
$z0 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r149);
if $z0 != 0 goto $z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148);
";
    "Block 40:
[preds: 38 ] [succs: 41 42 ]
$r4 = new java.util.LinkedHashMap;
specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();
r149 = $r4;
interfaceinvoke r149.<java.util.Map: void putAll(java.util.Map)>(r148);
$z0 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r149);
if $z0 != 0 goto $z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148);
"->"Block 41:
[preds: 40 ] [succs: ]
$r112 = new java.lang.Exception;
specialinvoke $r112.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (1)\");
throw $r112;
";
    "Block 40:
[preds: 38 ] [succs: 41 42 ]
$r4 = new java.util.LinkedHashMap;
specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();
r149 = $r4;
interfaceinvoke r149.<java.util.Map: void putAll(java.util.Map)>(r148);
$z0 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r149);
if $z0 != 0 goto $z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148);
"->"Block 42:
[preds: 40 ] [succs: 43 44 ]
$z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148);
if $z1 != 0 goto r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
";
    "Block 42:
[preds: 40 ] [succs: 43 44 ]
$z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148);
if $z1 != 0 goto r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"->"Block 43:
[preds: 42 ] [succs: ]
$r111 = new java.lang.Exception;
specialinvoke $r111.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (2)\");
throw $r111;
";
    "Block 42:
[preds: 40 ] [succs: 43 44 ]
$z1 = interfaceinvoke r149.<java.util.Map: boolean equals(java.lang.Object)>(r148);
if $z1 != 0 goto r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"->"Block 44:
[preds: 42 ] [succs: 45 46 ]
r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r151 = interfaceinvoke r149.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r150.<java.util.Set: boolean equals(java.lang.Object)>(r151);
if $z2 != 0 goto $z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150);
";
    "Block 44:
[preds: 42 ] [succs: 45 46 ]
r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r151 = interfaceinvoke r149.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r150.<java.util.Set: boolean equals(java.lang.Object)>(r151);
if $z2 != 0 goto $z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150);
"->"Block 45:
[preds: 44 ] [succs: ]
$r110 = new java.lang.Exception;
specialinvoke $r110.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (3)\");
throw $r110;
";
    "Block 44:
[preds: 42 ] [succs: 45 46 ]
r150 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r151 = interfaceinvoke r149.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r150.<java.util.Set: boolean equals(java.lang.Object)>(r151);
if $z2 != 0 goto $z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150);
"->"Block 46:
[preds: 44 ] [succs: 47 48 ]
$z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150);
if $z3 != 0 goto $z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151);
";
    "Block 46:
[preds: 44 ] [succs: 47 48 ]
$z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150);
if $z3 != 0 goto $z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151);
"->"Block 47:
[preds: 46 ] [succs: ]
$r109 = new java.lang.Exception;
specialinvoke $r109.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone not equal to original. (4)\");
throw $r109;
";
    "Block 46:
[preds: 44 ] [succs: 47 48 ]
$z3 = interfaceinvoke r151.<java.util.Set: boolean equals(java.lang.Object)>(r150);
if $z3 != 0 goto $z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151);
"->"Block 48:
[preds: 46 ] [succs: 49 50 ]
$z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151);
if $z4 != 0 goto $z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150);
";
    "Block 48:
[preds: 46 ] [succs: 49 50 ]
$z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151);
if $z4 != 0 goto $z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150);
"->"Block 49:
[preds: 48 ] [succs: ]
$r108 = new java.lang.Exception;
specialinvoke $r108.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain clone!\");
throw $r108;
";
    "Block 48:
[preds: 46 ] [succs: 49 50 ]
$z4 = interfaceinvoke r150.<java.util.Set: boolean containsAll(java.util.Collection)>(r151);
if $z4 != 0 goto $z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150);
"->"Block 50:
[preds: 48 ] [succs: 51 52 ]
$z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150);
if $z5 != 0 goto r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148);
";
    "Block 50:
[preds: 48 ] [succs: 51 52 ]
$z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150);
if $z5 != 0 goto r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148);
"->"Block 51:
[preds: 50 ] [succs: ]
$r107 = new java.lang.Exception;
specialinvoke $r107.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone doesn\'t contain original!\");
throw $r107;
";
    "Block 50:
[preds: 48 ] [succs: 51 52 ]
$z5 = interfaceinvoke r151.<java.util.Set: boolean containsAll(java.util.Collection)>(r150);
if $z5 != 0 goto r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148);
"->"Block 52:
[preds: 50 ] [succs: 53 54 ]
r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148);
$z6 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r152);
if $z6 != 0 goto $z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148);
";
    "Block 52:
[preds: 50 ] [succs: 53 54 ]
r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148);
$z6 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r152);
if $z6 != 0 goto $z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148);
"->"Block 53:
[preds: 52 ] [succs: ]
$r106 = new java.lang.Exception;
specialinvoke $r106.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (1)\");
throw $r106;
";
    "Block 52:
[preds: 50 ] [succs: 53 54 ]
r152 = staticinvoke <jsr166tests.jtreg.util.LinkedHashMap.Basic: java.util.Map serClone(java.util.Map)>(r148);
$z6 = interfaceinvoke r148.<java.util.Map: boolean equals(java.lang.Object)>(r152);
if $z6 != 0 goto $z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148);
"->"Block 54:
[preds: 52 ] [succs: 55 56 ]
$z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148);
if $z7 != 0 goto r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
";
    "Block 54:
[preds: 52 ] [succs: 55 56 ]
$z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148);
if $z7 != 0 goto r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"->"Block 55:
[preds: 54 ] [succs: ]
$r105 = new java.lang.Exception;
specialinvoke $r105.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (2)\");
throw $r105;
";
    "Block 54:
[preds: 52 ] [succs: 55 56 ]
$z7 = interfaceinvoke r152.<java.util.Map: boolean equals(java.lang.Object)>(r148);
if $z7 != 0 goto r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"->"Block 56:
[preds: 54 ] [succs: 57 58 ]
r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r154 = interfaceinvoke r152.<java.util.Map: java.util.Set entrySet()>();
$z8 = interfaceinvoke r153.<java.util.Set: boolean equals(java.lang.Object)>(r154);
if $z8 != 0 goto $z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153);
";
    "Block 56:
[preds: 54 ] [succs: 57 58 ]
r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r154 = interfaceinvoke r152.<java.util.Map: java.util.Set entrySet()>();
$z8 = interfaceinvoke r153.<java.util.Set: boolean equals(java.lang.Object)>(r154);
if $z8 != 0 goto $z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153);
"->"Block 57:
[preds: 56 ] [succs: ]
$r104 = new java.lang.Exception;
specialinvoke $r104.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (3)\");
throw $r104;
";
    "Block 56:
[preds: 54 ] [succs: 57 58 ]
r153 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r154 = interfaceinvoke r152.<java.util.Map: java.util.Set entrySet()>();
$z8 = interfaceinvoke r153.<java.util.Set: boolean equals(java.lang.Object)>(r154);
if $z8 != 0 goto $z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153);
"->"Block 58:
[preds: 56 ] [succs: 59 60 ]
$z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153);
if $z9 != 0 goto $z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154);
";
    "Block 58:
[preds: 56 ] [succs: 59 60 ]
$z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153);
if $z9 != 0 goto $z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154);
"->"Block 59:
[preds: 58 ] [succs: ]
$r103 = new java.lang.Exception;
specialinvoke $r103.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone not equal to original. (4)\");
throw $r103;
";
    "Block 58:
[preds: 56 ] [succs: 59 60 ]
$z9 = interfaceinvoke r154.<java.util.Set: boolean equals(java.lang.Object)>(r153);
if $z9 != 0 goto $z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154);
"->"Block 60:
[preds: 58 ] [succs: 61 62 ]
$z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154);
if $z10 != 0 goto $z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153);
";
    "Block 60:
[preds: 58 ] [succs: 61 62 ]
$z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154);
if $z10 != 0 goto $z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153);
"->"Block 61:
[preds: 60 ] [succs: ]
$r102 = new java.lang.Exception;
specialinvoke $r102.<java.lang.Exception: void <init>(java.lang.String)>(\"Original doesn\'t contain Serialize clone!\");
throw $r102;
";
    "Block 60:
[preds: 58 ] [succs: 61 62 ]
$z10 = interfaceinvoke r153.<java.util.Set: boolean containsAll(java.util.Collection)>(r154);
if $z10 != 0 goto $z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153);
"->"Block 62:
[preds: 60 ] [succs: 63 64 ]
$z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153);
if $z11 != 0 goto interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153);
";
    "Block 62:
[preds: 60 ] [succs: 63 64 ]
$z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153);
if $z11 != 0 goto interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153);
"->"Block 63:
[preds: 62 ] [succs: ]
$r101 = new java.lang.Exception;
specialinvoke $r101.<java.lang.Exception: void <init>(java.lang.String)>(\"Serialize Clone doesn\'t contain original!\");
throw $r101;
";
    "Block 62:
[preds: 60 ] [succs: 63 64 ]
$z11 = interfaceinvoke r154.<java.util.Set: boolean containsAll(java.util.Collection)>(r153);
if $z11 != 0 goto interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153);
"->"Block 64:
[preds: 62 ] [succs: 65 66 ]
interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153);
$z13 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>();
if $z13 != 0 goto interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148);
";
    "Block 64:
[preds: 62 ] [succs: 65 66 ]
interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153);
$z13 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>();
if $z13 != 0 goto interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148);
"->"Block 65:
[preds: 64 ] [succs: ]
$r100 = new java.lang.Exception;
specialinvoke $r100.<java.lang.Exception: void <init>(java.lang.String)>(\"entrySet().removeAll failed.\");
throw $r100;
";
    "Block 64:
[preds: 62 ] [succs: 65 66 ]
interfaceinvoke r154.<java.util.Set: boolean removeAll(java.util.Collection)>(r153);
$z13 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>();
if $z13 != 0 goto interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148);
"->"Block 66:
[preds: 64 ] [succs: 67 68 ]
interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148);
interfaceinvoke r152.<java.util.Map: void clear()>();
$z14 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>();
if $z14 != 0 goto $r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
";
    "Block 66:
[preds: 64 ] [succs: 67 68 ]
interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148);
interfaceinvoke r152.<java.util.Map: void clear()>();
$z14 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>();
if $z14 != 0 goto $r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"->"Block 67:
[preds: 66 ] [succs: ]
$r99 = new java.lang.Exception;
specialinvoke $r99.<java.lang.Exception: void <init>(java.lang.String)>(\"clear failed.\");
throw $r99;
";
    "Block 66:
[preds: 64 ] [succs: 67 68 ]
interfaceinvoke r152.<java.util.Map: void putAll(java.util.Map)>(r148);
interfaceinvoke r152.<java.util.Map: void clear()>();
$z14 = interfaceinvoke r152.<java.util.Map: boolean isEmpty()>();
if $z14 != 0 goto $r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
"->"Block 68:
[preds: 66 ] [succs: 69 ]
$r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r155 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 68:
[preds: 66 ] [succs: 69 ]
$r5 = interfaceinvoke r148.<java.util.Map: java.util.Set entrySet()>();
r155 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 69:
[preds: 68 70 ] [succs: 70 71 ]
$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>();
if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
";
    "Block 69:
[preds: 68 70 ] [succs: 70 71 ]
$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>();
if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
"->"Block 70:
[preds: 69 ] [succs: 69 ]
interfaceinvoke r155.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r155.<java.util.Iterator: void remove()>();
goto [?= $z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 69:
[preds: 68 70 ] [succs: 70 71 ]
$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>();
if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
"->"Block 71:
[preds: 69 ] [succs: 72 73 ]
$z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
if $z16 != 0 goto $r6 = new java.util.LinkedHashMap;
";
    "Block 70:
[preds: 69 ] [succs: 69 ]
interfaceinvoke r155.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r155.<java.util.Iterator: void remove()>();
goto [?= $z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>()];
"->"Block 69:
[preds: 68 70 ] [succs: 70 71 ]
$z15 = interfaceinvoke r155.<java.util.Iterator: boolean hasNext()>();
if $z15 == 0 goto $z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
";
    "Block 71:
[preds: 69 ] [succs: 72 73 ]
$z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
if $z16 != 0 goto $r6 = new java.util.LinkedHashMap;
"->"Block 72:
[preds: 71 ] [succs: ]
$r97 = new java.lang.Exception;
specialinvoke $r97.<java.lang.Exception: void <init>(java.lang.String)>(\"Iterator.remove() failed\");
throw $r97;
";
    "Block 71:
[preds: 69 ] [succs: 72 73 ]
$z16 = interfaceinvoke r148.<java.util.Map: boolean isEmpty()>();
if $z16 != 0 goto $r6 = new java.util.LinkedHashMap;
"->"Block 73:
[preds: 71 ] [succs: 74 ]
$r6 = new java.util.LinkedHashMap;
specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();
r156 = $r6;
$r7 = new java.util.ArrayList;
specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(s1);
r157 = $r7;
i15 = 0;
";
    "Block 73:
[preds: 71 ] [succs: 74 ]
$r6 = new java.util.LinkedHashMap;
specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();
r156 = $r6;
$r7 = new java.util.ArrayList;
specialinvoke $r7.<java.util.ArrayList: void <init>(int)>(s1);
r157 = $r7;
i15 = 0;
"->"Block 74:
[preds: 73 75 ] [succs: 75 76 ]
if i15 >= s1 goto $r8 = new java.util.ArrayList;
";
    "Block 74:
[preds: 73 75 ] [succs: 75 76 ]
if i15 >= s1 goto $r8 = new java.util.ArrayList;
"->"Block 75:
[preds: 74 ] [succs: 74 ]
$r95 = new java.lang.Integer;
specialinvoke $r95.<java.lang.Integer: void <init>(int)>(i15);
r158 = $r95;
interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r158, r158);
interfaceinvoke r157.<java.util.List: boolean add(java.lang.Object)>(r158);
i15 = i15 + 1;
goto [?= (branch)];
";
    "Block 74:
[preds: 73 75 ] [succs: 75 76 ]
if i15 >= s1 goto $r8 = new java.util.ArrayList;
"->"Block 76:
[preds: 74 ] [succs: 77 78 ]
$r8 = new java.util.ArrayList;
$r9 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);
$z17 = virtualinvoke $r8.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z17 != 0 goto i16 = s1 - 1;
";
    "Block 75:
[preds: 74 ] [succs: 74 ]
$r95 = new java.lang.Integer;
specialinvoke $r95.<java.lang.Integer: void <init>(int)>(i15);
r158 = $r95;
interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r158, r158);
interfaceinvoke r157.<java.util.List: boolean add(java.lang.Object)>(r158);
i15 = i15 + 1;
goto [?= (branch)];
"->"Block 74:
[preds: 73 75 ] [succs: 75 76 ]
if i15 >= s1 goto $r8 = new java.util.ArrayList;
";
    "Block 76:
[preds: 74 ] [succs: 77 78 ]
$r8 = new java.util.ArrayList;
$r9 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);
$z17 = virtualinvoke $r8.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z17 != 0 goto i16 = s1 - 1;
"->"Block 77:
[preds: 76 ] [succs: ]
$r94 = new java.lang.Exception;
specialinvoke $r94.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved.\");
throw $r94;
";
    "Block 76:
[preds: 74 ] [succs: 77 78 ]
$r8 = new java.util.ArrayList;
$r9 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);
$z17 = virtualinvoke $r8.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z17 != 0 goto i16 = s1 - 1;
"->"Block 78:
[preds: 76 ] [succs: 79 ]
i16 = s1 - 1;
";
    "Block 78:
[preds: 76 ] [succs: 79 ]
i16 = s1 - 1;
"->"Block 79:
[preds: 78 82 ] [succs: 80 83 ]
if i16 < 0 goto $r10 = new java.util.ArrayList;
";
    "Block 79:
[preds: 78 82 ] [succs: 80 83 ]
if i16 < 0 goto $r10 = new java.util.ArrayList;
"->"Block 80:
[preds: 79 ] [succs: 81 82 ]
$r82 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i16);
r159 = (java.lang.Integer) $r82;
$r83 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159);
$z30 = virtualinvoke $r83.<java.lang.Object: boolean equals(java.lang.Object)>(r159);
if $z30 != 0 goto i16 = i16 + -1;
";
    "Block 79:
[preds: 78 82 ] [succs: 80 83 ]
if i16 < 0 goto $r10 = new java.util.ArrayList;
"->"Block 83:
[preds: 79 ] [succs: 84 85 ]
$r10 = new java.util.ArrayList;
$r11 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);
$z18 = virtualinvoke $r10.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z18 != 0 goto i17 = s1 - 1;
";
    "Block 80:
[preds: 79 ] [succs: 81 82 ]
$r82 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i16);
r159 = (java.lang.Integer) $r82;
$r83 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159);
$z30 = virtualinvoke $r83.<java.lang.Object: boolean equals(java.lang.Object)>(r159);
if $z30 != 0 goto i16 = i16 + -1;
"->"Block 81:
[preds: 80 ] [succs: ]
$r84 = new java.lang.Exception;
$r85 = new java.lang.StringBuilder;
specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();
$r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \");
$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i16);
$r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r89 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159);
$r90 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r89);
$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r159);
$r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r84.<java.lang.Exception: void <init>(java.lang.String)>($r93);
throw $r84;
";
    "Block 80:
[preds: 79 ] [succs: 81 82 ]
$r82 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i16);
r159 = (java.lang.Integer) $r82;
$r83 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r159);
$z30 = virtualinvoke $r83.<java.lang.Object: boolean equals(java.lang.Object)>(r159);
if $z30 != 0 goto i16 = i16 + -1;
"->"Block 82:
[preds: 80 ] [succs: 79 ]
i16 = i16 + -1;
goto [?= (branch)];
";
    "Block 82:
[preds: 80 ] [succs: 79 ]
i16 = i16 + -1;
goto [?= (branch)];
"->"Block 79:
[preds: 78 82 ] [succs: 80 83 ]
if i16 < 0 goto $r10 = new java.util.ArrayList;
";
    "Block 83:
[preds: 79 ] [succs: 84 85 ]
$r10 = new java.util.ArrayList;
$r11 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);
$z18 = virtualinvoke $r10.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z18 != 0 goto i17 = s1 - 1;
"->"Block 84:
[preds: 83 ] [succs: ]
$r81 = new java.lang.Exception;
specialinvoke $r81.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not preserved after read.\");
throw $r81;
";
    "Block 83:
[preds: 79 ] [succs: 84 85 ]
$r10 = new java.util.ArrayList;
$r11 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r10.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);
$z18 = virtualinvoke $r10.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z18 != 0 goto i17 = s1 - 1;
"->"Block 85:
[preds: 83 ] [succs: 86 ]
i17 = s1 - 1;
";
    "Block 85:
[preds: 83 ] [succs: 86 ]
i17 = s1 - 1;
"->"Block 86:
[preds: 85 87 ] [succs: 87 88 ]
if i17 < 0 goto $r12 = new java.util.ArrayList;
";
    "Block 86:
[preds: 85 87 ] [succs: 87 88 ]
if i17 < 0 goto $r12 = new java.util.ArrayList;
"->"Block 87:
[preds: 86 ] [succs: 86 ]
$r79 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i17);
r160 = (java.lang.Integer) $r79;
interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r160, r160);
i17 = i17 + -1;
goto [?= (branch)];
";
    "Block 86:
[preds: 85 87 ] [succs: 87 88 ]
if i17 < 0 goto $r12 = new java.util.ArrayList;
"->"Block 88:
[preds: 86 ] [succs: 89 90 ]
$r12 = new java.util.ArrayList;
$r13 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);
$z19 = virtualinvoke $r12.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z19 != 0 goto $r14 = (java.util.LinkedHashMap) r156;
";
    "Block 87:
[preds: 86 ] [succs: 86 ]
$r79 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i17);
r160 = (java.lang.Integer) $r79;
interfaceinvoke r156.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r160, r160);
i17 = i17 + -1;
goto [?= (branch)];
"->"Block 86:
[preds: 85 87 ] [succs: 87 88 ]
if i17 < 0 goto $r12 = new java.util.ArrayList;
";
    "Block 88:
[preds: 86 ] [succs: 89 90 ]
$r12 = new java.util.ArrayList;
$r13 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);
$z19 = virtualinvoke $r12.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z19 != 0 goto $r14 = (java.util.LinkedHashMap) r156;
"->"Block 89:
[preds: 88 ] [succs: ]
$r78 = new java.lang.Exception;
specialinvoke $r78.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not preserved after reinsert.\");
throw $r78;
";
    "Block 88:
[preds: 86 ] [succs: 89 90 ]
$r12 = new java.util.ArrayList;
$r13 = interfaceinvoke r156.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);
$z19 = virtualinvoke $r12.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z19 != 0 goto $r14 = (java.util.LinkedHashMap) r156;
"->"Block 90:
[preds: 88 ] [succs: 91 92 ]
$r14 = (java.util.LinkedHashMap) r156;
$r15 = virtualinvoke $r14.<java.util.LinkedHashMap: java.lang.Object clone()>();
r161 = (java.util.Map) $r15;
$z20 = interfaceinvoke r156.<java.util.Map: boolean equals(java.lang.Object)>(r161);
if $z20 != 0 goto $r16 = new java.util.ArrayList;
";
    "Block 90:
[preds: 88 ] [succs: 91 92 ]
$r14 = (java.util.LinkedHashMap) r156;
$r15 = virtualinvoke $r14.<java.util.LinkedHashMap: java.lang.Object clone()>();
r161 = (java.util.Map) $r15;
$z20 = interfaceinvoke r156.<java.util.Map: boolean equals(java.lang.Object)>(r161);
if $z20 != 0 goto $r16 = new java.util.ArrayList;
"->"Block 91:
[preds: 90 ] [succs: ]
$r77 = new java.lang.Exception;
specialinvoke $r77.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert-order Map != clone.\");
throw $r77;
";
    "Block 90:
[preds: 88 ] [succs: 91 92 ]
$r14 = (java.util.LinkedHashMap) r156;
$r15 = virtualinvoke $r14.<java.util.LinkedHashMap: java.lang.Object clone()>();
r161 = (java.util.Map) $r15;
$z20 = interfaceinvoke r156.<java.util.Map: boolean equals(java.lang.Object)>(r161);
if $z20 != 0 goto $r16 = new java.util.ArrayList;
"->"Block 92:
[preds: 90 ] [succs: 93 ]
$r16 = new java.util.ArrayList;
specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>(r157);
r162 = $r16;
staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r162);
i18 = 0;
";
    "Block 92:
[preds: 90 ] [succs: 93 ]
$r16 = new java.util.ArrayList;
specialinvoke $r16.<java.util.ArrayList: void <init>(java.util.Collection)>(r157);
r162 = $r16;
staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r162);
i18 = 0;
"->"Block 93:
[preds: 92 96 ] [succs: 94 97 ]
if i18 >= s1 goto $r17 = new java.util.ArrayList;
";
    "Block 93:
[preds: 92 96 ] [succs: 94 97 ]
if i18 >= s1 goto $r17 = new java.util.ArrayList;
"->"Block 94:
[preds: 93 ] [succs: 95 96 ]
$r65 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i18);
r163 = (java.lang.Integer) $r65;
$r66 = interfaceinvoke r161.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163);
$z29 = virtualinvoke $r66.<java.lang.Object: boolean equals(java.lang.Object)>(r163);
if $z29 != 0 goto i18 = i18 + 1;
";
    "Block 93:
[preds: 92 96 ] [succs: 94 97 ]
if i18 >= s1 goto $r17 = new java.util.ArrayList;
"->"Block 97:
[preds: 93 ] [succs: 98 99 ]
$r17 = new java.util.ArrayList;
$r18 = interfaceinvoke r161.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r18);
$z21 = virtualinvoke $r17.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z21 != 0 goto $r19 = new java.util.LinkedHashMap;
";
    "Block 94:
[preds: 93 ] [succs: 95 96 ]
$r65 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i18);
r163 = (java.lang.Integer) $r65;
$r66 = interfaceinvoke r161.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163);
$z29 = virtualinvoke $r66.<java.lang.Object: boolean equals(java.lang.Object)>(r163);
if $z29 != 0 goto i18 = i18 + 1;
"->"Block 95:
[preds: 94 ] [succs: ]
$r67 = new java.lang.Exception;
$r68 = new java.lang.StringBuilder;
specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();
$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \");
$r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);
$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r72 = interfaceinvoke r156.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163);
$r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);
$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r163);
$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r67.<java.lang.Exception: void <init>(java.lang.String)>($r76);
throw $r67;
";
    "Block 94:
[preds: 93 ] [succs: 95 96 ]
$r65 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i18);
r163 = (java.lang.Integer) $r65;
$r66 = interfaceinvoke r161.<java.util.Map: java.lang.Object get(java.lang.Object)>(r163);
$z29 = virtualinvoke $r66.<java.lang.Object: boolean equals(java.lang.Object)>(r163);
if $z29 != 0 goto i18 = i18 + 1;
"->"Block 96:
[preds: 94 ] [succs: 93 ]
i18 = i18 + 1;
goto [?= (branch)];
";
    "Block 96:
[preds: 94 ] [succs: 93 ]
i18 = i18 + 1;
goto [?= (branch)];
"->"Block 93:
[preds: 92 96 ] [succs: 94 97 ]
if i18 >= s1 goto $r17 = new java.util.ArrayList;
";
    "Block 97:
[preds: 93 ] [succs: 98 99 ]
$r17 = new java.util.ArrayList;
$r18 = interfaceinvoke r161.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r18);
$z21 = virtualinvoke $r17.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z21 != 0 goto $r19 = new java.util.LinkedHashMap;
"->"Block 98:
[preds: 97 ] [succs: ]
$r64 = new java.lang.Exception;
specialinvoke $r64.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: altered by read.\");
throw $r64;
";
    "Block 97:
[preds: 93 ] [succs: 98 99 ]
$r17 = new java.util.ArrayList;
$r18 = interfaceinvoke r161.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r17.<java.util.ArrayList: void <init>(java.util.Collection)>($r18);
$z21 = virtualinvoke $r17.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z21 != 0 goto $r19 = new java.util.LinkedHashMap;
"->"Block 99:
[preds: 97 ] [succs: 100 ]
$r19 = new java.util.LinkedHashMap;
specialinvoke $r19.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(1000, 0.75F, 1);
r164 = $r19;
i19 = 0;
";
    "Block 99:
[preds: 97 ] [succs: 100 ]
$r19 = new java.util.LinkedHashMap;
specialinvoke $r19.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(1000, 0.75F, 1);
r164 = $r19;
i19 = 0;
"->"Block 100:
[preds: 99 101 ] [succs: 101 102 ]
if i19 >= s1 goto $r20 = new java.util.ArrayList;
";
    "Block 100:
[preds: 99 101 ] [succs: 101 102 ]
if i19 >= s1 goto $r20 = new java.util.ArrayList;
"->"Block 101:
[preds: 100 ] [succs: 100 ]
$r62 = new java.lang.Integer;
specialinvoke $r62.<java.lang.Integer: void <init>(int)>(i19);
r165 = $r62;
interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r165, r165);
i19 = i19 + 1;
goto [?= (branch)];
";
    "Block 100:
[preds: 99 101 ] [succs: 101 102 ]
if i19 >= s1 goto $r20 = new java.util.ArrayList;
"->"Block 102:
[preds: 100 ] [succs: 103 104 ]
$r20 = new java.util.ArrayList;
$r21 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r21);
$z22 = virtualinvoke $r20.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z22 != 0 goto i20 = 0;
";
    "Block 101:
[preds: 100 ] [succs: 100 ]
$r62 = new java.lang.Integer;
specialinvoke $r62.<java.lang.Integer: void <init>(int)>(i19);
r165 = $r62;
interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r165, r165);
i19 = i19 + 1;
goto [?= (branch)];
"->"Block 100:
[preds: 99 101 ] [succs: 101 102 ]
if i19 >= s1 goto $r20 = new java.util.ArrayList;
";
    "Block 102:
[preds: 100 ] [succs: 103 104 ]
$r20 = new java.util.ArrayList;
$r21 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r21);
$z22 = virtualinvoke $r20.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z22 != 0 goto i20 = 0;
"->"Block 103:
[preds: 102 ] [succs: ]
$r61 = new java.lang.Exception;
specialinvoke $r61.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not properly preserved.\");
throw $r61;
";
    "Block 102:
[preds: 100 ] [succs: 103 104 ]
$r20 = new java.util.ArrayList;
$r21 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r21);
$z22 = virtualinvoke $r20.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z22 != 0 goto i20 = 0;
"->"Block 104:
[preds: 102 ] [succs: 105 ]
i20 = 0;
";
    "Block 104:
[preds: 102 ] [succs: 105 ]
i20 = 0;
"->"Block 105:
[preds: 104 108 ] [succs: 106 109 ]
if i20 >= s1 goto $r22 = new java.util.ArrayList;
";
    "Block 105:
[preds: 104 108 ] [succs: 106 109 ]
if i20 >= s1 goto $r22 = new java.util.ArrayList;
"->"Block 106:
[preds: 105 ] [succs: 107 108 ]
$r49 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i20);
r166 = (java.lang.Integer) $r49;
$r50 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166);
$z28 = virtualinvoke $r50.<java.lang.Object: boolean equals(java.lang.Object)>(r166);
if $z28 != 0 goto i20 = i20 + 1;
";
    "Block 105:
[preds: 104 108 ] [succs: 106 109 ]
if i20 >= s1 goto $r22 = new java.util.ArrayList;
"->"Block 109:
[preds: 105 ] [succs: 110 111 ]
$r22 = new java.util.ArrayList;
$r23 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23);
$z23 = virtualinvoke $r22.<java.util.ArrayList: boolean equals(java.lang.Object)>(r162);
if $z23 != 0 goto i21 = 0;
";
    "Block 106:
[preds: 105 ] [succs: 107 108 ]
$r49 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i20);
r166 = (java.lang.Integer) $r49;
$r50 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166);
$z28 = virtualinvoke $r50.<java.lang.Object: boolean equals(java.lang.Object)>(r166);
if $z28 != 0 goto i20 = i20 + 1;
"->"Block 107:
[preds: 106 ] [succs: ]
$r51 = new java.lang.Exception;
$r52 = new java.lang.StringBuilder;
specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();
$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wrong value: \");
$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);
$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r56 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166);
$r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);
$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r166);
$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r51.<java.lang.Exception: void <init>(java.lang.String)>($r60);
throw $r51;
";
    "Block 106:
[preds: 105 ] [succs: 107 108 ]
$r49 = interfaceinvoke r162.<java.util.List: java.lang.Object get(int)>(i20);
r166 = (java.lang.Integer) $r49;
$r50 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r166);
$z28 = virtualinvoke $r50.<java.lang.Object: boolean equals(java.lang.Object)>(r166);
if $z28 != 0 goto i20 = i20 + 1;
"->"Block 108:
[preds: 106 ] [succs: 105 ]
i20 = i20 + 1;
goto [?= (branch)];
";
    "Block 108:
[preds: 106 ] [succs: 105 ]
i20 = i20 + 1;
goto [?= (branch)];
"->"Block 105:
[preds: 104 108 ] [succs: 106 109 ]
if i20 >= s1 goto $r22 = new java.util.ArrayList;
";
    "Block 109:
[preds: 105 ] [succs: 110 111 ]
$r22 = new java.util.ArrayList;
$r23 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23);
$z23 = virtualinvoke $r22.<java.util.ArrayList: boolean equals(java.lang.Object)>(r162);
if $z23 != 0 goto i21 = 0;
"->"Block 110:
[preds: 109 ] [succs: ]
$r48 = new java.lang.Exception;
specialinvoke $r48.<java.lang.Exception: void <init>(java.lang.String)>(\"Insert order not properly altered by read.\");
throw $r48;
";
    "Block 109:
[preds: 105 ] [succs: 110 111 ]
$r22 = new java.util.ArrayList;
$r23 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r22.<java.util.ArrayList: void <init>(java.util.Collection)>($r23);
$z23 = virtualinvoke $r22.<java.util.ArrayList: boolean equals(java.lang.Object)>(r162);
if $z23 != 0 goto i21 = 0;
"->"Block 111:
[preds: 109 ] [succs: 112 ]
i21 = 0;
";
    "Block 111:
[preds: 109 ] [succs: 112 ]
i21 = 0;
"->"Block 112:
[preds: 111 113 ] [succs: 113 114 ]
if i21 >= s1 goto $r24 = new java.util.ArrayList;
";
    "Block 112:
[preds: 111 113 ] [succs: 113 114 ]
if i21 >= s1 goto $r24 = new java.util.ArrayList;
"->"Block 113:
[preds: 112 ] [succs: 112 ]
$r46 = new java.lang.Integer;
specialinvoke $r46.<java.lang.Integer: void <init>(int)>(i21);
r167 = $r46;
interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r167, r167);
i21 = i21 + 1;
goto [?= (branch)];
";
    "Block 112:
[preds: 111 113 ] [succs: 113 114 ]
if i21 >= s1 goto $r24 = new java.util.ArrayList;
"->"Block 114:
[preds: 112 ] [succs: 115 116 ]
$r24 = new java.util.ArrayList;
$r25 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r25);
$z24 = virtualinvoke $r24.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z24 != 0 goto $r26 = (java.util.LinkedHashMap) r164;
";
    "Block 113:
[preds: 112 ] [succs: 112 ]
$r46 = new java.lang.Integer;
specialinvoke $r46.<java.lang.Integer: void <init>(int)>(i21);
r167 = $r46;
interfaceinvoke r164.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r167, r167);
i21 = i21 + 1;
goto [?= (branch)];
"->"Block 112:
[preds: 111 113 ] [succs: 113 114 ]
if i21 >= s1 goto $r24 = new java.util.ArrayList;
";
    "Block 114:
[preds: 112 ] [succs: 115 116 ]
$r24 = new java.util.ArrayList;
$r25 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r25);
$z24 = virtualinvoke $r24.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z24 != 0 goto $r26 = (java.util.LinkedHashMap) r164;
"->"Block 115:
[preds: 114 ] [succs: ]
$r45 = new java.lang.Exception;
specialinvoke $r45.<java.lang.Exception: void <init>(java.lang.String)>(\"Insertion order not altered by reinsert.\");
throw $r45;
";
    "Block 114:
[preds: 112 ] [succs: 115 116 ]
$r24 = new java.util.ArrayList;
$r25 = interfaceinvoke r164.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r24.<java.util.ArrayList: void <init>(java.util.Collection)>($r25);
$z24 = virtualinvoke $r24.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z24 != 0 goto $r26 = (java.util.LinkedHashMap) r164;
"->"Block 116:
[preds: 114 ] [succs: 117 118 ]
$r26 = (java.util.LinkedHashMap) r164;
$r27 = virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object clone()>();
r168 = (java.util.Map) $r27;
$z25 = interfaceinvoke r164.<java.util.Map: boolean equals(java.lang.Object)>(r168);
if $z25 != 0 goto i22 = 0;
";
    "Block 116:
[preds: 114 ] [succs: 117 118 ]
$r26 = (java.util.LinkedHashMap) r164;
$r27 = virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object clone()>();
r168 = (java.util.Map) $r27;
$z25 = interfaceinvoke r164.<java.util.Map: boolean equals(java.lang.Object)>(r168);
if $z25 != 0 goto i22 = 0;
"->"Block 117:
[preds: 116 ] [succs: ]
$r44 = new java.lang.Exception;
specialinvoke $r44.<java.lang.Exception: void <init>(java.lang.String)>(\"Access-order Map != clone.\");
throw $r44;
";
    "Block 116:
[preds: 114 ] [succs: 117 118 ]
$r26 = (java.util.LinkedHashMap) r164;
$r27 = virtualinvoke $r26.<java.util.LinkedHashMap: java.lang.Object clone()>();
r168 = (java.util.Map) $r27;
$z25 = interfaceinvoke r164.<java.util.Map: boolean equals(java.lang.Object)>(r168);
if $z25 != 0 goto i22 = 0;
"->"Block 118:
[preds: 116 ] [succs: 119 ]
i22 = 0;
";
    "Block 118:
[preds: 116 ] [succs: 119 ]
i22 = 0;
"->"Block 119:
[preds: 118 122 ] [succs: 120 123 ]
if i22 >= s1 goto $r28 = new java.util.ArrayList;
";
    "Block 119:
[preds: 118 122 ] [succs: 120 123 ]
if i22 >= s1 goto $r28 = new java.util.ArrayList;
"->"Block 120:
[preds: 119 ] [succs: 121 122 ]
$r32 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i22);
r169 = (java.lang.Integer) $r32;
$r33 = interfaceinvoke r168.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169);
$z27 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>(r169);
if $z27 != 0 goto i22 = i22 + 1;
";
    "Block 119:
[preds: 118 122 ] [succs: 120 123 ]
if i22 >= s1 goto $r28 = new java.util.ArrayList;
"->"Block 123:
[preds: 119 ] [succs: 124 125 ]
$r28 = new java.util.ArrayList;
$r29 = interfaceinvoke r168.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r29);
$z26 = virtualinvoke $r28.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z26 != 0 goto $r30 = <java.lang.System: java.io.PrintStream err>;
";
    "Block 120:
[preds: 119 ] [succs: 121 122 ]
$r32 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i22);
r169 = (java.lang.Integer) $r32;
$r33 = interfaceinvoke r168.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169);
$z27 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>(r169);
if $z27 != 0 goto i22 = i22 + 1;
"->"Block 121:
[preds: 120 ] [succs: ]
$r34 = new java.lang.Exception;
$r35 = new java.lang.StringBuilder;
specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();
$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Clone: Wrong val: \");
$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22);
$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r39 = interfaceinvoke r164.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169);
$r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);
$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r169);
$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r34.<java.lang.Exception: void <init>(java.lang.String)>($r43);
throw $r34;
";
    "Block 120:
[preds: 119 ] [succs: 121 122 ]
$r32 = interfaceinvoke r157.<java.util.List: java.lang.Object get(int)>(i22);
r169 = (java.lang.Integer) $r32;
$r33 = interfaceinvoke r168.<java.util.Map: java.lang.Object get(java.lang.Object)>(r169);
$z27 = virtualinvoke $r33.<java.lang.Object: boolean equals(java.lang.Object)>(r169);
if $z27 != 0 goto i22 = i22 + 1;
"->"Block 122:
[preds: 120 ] [succs: 119 ]
i22 = i22 + 1;
goto [?= (branch)];
";
    "Block 122:
[preds: 120 ] [succs: 119 ]
i22 = i22 + 1;
goto [?= (branch)];
"->"Block 119:
[preds: 118 122 ] [succs: 120 123 ]
if i22 >= s1 goto $r28 = new java.util.ArrayList;
";
    "Block 123:
[preds: 119 ] [succs: 124 125 ]
$r28 = new java.util.ArrayList;
$r29 = interfaceinvoke r168.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r29);
$z26 = virtualinvoke $r28.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z26 != 0 goto $r30 = <java.lang.System: java.io.PrintStream err>;
"->"Block 124:
[preds: 123 ] [succs: ]
$r31 = new java.lang.Exception;
specialinvoke $r31.<java.lang.Exception: void <init>(java.lang.String)>(\"Clone: order not properly altered by read.\");
throw $r31;
";
    "Block 123:
[preds: 119 ] [succs: 124 125 ]
$r28 = new java.util.ArrayList;
$r29 = interfaceinvoke r168.<java.util.Map: java.util.Set keySet()>();
specialinvoke $r28.<java.util.ArrayList: void <init>(java.util.Collection)>($r29);
$z26 = virtualinvoke $r28.<java.util.ArrayList: boolean equals(java.lang.Object)>(r157);
if $z26 != 0 goto $r30 = <java.lang.System: java.io.PrintStream err>;
"->"Block 125:
[preds: 123 ] [succs: ]
$r30 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>(\"Success.\");
return;
";
}
