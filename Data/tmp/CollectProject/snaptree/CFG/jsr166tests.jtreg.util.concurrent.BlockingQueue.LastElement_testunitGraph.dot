digraph "unitGraph" {
    "r0 := @this: jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement"
    "r11 := @parameter0: java.lang.String[]"
    "$r1 = new java.util.concurrent.LinkedBlockingQueue"
    "specialinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: void <init>()>()"
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r1)"
    "$r2 = new java.util.concurrent.LinkedBlockingDeque"
    "specialinvoke $r2.<java.util.concurrent.LinkedBlockingDeque: void <init>()>()"
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r2)"
    "$r3 = new java.util.concurrent.ArrayBlockingQueue"
    "specialinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(10, 1)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r3)"
    "$r4 = new java.util.concurrent.ArrayBlockingQueue"
    "specialinvoke $r4.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(10, 0)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r4)"
    "$r6 = <java.lang.System: java.io.PrintStream out>"
    "$r5 = newarray (java.lang.Object)[2]"
    "$i0 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int passed>"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r5[0] = $r7"
    "$i1 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int failed>"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$r5[1] = $r8"
    "virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r5)"
    "$i2 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int failed>"
    "if $i2 <= 0 goto return"
    "$r10 = new java.lang.Exception"
    "specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")"
    "throw $r10"
    "return"
    "r0 := @this: jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement"->"r11 := @parameter0: java.lang.String[]";
    "r11 := @parameter0: java.lang.String[]"->"$r1 = new java.util.concurrent.LinkedBlockingQueue";
    "$r1 = new java.util.concurrent.LinkedBlockingQueue"->"specialinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: void <init>()>()";
    "specialinvoke $r1.<java.util.concurrent.LinkedBlockingQueue: void <init>()>()"->"virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r1)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r1)"->"$r2 = new java.util.concurrent.LinkedBlockingDeque";
    "$r2 = new java.util.concurrent.LinkedBlockingDeque"->"specialinvoke $r2.<java.util.concurrent.LinkedBlockingDeque: void <init>()>()";
    "specialinvoke $r2.<java.util.concurrent.LinkedBlockingDeque: void <init>()>()"->"virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r2)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r2)"->"$r3 = new java.util.concurrent.ArrayBlockingQueue";
    "$r3 = new java.util.concurrent.ArrayBlockingQueue"->"specialinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(10, 1)";
    "specialinvoke $r3.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(10, 1)"->"virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r3)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r3)"->"$r4 = new java.util.concurrent.ArrayBlockingQueue";
    "$r4 = new java.util.concurrent.ArrayBlockingQueue"->"specialinvoke $r4.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(10, 0)";
    "specialinvoke $r4.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(10, 0)"->"virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r4)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: void testQueue(java.util.concurrent.BlockingQueue)>($r4)"->"$r6 = <java.lang.System: java.io.PrintStream out>";
    "$r6 = <java.lang.System: java.io.PrintStream out>"->"$r5 = newarray (java.lang.Object)[2]";
    "$r5 = newarray (java.lang.Object)[2]"->"$i0 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int passed>";
    "$i0 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int passed>"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r5[0] = $r7";
    "$r5[0] = $r7"->"$i1 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int failed>";
    "$i1 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int failed>"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$r5[1] = $r8";
    "$r5[1] = $r8"->"virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r5)";
    "virtualinvoke $r6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r5)"->"$i2 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int failed>";
    "$i2 = r0.<jsr166tests.jtreg.util.concurrent.BlockingQueue.LastElement: int failed>"->"if $i2 <= 0 goto return";
    "if $i2 <= 0 goto return"->"$r10 = new java.lang.Exception";
    "if $i2 <= 0 goto return"->"return";
    "$r10 = new java.lang.Exception"->"specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")";
    "specialinvoke $r10.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")"->"throw $r10";
}
