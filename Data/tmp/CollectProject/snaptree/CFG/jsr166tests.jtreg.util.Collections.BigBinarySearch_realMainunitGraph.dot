digraph "unitGraph" {
    "r19 := @parameter0: java.lang.String[]"
    "i0 = 1073741871"
    "$r0 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"binarySearch(List<Integer>, Integer)\")"
    "$r1 = new jsr166tests.jtreg.util.Collections.BigBinarySearch$SparseIntegerList"
    "specialinvoke $r1.<jsr166tests.jtreg.util.Collections.BigBinarySearch$SparseIntegerList: void <init>()>()"
    "r2 = $r1"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-44)"
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r3)"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-43)"
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1, $r5)"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(43)"
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1073741869, $r7)"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(44)"
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1073741870, $r9)"
    "$r11 = newarray (int)[4]"
    "$r11[0] = 0"
    "$r11[1] = 1"
    "$r11[2] = 1073741869"
    "$r11[3] = 1073741870"
    "r12 = $r11"
    "r13 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>()"
    "r14 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder(java.util.Comparator)>(r13)"
    "r20 = r12"
    "i3 = lengthof r20"
    "i4 = 0"
    "if i4 >= i3 goto r21 = r12"
    "i5 = r20[i4]"
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int)>(r2, i5)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i5, null)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i5, r14)"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "r21 = r12"
    "i6 = lengthof r21"
    "i7 = 0"
    "if i7 >= i6 goto r22 = r12"
    "i8 = r21[i7]"
    "$r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i8)"
    "$r16 = (java.lang.Integer) $r15"
    "$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()"
    "$i2 = neg $i1"
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i8, $r17)"
    "i7 = i7 + 1"
    "r22 = r12"
    "i9 = lengthof r22"
    "i10 = 0"
    "if i10 >= i9 goto return"
    "i11 = r22[i10]"
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i11, r13)"
    "i10 = i10 + 1"
    "return"
    "r19 := @parameter0: java.lang.String[]"->"i0 = 1073741871";
    "i0 = 1073741871"->"$r0 = <java.lang.System: java.io.PrintStream out>";
    "$r0 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"binarySearch(List<Integer>, Integer)\")";
    "virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>(\"binarySearch(List<Integer>, Integer)\")"->"$r1 = new jsr166tests.jtreg.util.Collections.BigBinarySearch$SparseIntegerList";
    "$r1 = new jsr166tests.jtreg.util.Collections.BigBinarySearch$SparseIntegerList"->"specialinvoke $r1.<jsr166tests.jtreg.util.Collections.BigBinarySearch$SparseIntegerList: void <init>()>()";
    "specialinvoke $r1.<jsr166tests.jtreg.util.Collections.BigBinarySearch$SparseIntegerList: void <init>()>()"->"r2 = $r1";
    "r2 = $r1"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-44)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-44)"->"interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r3)";
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r3)"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-43)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-43)"->"interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1, $r5)";
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1, $r5)"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(43)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(43)"->"interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1073741869, $r7)";
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1073741869, $r7)"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(44)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(44)"->"interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1073741870, $r9)";
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(1073741870, $r9)"->"$r11 = newarray (int)[4]";
    "$r11 = newarray (int)[4]"->"$r11[0] = 0";
    "$r11[0] = 0"->"$r11[1] = 1";
    "$r11[1] = 1"->"$r11[2] = 1073741869";
    "$r11[2] = 1073741869"->"$r11[3] = 1073741870";
    "$r11[3] = 1073741870"->"r12 = $r11";
    "r12 = $r11"->"r13 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>()";
    "r13 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder()>()"->"r14 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder(java.util.Comparator)>(r13)";
    "r14 = staticinvoke <java.util.Collections: java.util.Comparator reverseOrder(java.util.Comparator)>(r13)"->"r20 = r12";
    "r20 = r12"->"i3 = lengthof r20";
    "i3 = lengthof r20"->"i4 = 0";
    "i4 = 0"->"if i4 >= i3 goto r21 = r12";
    "if i4 >= i3 goto r21 = r12"->"i5 = r20[i4]";
    "if i4 >= i3 goto r21 = r12"->"r21 = r12";
    "i5 = r20[i4]"->"staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int)>(r2, i5)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int)>(r2, i5)"->"staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i5, null)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i5, null)"->"staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i5, r14)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i5, r14)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i3 goto r21 = r12";
    "r21 = r12"->"i6 = lengthof r21";
    "i6 = lengthof r21"->"i7 = 0";
    "i7 = 0"->"if i7 >= i6 goto r22 = r12";
    "if i7 >= i6 goto r22 = r12"->"i8 = r21[i7]";
    "if i7 >= i6 goto r22 = r12"->"r22 = r12";
    "i8 = r21[i7]"->"$r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i8)";
    "$r15 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i8)"->"$r16 = (java.lang.Integer) $r15";
    "$r16 = (java.lang.Integer) $r15"->"$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()";
    "$i1 = virtualinvoke $r16.<java.lang.Integer: int intValue()>()"->"$i2 = neg $i1";
    "$i2 = neg $i1"->"$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "$r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i8, $r17)";
    "interfaceinvoke r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i8, $r17)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i6 goto r22 = r12";
    "r22 = r12"->"i9 = lengthof r22";
    "i9 = lengthof r22"->"i10 = 0";
    "i10 = 0"->"if i10 >= i9 goto return";
    "if i10 >= i9 goto return"->"i11 = r22[i10]";
    "if i10 >= i9 goto return"->"return";
    "i11 = r22[i10]"->"staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i11, r13)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.BigBinarySearch: void checkBinarySearch(java.util.List,int,java.util.Comparator)>(r2, i11, r13)"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 >= i9 goto return";
}
