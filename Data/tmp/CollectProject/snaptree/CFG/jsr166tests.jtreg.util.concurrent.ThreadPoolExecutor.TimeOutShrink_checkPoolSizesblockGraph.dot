digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r0 := @parameter0: java.util.concurrent.ThreadPoolExecutor;
i1 := @parameter1: int;
i3 := @parameter2: int;
i5 := @parameter3: int;
$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>();
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.TimeOutShrink: void equal(java.lang.Object,java.lang.Object)>($r1, $r2);
$i2 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()>();
$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.TimeOutShrink: void equal(java.lang.Object,java.lang.Object)>($r3, $r4);
$i4 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getMaximumPoolSize()>();
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.TimeOutShrink: void equal(java.lang.Object,java.lang.Object)>($r5, $r6);
return;
"
}
