digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r32 := @parameter0: java.lang.String[];
b0 = 100;
b1 = 100;
i13 = 0;
"
    "Block 1:
[preds: 0 33 ] [succs: 2 34 ]
if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
r33 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
r34 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
i14 = 0;
"
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>();
"
    "Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r29 = new java.lang.Integer;
$r30 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Random rnd>;
$i12 = virtualinvoke $r30.<java.util.Random: int nextInt()>();
specialinvoke $r29.<java.lang.Integer: void <init>(int)>($i12);
r35 = $r29;
$z20 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r35);
if $z20 != 0 goto $r29 = new java.lang.Integer;
"
    "Block 5:
[preds: 4 ] [succs: 3 ]
interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r34);
r34 = r35;
i14 = i14 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 3 ] [succs: 7 8 ]
$i5 = interfaceinvoke r33.<java.util.Map: int size()>();
if $i5 == b1 goto $r13 = new java.util.HashMap;
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Size not as expected.\");
"
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
$r13 = new java.util.HashMap;
specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>(r33);
r36 = $r13;
$i6 = virtualinvoke r36.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r33.<java.util.Map: int hashCode()>();
if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
"
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r25 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$i8 = interfaceinvoke $r25.<java.util.Set: int hashCode()>();
$r26 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$i9 = interfaceinvoke $r26.<java.util.Set: int hashCode()>();
if $i8 != $i9 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
"
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r27 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$i10 = interfaceinvoke $r27.<java.util.Set: int hashCode()>();
$r28 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$i11 = interfaceinvoke $r28.<java.util.Set: int hashCode()>();
if $i10 == $i11 goto $z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
"
    "Block 11:
[preds: 8 9 10 ] [succs: 12 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
"
    "Block 12:
[preds: 10 11 ] [succs: 13 18 ]
$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"
    "Block 13:
[preds: 12 ] [succs: 14 18 ]
$r17 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$r18 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$z15 = interfaceinvoke $r17.<java.util.Set: boolean equals(java.lang.Object)>($r18);
if $z15 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"
    "Block 14:
[preds: 13 ] [succs: 15 18 ]
$r19 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$r20 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$z16 = interfaceinvoke $r19.<java.util.Set: boolean equals(java.lang.Object)>($r20);
if $z16 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"
    "Block 15:
[preds: 14 ] [succs: 16 18 ]
$z17 = interfaceinvoke r33.<java.util.Map: boolean equals(java.lang.Object)>(r36);
if $z17 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r21 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$r22 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$z18 = interfaceinvoke $r21.<java.util.Set: boolean equals(java.lang.Object)>($r22);
if $z18 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r23 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$r24 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$z19 = interfaceinvoke $r23.<java.util.Set: boolean equals(java.lang.Object)>($r24);
if $z19 != 0 goto r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"
    "Block 18:
[preds: 12 13 14 15 16 17 ] [succs: 19 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"
    "Block 19:
[preds: 17 18 ] [succs: 20 21 ]
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r37.<java.util.Map: void putAll(java.util.Map)>(r33);
$r38 = interfaceinvoke r37.<java.util.Map: java.util.Collection values()>();
$r39 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r38.<java.util.Collection: boolean removeAll(java.util.Collection)>($r39);
$i15 = interfaceinvoke r37.<java.util.Map: int size()>();
if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
"
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
$r16 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$z14 = interfaceinvoke r37.<java.util.Map: boolean containsValue(java.lang.Object)>($r16);
if $z14 != 0 goto i16 = 0;
"
    "Block 21:
[preds: 19 20 ] [succs: 22 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
"
    "Block 22:
[preds: 20 21 ] [succs: 23 ]
i16 = 0;
"
    "Block 23:
[preds: 22 28 ] [succs: 24 29 ]
$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
"
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
$z13 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r34);
if $z13 != 0 goto r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
"
    "Block 25:
[preds: 24 ] [succs: 26 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list doesn\'t contain a link.\");
"
    "Block 26:
[preds: 24 25 ] [succs: 27 28 ]
r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
"
    "Block 27:
[preds: 26 ] [succs: 28 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Could not retrieve a link.\");
"
    "Block 28:
[preds: 26 27 ] [succs: 23 ]
interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
r34 = r14;
i16 = i16 + 1;
goto [?= $r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>];
"
    "Block 29:
[preds: 23 ] [succs: 30 31 ]
$z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
if $z12 != 0 goto (branch);
"
    "Block 30:
[preds: 29 ] [succs: 31 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Map nonempty after removing all links.\");
"
    "Block 31:
[preds: 29 30 ] [succs: 32 33 ]
if i16 == b1 goto i13 = i13 + 1;
"
    "Block 32:
[preds: 31 ] [succs: 33 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list size not as expected.\");
"
    "Block 33:
[preds: 31 32 ] [succs: 1 ]
i13 = i13 + 1;
goto [?= (branch)];
"
    "Block 34:
[preds: 1 ] [succs: 35 ]
r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
i17 = 0;
"
    "Block 35:
[preds: 34 38 ] [succs: 36 39 ]
if i17 >= b1 goto i18 = 0;
"
    "Block 36:
[preds: 35 ] [succs: 37 38 ]
$r10 = new java.lang.Integer;
specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i17);
$r11 = new java.lang.Integer;
$i4 = 2 * i17;
specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i4);
$r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);
if $r12 == null goto i17 = i17 + 1;
"
    "Block 37:
[preds: 36 ] [succs: 38 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a non-null value erroenously.\");
"
    "Block 38:
[preds: 36 37 ] [succs: 35 ]
i17 = i17 + 1;
goto [?= (branch)];
"
    "Block 39:
[preds: 35 ] [succs: 40 ]
i18 = 0;
"
    "Block 40:
[preds: 39 46 ] [succs: 41 47 ]
$i2 = 2 * b1;
if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
"
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
$r5 = new java.lang.Integer;
specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i18);
$z10 = interfaceinvoke r41.<java.util.Map: boolean containsValue(java.lang.Object)>($r5);
$i3 = i18 % 2;
if $i3 != 0 goto $z22 = 0;
"
    "Block 42:
[preds: 41 ] [succs: 44 ]
$z22 = 1;
goto [?= (branch)];
"
    "Block 43:
[preds: 41 ] [succs: 44 ]
$z22 = 0;
"
    "Block 44:
[preds: 42 43 ] [succs: 45 46 ]
if $z10 == $z22 goto i18 = i18 + 1;
"
    "Block 45:
[preds: 44 ] [succs: 46 ]
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>($r9);
"
    "Block 46:
[preds: 44 45 ] [succs: 40 ]
i18 = i18 + 1;
goto [?= $i2 = 2 * b1];
"
    "Block 47:
[preds: 40 ] [succs: 48 49 ]
$r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$r0 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$r2 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0);
if $r2 != null goto r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"
    "Block 48:
[preds: 47 ] [succs: 49 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a null value erroenously.\");
"
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
$z0 = interfaceinvoke r41.<java.util.Map: boolean equals(java.lang.Object)>(r42);
if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
"
    "Block 50:
[preds: 49 ] [succs: 51 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (1)\");
"
    "Block 51:
[preds: 49 50 ] [succs: 52 53 ]
$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
"
    "Block 52:
[preds: 51 ] [succs: 53 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (2)\");
"
    "Block 53:
[preds: 51 52 ] [succs: 54 55 ]
r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r44 = interfaceinvoke r42.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r43.<java.util.Set: boolean equals(java.lang.Object)>(r44);
if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
"
    "Block 54:
[preds: 53 ] [succs: 55 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (3)\");
"
    "Block 55:
[preds: 53 54 ] [succs: 56 57 ]
$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
"
    "Block 56:
[preds: 55 ] [succs: 57 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (4)\");
"
    "Block 57:
[preds: 55 56 ] [succs: 58 59 ]
$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
"
    "Block 58:
[preds: 57 ] [succs: 59 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Original doesn\'t contain clone!\");
"
    "Block 59:
[preds: 57 58 ] [succs: 60 61 ]
$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
"
    "Block 60:
[preds: 59 ] [succs: 61 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone doesn\'t contain original!\");
"
    "Block 61:
[preds: 59 60 ] [succs: 62 63 ]
interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
$z7 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
"
    "Block 62:
[preds: 61 ] [succs: 63 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"entrySet().removeAll failed.\");
"
    "Block 63:
[preds: 61 62 ] [succs: 64 65 ]
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
interfaceinvoke r42.<java.util.Map: void clear()>();
$z8 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
"
    "Block 64:
[preds: 63 ] [succs: 65 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"clear failed.\");
"
    "Block 65:
[preds: 63 64 ] [succs: 66 ]
$r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r45 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();
if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
"
    "Block 67:
[preds: 66 ] [succs: 66 ]
interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r45.<java.util.Iterator: void remove()>();
goto [?= $z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 68:
[preds: 66 ] [succs: 69 70 ]
$z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
if $z9 != 0 goto return;
"
    "Block 69:
[preds: 68 ] [succs: 70 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Iterator.remove() failed\");
"
    "Block 70:
[preds: 68 69 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r32 := @parameter0: java.lang.String[];
b0 = 100;
b1 = 100;
i13 = 0;
"->"Block 1:
[preds: 0 33 ] [succs: 2 34 ]
if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
";
    "Block 1:
[preds: 0 33 ] [succs: 2 34 ]
if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"->"Block 2:
[preds: 1 ] [succs: 3 ]
r33 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
r34 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
i14 = 0;
";
    "Block 1:
[preds: 0 33 ] [succs: 2 34 ]
if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"->"Block 34:
[preds: 1 ] [succs: 35 ]
r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
i17 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
r33 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
r34 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
i14 = 0;
"->"Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>();
";
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>();
"->"Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r29 = new java.lang.Integer;
$r30 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Random rnd>;
$i12 = virtualinvoke $r30.<java.util.Random: int nextInt()>();
specialinvoke $r29.<java.lang.Integer: void <init>(int)>($i12);
r35 = $r29;
$z20 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r35);
if $z20 != 0 goto $r29 = new java.lang.Integer;
";
    "Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>();
"->"Block 6:
[preds: 3 ] [succs: 7 8 ]
$i5 = interfaceinvoke r33.<java.util.Map: int size()>();
if $i5 == b1 goto $r13 = new java.util.HashMap;
";
    "Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r29 = new java.lang.Integer;
$r30 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Random rnd>;
$i12 = virtualinvoke $r30.<java.util.Random: int nextInt()>();
specialinvoke $r29.<java.lang.Integer: void <init>(int)>($i12);
r35 = $r29;
$z20 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r35);
if $z20 != 0 goto $r29 = new java.lang.Integer;
"->"Block 5:
[preds: 4 ] [succs: 3 ]
interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r34);
r34 = r35;
i14 = i14 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r29 = new java.lang.Integer;
$r30 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Random rnd>;
$i12 = virtualinvoke $r30.<java.util.Random: int nextInt()>();
specialinvoke $r29.<java.lang.Integer: void <init>(int)>($i12);
r35 = $r29;
$z20 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r35);
if $z20 != 0 goto $r29 = new java.lang.Integer;
"->"Block 4:
[preds: 3 4 ] [succs: 5 4 ]
$r29 = new java.lang.Integer;
$r30 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Random rnd>;
$i12 = virtualinvoke $r30.<java.util.Random: int nextInt()>();
specialinvoke $r29.<java.lang.Integer: void <init>(int)>($i12);
r35 = $r29;
$z20 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r35);
if $z20 != 0 goto $r29 = new java.lang.Integer;
";
    "Block 5:
[preds: 4 ] [succs: 3 ]
interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r34);
r34 = r35;
i14 = i14 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 5 ] [succs: 4 6 ]
if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>();
";
    "Block 6:
[preds: 3 ] [succs: 7 8 ]
$i5 = interfaceinvoke r33.<java.util.Map: int size()>();
if $i5 == b1 goto $r13 = new java.util.HashMap;
"->"Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Size not as expected.\");
";
    "Block 6:
[preds: 3 ] [succs: 7 8 ]
$i5 = interfaceinvoke r33.<java.util.Map: int size()>();
if $i5 == b1 goto $r13 = new java.util.HashMap;
"->"Block 8:
[preds: 6 7 ] [succs: 9 11 ]
$r13 = new java.util.HashMap;
specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>(r33);
r36 = $r13;
$i6 = virtualinvoke r36.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r33.<java.util.Map: int hashCode()>();
if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Size not as expected.\");
"->"Block 8:
[preds: 6 7 ] [succs: 9 11 ]
$r13 = new java.util.HashMap;
specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>(r33);
r36 = $r13;
$i6 = virtualinvoke r36.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r33.<java.util.Map: int hashCode()>();
if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
";
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
$r13 = new java.util.HashMap;
specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>(r33);
r36 = $r13;
$i6 = virtualinvoke r36.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r33.<java.util.Map: int hashCode()>();
if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
"->"Block 9:
[preds: 8 ] [succs: 10 11 ]
$r25 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$i8 = interfaceinvoke $r25.<java.util.Set: int hashCode()>();
$r26 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$i9 = interfaceinvoke $r26.<java.util.Set: int hashCode()>();
if $i8 != $i9 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
";
    "Block 8:
[preds: 6 7 ] [succs: 9 11 ]
$r13 = new java.util.HashMap;
specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>(r33);
r36 = $r13;
$i6 = virtualinvoke r36.<java.util.HashMap: int hashCode()>();
$i7 = interfaceinvoke r33.<java.util.Map: int hashCode()>();
if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
"->"Block 11:
[preds: 8 9 10 ] [succs: 12 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r25 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$i8 = interfaceinvoke $r25.<java.util.Set: int hashCode()>();
$r26 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$i9 = interfaceinvoke $r26.<java.util.Set: int hashCode()>();
if $i8 != $i9 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
"->"Block 10:
[preds: 9 ] [succs: 11 12 ]
$r27 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$i10 = interfaceinvoke $r27.<java.util.Set: int hashCode()>();
$r28 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$i11 = interfaceinvoke $r28.<java.util.Set: int hashCode()>();
if $i10 == $i11 goto $z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
";
    "Block 9:
[preds: 8 ] [succs: 10 11 ]
$r25 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$i8 = interfaceinvoke $r25.<java.util.Set: int hashCode()>();
$r26 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$i9 = interfaceinvoke $r26.<java.util.Set: int hashCode()>();
if $i8 != $i9 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
"->"Block 11:
[preds: 8 9 10 ] [succs: 12 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r27 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$i10 = interfaceinvoke $r27.<java.util.Set: int hashCode()>();
$r28 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$i11 = interfaceinvoke $r28.<java.util.Set: int hashCode()>();
if $i10 == $i11 goto $z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
"->"Block 11:
[preds: 8 9 10 ] [succs: 12 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
";
    "Block 10:
[preds: 9 ] [succs: 11 12 ]
$r27 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$i10 = interfaceinvoke $r27.<java.util.Set: int hashCode()>();
$r28 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$i11 = interfaceinvoke $r28.<java.util.Set: int hashCode()>();
if $i10 == $i11 goto $z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
"->"Block 12:
[preds: 10 11 ] [succs: 13 18 ]
$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 11:
[preds: 8 9 10 ] [succs: 12 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\");
"->"Block 12:
[preds: 10 11 ] [succs: 13 18 ]
$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 12:
[preds: 10 11 ] [succs: 13 18 ]
$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 13:
[preds: 12 ] [succs: 14 18 ]
$r17 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$r18 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$z15 = interfaceinvoke $r17.<java.util.Set: boolean equals(java.lang.Object)>($r18);
if $z15 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 12:
[preds: 10 11 ] [succs: 13 18 ]
$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33);
if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 18:
[preds: 12 13 14 15 16 17 ] [succs: 19 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 13:
[preds: 12 ] [succs: 14 18 ]
$r17 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$r18 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$z15 = interfaceinvoke $r17.<java.util.Set: boolean equals(java.lang.Object)>($r18);
if $z15 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 14:
[preds: 13 ] [succs: 15 18 ]
$r19 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$r20 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$z16 = interfaceinvoke $r19.<java.util.Set: boolean equals(java.lang.Object)>($r20);
if $z16 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 13:
[preds: 12 ] [succs: 14 18 ]
$r17 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$r18 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$z15 = interfaceinvoke $r17.<java.util.Set: boolean equals(java.lang.Object)>($r18);
if $z15 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 18:
[preds: 12 13 14 15 16 17 ] [succs: 19 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 14:
[preds: 13 ] [succs: 15 18 ]
$r19 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$r20 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$z16 = interfaceinvoke $r19.<java.util.Set: boolean equals(java.lang.Object)>($r20);
if $z16 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 15:
[preds: 14 ] [succs: 16 18 ]
$z17 = interfaceinvoke r33.<java.util.Map: boolean equals(java.lang.Object)>(r36);
if $z17 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 14:
[preds: 13 ] [succs: 15 18 ]
$r19 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$r20 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$z16 = interfaceinvoke $r19.<java.util.Set: boolean equals(java.lang.Object)>($r20);
if $z16 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 18:
[preds: 12 13 14 15 16 17 ] [succs: 19 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 15:
[preds: 14 ] [succs: 16 18 ]
$z17 = interfaceinvoke r33.<java.util.Map: boolean equals(java.lang.Object)>(r36);
if $z17 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 16:
[preds: 15 ] [succs: 17 18 ]
$r21 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$r22 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$z18 = interfaceinvoke $r21.<java.util.Set: boolean equals(java.lang.Object)>($r22);
if $z18 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 15:
[preds: 14 ] [succs: 16 18 ]
$z17 = interfaceinvoke r33.<java.util.Map: boolean equals(java.lang.Object)>(r36);
if $z17 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 18:
[preds: 12 13 14 15 16 17 ] [succs: 19 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r21 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$r22 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$z18 = interfaceinvoke $r21.<java.util.Set: boolean equals(java.lang.Object)>($r22);
if $z18 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 17:
[preds: 16 ] [succs: 18 19 ]
$r23 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$r24 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$z19 = interfaceinvoke $r23.<java.util.Set: boolean equals(java.lang.Object)>($r24);
if $z19 != 0 goto r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
";
    "Block 16:
[preds: 15 ] [succs: 17 18 ]
$r21 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>();
$r22 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>();
$z18 = interfaceinvoke $r21.<java.util.Set: boolean equals(java.lang.Object)>($r22);
if $z18 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 18:
[preds: 12 13 14 15 16 17 ] [succs: 19 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r23 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$r24 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$z19 = interfaceinvoke $r23.<java.util.Set: boolean equals(java.lang.Object)>($r24);
if $z19 != 0 goto r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"->"Block 18:
[preds: 12 13 14 15 16 17 ] [succs: 19 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
";
    "Block 17:
[preds: 16 ] [succs: 18 19 ]
$r23 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
$r24 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>();
$z19 = interfaceinvoke $r23.<java.util.Set: boolean equals(java.lang.Object)>($r24);
if $z19 != 0 goto r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"->"Block 19:
[preds: 17 18 ] [succs: 20 21 ]
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r37.<java.util.Map: void putAll(java.util.Map)>(r33);
$r38 = interfaceinvoke r37.<java.util.Map: java.util.Collection values()>();
$r39 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r38.<java.util.Collection: boolean removeAll(java.util.Collection)>($r39);
$i15 = interfaceinvoke r37.<java.util.Map: int size()>();
if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
";
    "Block 18:
[preds: 12 13 14 15 16 17 ] [succs: 19 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\");
"->"Block 19:
[preds: 17 18 ] [succs: 20 21 ]
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r37.<java.util.Map: void putAll(java.util.Map)>(r33);
$r38 = interfaceinvoke r37.<java.util.Map: java.util.Collection values()>();
$r39 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r38.<java.util.Collection: boolean removeAll(java.util.Collection)>($r39);
$i15 = interfaceinvoke r37.<java.util.Map: int size()>();
if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
";
    "Block 19:
[preds: 17 18 ] [succs: 20 21 ]
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r37.<java.util.Map: void putAll(java.util.Map)>(r33);
$r38 = interfaceinvoke r37.<java.util.Map: java.util.Collection values()>();
$r39 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r38.<java.util.Collection: boolean removeAll(java.util.Collection)>($r39);
$i15 = interfaceinvoke r37.<java.util.Map: int size()>();
if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
"->"Block 20:
[preds: 19 ] [succs: 21 22 ]
$r16 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$z14 = interfaceinvoke r37.<java.util.Map: boolean containsValue(java.lang.Object)>($r16);
if $z14 != 0 goto i16 = 0;
";
    "Block 19:
[preds: 17 18 ] [succs: 20 21 ]
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r37.<java.util.Map: void putAll(java.util.Map)>(r33);
$r38 = interfaceinvoke r37.<java.util.Map: java.util.Collection values()>();
$r39 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke $r38.<java.util.Collection: boolean removeAll(java.util.Collection)>($r39);
$i15 = interfaceinvoke r37.<java.util.Map: int size()>();
if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
"->"Block 21:
[preds: 19 20 ] [succs: 22 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
";
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
$r16 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$z14 = interfaceinvoke r37.<java.util.Map: boolean containsValue(java.lang.Object)>($r16);
if $z14 != 0 goto i16 = 0;
"->"Block 21:
[preds: 19 20 ] [succs: 22 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
";
    "Block 20:
[preds: 19 ] [succs: 21 22 ]
$r16 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$z14 = interfaceinvoke r37.<java.util.Map: boolean containsValue(java.lang.Object)>($r16);
if $z14 != 0 goto i16 = 0;
"->"Block 22:
[preds: 20 21 ] [succs: 23 ]
i16 = 0;
";
    "Block 21:
[preds: 19 20 ] [succs: 22 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\");
"->"Block 22:
[preds: 20 21 ] [succs: 23 ]
i16 = 0;
";
    "Block 22:
[preds: 20 21 ] [succs: 23 ]
i16 = 0;
"->"Block 23:
[preds: 22 28 ] [succs: 24 29 ]
$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
";
    "Block 23:
[preds: 22 28 ] [succs: 24 29 ]
$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
"->"Block 24:
[preds: 23 ] [succs: 25 26 ]
$z13 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r34);
if $z13 != 0 goto r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
";
    "Block 23:
[preds: 22 28 ] [succs: 24 29 ]
$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
"->"Block 29:
[preds: 23 ] [succs: 30 31 ]
$z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
if $z12 != 0 goto (branch);
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
$z13 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r34);
if $z13 != 0 goto r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
"->"Block 25:
[preds: 24 ] [succs: 26 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list doesn\'t contain a link.\");
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
$z13 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r34);
if $z13 != 0 goto r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
"->"Block 26:
[preds: 24 25 ] [succs: 27 28 ]
r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
";
    "Block 25:
[preds: 24 ] [succs: 26 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list doesn\'t contain a link.\");
"->"Block 26:
[preds: 24 25 ] [succs: 27 28 ]
r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
";
    "Block 26:
[preds: 24 25 ] [succs: 27 28 ]
r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
"->"Block 27:
[preds: 26 ] [succs: 28 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Could not retrieve a link.\");
";
    "Block 26:
[preds: 24 25 ] [succs: 27 28 ]
r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34);
if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
"->"Block 28:
[preds: 26 27 ] [succs: 23 ]
interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
r34 = r14;
i16 = i16 + 1;
goto [?= $r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>];
";
    "Block 27:
[preds: 26 ] [succs: 28 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Could not retrieve a link.\");
"->"Block 28:
[preds: 26 27 ] [succs: 23 ]
interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
r34 = r14;
i16 = i16 + 1;
goto [?= $r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>];
";
    "Block 28:
[preds: 26 27 ] [succs: 23 ]
interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34);
r34 = r14;
i16 = i16 + 1;
goto [?= $r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>];
"->"Block 23:
[preds: 22 28 ] [succs: 24 29 ]
$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
";
    "Block 29:
[preds: 23 ] [succs: 30 31 ]
$z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
if $z12 != 0 goto (branch);
"->"Block 30:
[preds: 29 ] [succs: 31 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Map nonempty after removing all links.\");
";
    "Block 29:
[preds: 23 ] [succs: 30 31 ]
$z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>();
if $z12 != 0 goto (branch);
"->"Block 31:
[preds: 29 30 ] [succs: 32 33 ]
if i16 == b1 goto i13 = i13 + 1;
";
    "Block 30:
[preds: 29 ] [succs: 31 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Map nonempty after removing all links.\");
"->"Block 31:
[preds: 29 30 ] [succs: 32 33 ]
if i16 == b1 goto i13 = i13 + 1;
";
    "Block 31:
[preds: 29 30 ] [succs: 32 33 ]
if i16 == b1 goto i13 = i13 + 1;
"->"Block 32:
[preds: 31 ] [succs: 33 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list size not as expected.\");
";
    "Block 31:
[preds: 29 30 ] [succs: 32 33 ]
if i16 == b1 goto i13 = i13 + 1;
"->"Block 33:
[preds: 31 32 ] [succs: 1 ]
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 32:
[preds: 31 ] [succs: 33 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list size not as expected.\");
"->"Block 33:
[preds: 31 32 ] [succs: 1 ]
i13 = i13 + 1;
goto [?= (branch)];
";
    "Block 33:
[preds: 31 32 ] [succs: 1 ]
i13 = i13 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 33 ] [succs: 2 34 ]
if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
";
    "Block 34:
[preds: 1 ] [succs: 35 ]
r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
i17 = 0;
"->"Block 35:
[preds: 34 38 ] [succs: 36 39 ]
if i17 >= b1 goto i18 = 0;
";
    "Block 35:
[preds: 34 38 ] [succs: 36 39 ]
if i17 >= b1 goto i18 = 0;
"->"Block 36:
[preds: 35 ] [succs: 37 38 ]
$r10 = new java.lang.Integer;
specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i17);
$r11 = new java.lang.Integer;
$i4 = 2 * i17;
specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i4);
$r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);
if $r12 == null goto i17 = i17 + 1;
";
    "Block 35:
[preds: 34 38 ] [succs: 36 39 ]
if i17 >= b1 goto i18 = 0;
"->"Block 39:
[preds: 35 ] [succs: 40 ]
i18 = 0;
";
    "Block 36:
[preds: 35 ] [succs: 37 38 ]
$r10 = new java.lang.Integer;
specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i17);
$r11 = new java.lang.Integer;
$i4 = 2 * i17;
specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i4);
$r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);
if $r12 == null goto i17 = i17 + 1;
"->"Block 37:
[preds: 36 ] [succs: 38 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a non-null value erroenously.\");
";
    "Block 36:
[preds: 35 ] [succs: 37 38 ]
$r10 = new java.lang.Integer;
specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i17);
$r11 = new java.lang.Integer;
$i4 = 2 * i17;
specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i4);
$r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11);
if $r12 == null goto i17 = i17 + 1;
"->"Block 38:
[preds: 36 37 ] [succs: 35 ]
i17 = i17 + 1;
goto [?= (branch)];
";
    "Block 37:
[preds: 36 ] [succs: 38 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a non-null value erroenously.\");
"->"Block 38:
[preds: 36 37 ] [succs: 35 ]
i17 = i17 + 1;
goto [?= (branch)];
";
    "Block 38:
[preds: 36 37 ] [succs: 35 ]
i17 = i17 + 1;
goto [?= (branch)];
"->"Block 35:
[preds: 34 38 ] [succs: 36 39 ]
if i17 >= b1 goto i18 = 0;
";
    "Block 39:
[preds: 35 ] [succs: 40 ]
i18 = 0;
"->"Block 40:
[preds: 39 46 ] [succs: 41 47 ]
$i2 = 2 * b1;
if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
";
    "Block 40:
[preds: 39 46 ] [succs: 41 47 ]
$i2 = 2 * b1;
if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
"->"Block 41:
[preds: 40 ] [succs: 42 43 ]
$r5 = new java.lang.Integer;
specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i18);
$z10 = interfaceinvoke r41.<java.util.Map: boolean containsValue(java.lang.Object)>($r5);
$i3 = i18 % 2;
if $i3 != 0 goto $z22 = 0;
";
    "Block 40:
[preds: 39 46 ] [succs: 41 47 ]
$i2 = 2 * b1;
if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
"->"Block 47:
[preds: 40 ] [succs: 48 49 ]
$r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$r0 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$r2 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0);
if $r2 != null goto r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
";
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
$r5 = new java.lang.Integer;
specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i18);
$z10 = interfaceinvoke r41.<java.util.Map: boolean containsValue(java.lang.Object)>($r5);
$i3 = i18 % 2;
if $i3 != 0 goto $z22 = 0;
"->"Block 42:
[preds: 41 ] [succs: 44 ]
$z22 = 1;
goto [?= (branch)];
";
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
$r5 = new java.lang.Integer;
specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i18);
$z10 = interfaceinvoke r41.<java.util.Map: boolean containsValue(java.lang.Object)>($r5);
$i3 = i18 % 2;
if $i3 != 0 goto $z22 = 0;
"->"Block 43:
[preds: 41 ] [succs: 44 ]
$z22 = 0;
";
    "Block 42:
[preds: 41 ] [succs: 44 ]
$z22 = 1;
goto [?= (branch)];
"->"Block 44:
[preds: 42 43 ] [succs: 45 46 ]
if $z10 == $z22 goto i18 = i18 + 1;
";
    "Block 43:
[preds: 41 ] [succs: 44 ]
$z22 = 0;
"->"Block 44:
[preds: 42 43 ] [succs: 45 46 ]
if $z10 == $z22 goto i18 = i18 + 1;
";
    "Block 44:
[preds: 42 43 ] [succs: 45 46 ]
if $z10 == $z22 goto i18 = i18 + 1;
"->"Block 45:
[preds: 44 ] [succs: 46 ]
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>($r9);
";
    "Block 44:
[preds: 42 43 ] [succs: 45 46 ]
if $z10 == $z22 goto i18 = i18 + 1;
"->"Block 46:
[preds: 44 45 ] [succs: 40 ]
i18 = i18 + 1;
goto [?= $i2 = 2 * b1];
";
    "Block 45:
[preds: 44 ] [succs: 46 ]
$r6 = new java.lang.StringBuilder;
specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>($r9);
"->"Block 46:
[preds: 44 45 ] [succs: 40 ]
i18 = i18 + 1;
goto [?= $i2 = 2 * b1];
";
    "Block 46:
[preds: 44 45 ] [succs: 40 ]
i18 = i18 + 1;
goto [?= $i2 = 2 * b1];
"->"Block 40:
[preds: 39 46 ] [succs: 41 47 ]
$i2 = 2 * b1;
if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
";
    "Block 47:
[preds: 40 ] [succs: 48 49 ]
$r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$r0 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$r2 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0);
if $r2 != null goto r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"->"Block 48:
[preds: 47 ] [succs: 49 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a null value erroenously.\");
";
    "Block 47:
[preds: 40 ] [succs: 48 49 ]
$r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$r0 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>;
$r2 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0);
if $r2 != null goto r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
"->"Block 49:
[preds: 47 48 ] [succs: 50 51 ]
r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
$z0 = interfaceinvoke r41.<java.util.Map: boolean equals(java.lang.Object)>(r42);
if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
";
    "Block 48:
[preds: 47 ] [succs: 49 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a null value erroenously.\");
"->"Block 49:
[preds: 47 48 ] [succs: 50 51 ]
r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
$z0 = interfaceinvoke r41.<java.util.Map: boolean equals(java.lang.Object)>(r42);
if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
";
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
$z0 = interfaceinvoke r41.<java.util.Map: boolean equals(java.lang.Object)>(r42);
if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
"->"Block 50:
[preds: 49 ] [succs: 51 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (1)\");
";
    "Block 49:
[preds: 47 48 ] [succs: 50 51 ]
r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>();
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
$z0 = interfaceinvoke r41.<java.util.Map: boolean equals(java.lang.Object)>(r42);
if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
"->"Block 51:
[preds: 49 50 ] [succs: 52 53 ]
$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
";
    "Block 50:
[preds: 49 ] [succs: 51 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (1)\");
"->"Block 51:
[preds: 49 50 ] [succs: 52 53 ]
$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
";
    "Block 51:
[preds: 49 50 ] [succs: 52 53 ]
$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
"->"Block 52:
[preds: 51 ] [succs: 53 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (2)\");
";
    "Block 51:
[preds: 49 50 ] [succs: 52 53 ]
$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41);
if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
"->"Block 53:
[preds: 51 52 ] [succs: 54 55 ]
r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r44 = interfaceinvoke r42.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r43.<java.util.Set: boolean equals(java.lang.Object)>(r44);
if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
";
    "Block 52:
[preds: 51 ] [succs: 53 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (2)\");
"->"Block 53:
[preds: 51 52 ] [succs: 54 55 ]
r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r44 = interfaceinvoke r42.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r43.<java.util.Set: boolean equals(java.lang.Object)>(r44);
if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
";
    "Block 53:
[preds: 51 52 ] [succs: 54 55 ]
r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r44 = interfaceinvoke r42.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r43.<java.util.Set: boolean equals(java.lang.Object)>(r44);
if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
"->"Block 54:
[preds: 53 ] [succs: 55 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (3)\");
";
    "Block 53:
[preds: 51 52 ] [succs: 54 55 ]
r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r44 = interfaceinvoke r42.<java.util.Map: java.util.Set entrySet()>();
$z2 = interfaceinvoke r43.<java.util.Set: boolean equals(java.lang.Object)>(r44);
if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
"->"Block 55:
[preds: 53 54 ] [succs: 56 57 ]
$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
";
    "Block 54:
[preds: 53 ] [succs: 55 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (3)\");
"->"Block 55:
[preds: 53 54 ] [succs: 56 57 ]
$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
";
    "Block 55:
[preds: 53 54 ] [succs: 56 57 ]
$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
"->"Block 56:
[preds: 55 ] [succs: 57 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (4)\");
";
    "Block 55:
[preds: 53 54 ] [succs: 56 57 ]
$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43);
if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
"->"Block 57:
[preds: 55 56 ] [succs: 58 59 ]
$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
";
    "Block 56:
[preds: 55 ] [succs: 57 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (4)\");
"->"Block 57:
[preds: 55 56 ] [succs: 58 59 ]
$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
";
    "Block 57:
[preds: 55 56 ] [succs: 58 59 ]
$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
"->"Block 58:
[preds: 57 ] [succs: 59 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Original doesn\'t contain clone!\");
";
    "Block 57:
[preds: 55 56 ] [succs: 58 59 ]
$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44);
if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
"->"Block 59:
[preds: 57 58 ] [succs: 60 61 ]
$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
";
    "Block 58:
[preds: 57 ] [succs: 59 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Original doesn\'t contain clone!\");
"->"Block 59:
[preds: 57 58 ] [succs: 60 61 ]
$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
";
    "Block 59:
[preds: 57 58 ] [succs: 60 61 ]
$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
"->"Block 60:
[preds: 59 ] [succs: 61 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone doesn\'t contain original!\");
";
    "Block 59:
[preds: 57 58 ] [succs: 60 61 ]
$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43);
if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
"->"Block 61:
[preds: 59 60 ] [succs: 62 63 ]
interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
$z7 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
";
    "Block 60:
[preds: 59 ] [succs: 61 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone doesn\'t contain original!\");
"->"Block 61:
[preds: 59 60 ] [succs: 62 63 ]
interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
$z7 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
";
    "Block 61:
[preds: 59 60 ] [succs: 62 63 ]
interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
$z7 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
"->"Block 62:
[preds: 61 ] [succs: 63 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"entrySet().removeAll failed.\");
";
    "Block 61:
[preds: 59 60 ] [succs: 62 63 ]
interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43);
$z7 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
"->"Block 63:
[preds: 61 62 ] [succs: 64 65 ]
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
interfaceinvoke r42.<java.util.Map: void clear()>();
$z8 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
";
    "Block 62:
[preds: 61 ] [succs: 63 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"entrySet().removeAll failed.\");
"->"Block 63:
[preds: 61 62 ] [succs: 64 65 ]
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
interfaceinvoke r42.<java.util.Map: void clear()>();
$z8 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
";
    "Block 63:
[preds: 61 62 ] [succs: 64 65 ]
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
interfaceinvoke r42.<java.util.Map: void clear()>();
$z8 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
"->"Block 64:
[preds: 63 ] [succs: 65 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"clear failed.\");
";
    "Block 63:
[preds: 61 62 ] [succs: 64 65 ]
interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41);
interfaceinvoke r42.<java.util.Map: void clear()>();
$z8 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>();
if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
"->"Block 65:
[preds: 63 64 ] [succs: 66 ]
$r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r45 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 64:
[preds: 63 ] [succs: 65 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"clear failed.\");
"->"Block 65:
[preds: 63 64 ] [succs: 66 ]
$r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r45 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 65:
[preds: 63 64 ] [succs: 66 ]
$r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>();
r45 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();
if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
";
    "Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();
if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
"->"Block 67:
[preds: 66 ] [succs: 66 ]
interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r45.<java.util.Iterator: void remove()>();
goto [?= $z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();
if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
"->"Block 68:
[preds: 66 ] [succs: 69 70 ]
$z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
if $z9 != 0 goto return;
";
    "Block 67:
[preds: 66 ] [succs: 66 ]
interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r45.<java.util.Iterator: void remove()>();
goto [?= $z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()];
"->"Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();
if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
";
    "Block 68:
[preds: 66 ] [succs: 69 70 ]
$z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
if $z9 != 0 goto return;
"->"Block 69:
[preds: 68 ] [succs: 70 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Iterator.remove() failed\");
";
    "Block 68:
[preds: 66 ] [succs: 69 70 ]
$z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>();
if $z9 != 0 goto return;
"->"Block 70:
[preds: 68 69 ] [succs: ]
return;
";
    "Block 69:
[preds: 68 ] [succs: 70 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Iterator.remove() failed\");
"->"Block 70:
[preds: 68 69 ] [succs: ]
return;
";
}
