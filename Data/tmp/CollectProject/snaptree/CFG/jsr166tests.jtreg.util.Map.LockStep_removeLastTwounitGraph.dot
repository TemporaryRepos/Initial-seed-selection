digraph "unitGraph" {
    "r7 := @this: jsr166tests.jtreg.util.Map.LockStep"
    "r0 := @parameter0: java.util.List"
    "$r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0)"
    "r2 = (java.util.Map) $r1"
    "i0 = interfaceinvoke r2.<java.util.Map: int size()>()"
    "$r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()"
    "r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()"
    "i2 = 0"
    "$i1 = i0 - 2"
    "if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"
    "interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"
    "i2 = i2 + 1"
    "goto [?= $i1 = i0 - 2]"
    "r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"
    "r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"
    "r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()"
    "$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()"
    "if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0)"
    "$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()"
    "r9 = (java.util.Map) $r8"
    "$r10 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>()"
    "r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()"
    "$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"
    "if $z1 == 0 goto (branch)"
    "r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"
    "if r12 == r14 goto interfaceinvoke r11.<java.util.Iterator: void remove()>()"
    "if r12 != r5 goto (branch)"
    "interfaceinvoke r11.<java.util.Iterator: void remove()>()"
    "goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"
    "goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]"
    "virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0)"
    "return"
    "r7 := @this: jsr166tests.jtreg.util.Map.LockStep"->"r0 := @parameter0: java.util.List";
    "r0 := @parameter0: java.util.List"->"$r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0)";
    "$r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0)"->"r2 = (java.util.Map) $r1";
    "r2 = (java.util.Map) $r1"->"i0 = interfaceinvoke r2.<java.util.Map: int size()>()";
    "i0 = interfaceinvoke r2.<java.util.Map: int size()>()"->"$r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()";
    "$r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>()"->"r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()";
    "r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()"->"i2 = 0";
    "i2 = 0"->"$i1 = i0 - 2";
    "$i1 = i0 - 2"->"if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()";
    "if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"->"interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()";
    "if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"->"r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()";
    "interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= $i1 = i0 - 2]";
    "goto [?= $i1 = i0 - 2]"->"$i1 = i0 - 2";
    "r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"->"r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()";
    "r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>()"->"r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()";
    "r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>()"->"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()";
    "$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()"->"if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0)";
    "if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0)"->"$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()";
    "if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0)"->"virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0)";
    "$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>()"->"r9 = (java.util.Map) $r8";
    "r9 = (java.util.Map) $r8"->"$r10 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>()";
    "$r10 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>()"->"r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()";
    "r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>()"->"$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()"->"if $z1 == 0 goto (branch)";
    "if $z1 == 0 goto (branch)"->"r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()";
    "if $z1 == 0 goto (branch)"->"goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]";
    "r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>()"->"if r12 == r14 goto interfaceinvoke r11.<java.util.Iterator: void remove()>()";
    "if r12 == r14 goto interfaceinvoke r11.<java.util.Iterator: void remove()>()"->"if r12 != r5 goto (branch)";
    "if r12 == r14 goto interfaceinvoke r11.<java.util.Iterator: void remove()>()"->"interfaceinvoke r11.<java.util.Iterator: void remove()>()";
    "if r12 != r5 goto (branch)"->"interfaceinvoke r11.<java.util.Iterator: void remove()>()";
    "if r12 != r5 goto (branch)"->"goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]";
    "interfaceinvoke r11.<java.util.Iterator: void remove()>()"->"goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()";
    "goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()]"->"$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()";
    "virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0)"->"return";
}
