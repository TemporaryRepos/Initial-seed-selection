digraph "unitGraph" {
    "r1 := @parameter0: java.util.Set"
    "$r0 = <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Random rnd>"
    "i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(3)"
    "if i0 != 0 goto (branch)"
    "$r12 = (java.util.LinkedHashSet) r1"
    "$r13 = virtualinvoke $r12.<java.util.LinkedHashSet: java.lang.Object clone()>()"
    "$r14 = (java.util.Set) $r13"
    "goto [?= r2 = $r14]"
    "if i0 != 1 goto $r14 = staticinvoke <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Set serClone(java.util.Set)>(r1)"
    "$r15 = new java.util.LinkedHashSet"
    "$r14 = $r15"
    "$r10 = interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray()>()"
    "$r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10)"
    "specialinvoke $r15.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r11)"
    "$r14 = staticinvoke <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Set serClone(java.util.Set)>(r1)"
    "r2 = $r14"
    "$z2 = interfaceinvoke r1.<java.util.Set: boolean equals(java.lang.Object)>(r2)"
    "if $z2 != 0 goto $z0 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>(r2)"
    "$r17 = new java.lang.Exception"
    "$r16 = new java.lang.StringBuilder"
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Set not equal to copy: \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r17.<java.lang.Exception: void <init>(java.lang.String)>($r9)"
    "throw $r17"
    "$z0 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>(r2)"
    "if $z0 != 0 goto $z1 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r1)"
    "$r18 = new java.lang.Exception"
    "specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Set does not contain copy.\")"
    "throw $r18"
    "$z1 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r1)"
    "if $z1 != 0 goto return r2"
    "$r19 = new java.lang.Exception"
    "specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>(\"Copy does not contain set.\")"
    "throw $r19"
    "return r2"
    "r1 := @parameter0: java.util.Set"->"$r0 = <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Random rnd>";
    "$r0 = <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Random rnd>"->"i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(3)";
    "i0 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(3)"->"if i0 != 0 goto (branch)";
    "if i0 != 0 goto (branch)"->"$r12 = (java.util.LinkedHashSet) r1";
    "if i0 != 0 goto (branch)"->"if i0 != 1 goto $r14 = staticinvoke <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Set serClone(java.util.Set)>(r1)";
    "$r12 = (java.util.LinkedHashSet) r1"->"$r13 = virtualinvoke $r12.<java.util.LinkedHashSet: java.lang.Object clone()>()";
    "$r13 = virtualinvoke $r12.<java.util.LinkedHashSet: java.lang.Object clone()>()"->"$r14 = (java.util.Set) $r13";
    "$r14 = (java.util.Set) $r13"->"goto [?= r2 = $r14]";
    "goto [?= r2 = $r14]"->"r2 = $r14";
    "if i0 != 1 goto $r14 = staticinvoke <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Set serClone(java.util.Set)>(r1)"->"$r15 = new java.util.LinkedHashSet";
    "if i0 != 1 goto $r14 = staticinvoke <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Set serClone(java.util.Set)>(r1)"->"$r14 = staticinvoke <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Set serClone(java.util.Set)>(r1)";
    "$r15 = new java.util.LinkedHashSet"->"$r14 = $r15";
    "$r14 = $r15"->"$r10 = interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray()>()";
    "$r10 = interfaceinvoke r1.<java.util.Set: java.lang.Object[] toArray()>()"->"$r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10)";
    "$r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10)"->"specialinvoke $r15.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r11)";
    "specialinvoke $r15.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r11)"->"goto [?= r2 = $r14]";
    "goto [?= r2 = $r14]"->"r2 = $r14";
    "$r14 = staticinvoke <jsr166tests.jtreg.util.LinkedHashSet.Basic: java.util.Set serClone(java.util.Set)>(r1)"->"r2 = $r14";
    "r2 = $r14"->"$z2 = interfaceinvoke r1.<java.util.Set: boolean equals(java.lang.Object)>(r2)";
    "$z2 = interfaceinvoke r1.<java.util.Set: boolean equals(java.lang.Object)>(r2)"->"if $z2 != 0 goto $z0 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>(r2)";
    "if $z2 != 0 goto $z0 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>(r2)"->"$r17 = new java.lang.Exception";
    "if $z2 != 0 goto $z0 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>(r2)"->"$z0 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>(r2)";
    "$r17 = new java.lang.Exception"->"$r16 = new java.lang.StringBuilder";
    "$r16 = new java.lang.StringBuilder"->"specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Set not equal to copy: \")";
    "$r7 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Set not equal to copy: \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r17.<java.lang.Exception: void <init>(java.lang.String)>($r9)";
    "specialinvoke $r17.<java.lang.Exception: void <init>(java.lang.String)>($r9)"->"throw $r17";
    "$z0 = interfaceinvoke r1.<java.util.Set: boolean containsAll(java.util.Collection)>(r2)"->"if $z0 != 0 goto $z1 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r1)";
    "if $z0 != 0 goto $z1 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r1)"->"$r18 = new java.lang.Exception";
    "if $z0 != 0 goto $z1 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r1)"->"$z1 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r1)";
    "$r18 = new java.lang.Exception"->"specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Set does not contain copy.\")";
    "specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Set does not contain copy.\")"->"throw $r18";
    "$z1 = interfaceinvoke r2.<java.util.Set: boolean containsAll(java.util.Collection)>(r1)"->"if $z1 != 0 goto return r2";
    "if $z1 != 0 goto return r2"->"$r19 = new java.lang.Exception";
    "if $z1 != 0 goto return r2"->"return r2";
    "$r19 = new java.lang.Exception"->"specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>(\"Copy does not contain set.\")";
    "specialinvoke $r19.<java.lang.Exception: void <init>(java.lang.String)>(\"Copy does not contain set.\")"->"throw $r19";
}
