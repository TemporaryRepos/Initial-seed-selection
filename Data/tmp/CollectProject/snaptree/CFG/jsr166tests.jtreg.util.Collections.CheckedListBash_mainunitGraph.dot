digraph "unitGraph" {
    "r35 := @parameter0: java.lang.String[]"
    "b0 = 100"
    "b1 = 100"
    "i28 = 0"
    "if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"
    "r36 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r36, b1)"
    "r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r37, b1)"
    "r38 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)"
    "interfaceinvoke r38.<java.util.List: boolean retainAll(java.util.Collection)>(r37)"
    "r39 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)"
    "interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r37)"
    "r40 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r37)"
    "interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r36)"
    "r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)"
    "interfaceinvoke r41.<java.util.List: boolean addAll(java.util.Collection)>(r37)"
    "$z11 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r40)"
    "if $z11 == 0 goto $z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 2 failed\")"
    "$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"
    "if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 3 failed\")"
    "$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"
    "if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 4 failed\")"
    "$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"
    "if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 5 failed\")"
    "$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"
    "if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 6 failed\")"
    "$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"
    "if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 7 failed\")"
    "interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39)"
    "interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r40)"
    "$z19 = interfaceinvoke r38.<java.util.List: boolean containsAll(java.util.Collection)>(r41)"
    "if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\")"
    "$z29 = interfaceinvoke r41.<java.util.List: boolean containsAll(java.util.Collection)>(r38)"
    "if $z29 != 0 goto r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\")"
    "r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"
    "$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()"
    "if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>()"
    "$r34 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>()"
    "interfaceinvoke r38.<java.util.List: boolean remove(java.lang.Object)>($r34)"
    "goto [?= $z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()]"
    "$z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>()"
    "if $z20 != 0 goto r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Copy nonempty after deleting all elements.\")"
    "r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"
    "$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()"
    "if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>()"
    "r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()"
    "$z27 = interfaceinvoke r41.<java.util.List: boolean contains(java.lang.Object)>(r44)"
    "if $z27 != 0 goto interfaceinvoke r43.<java.util.Iterator: void remove()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List doesn\'t contain one of its elements.\")"
    "interfaceinvoke r43.<java.util.Iterator: void remove()>()"
    "goto [?= $z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]"
    "$z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>()"
    "if $z21 != 0 goto interfaceinvoke r36.<java.util.List: void clear()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List nonempty after deleting all elements.\")"
    "interfaceinvoke r36.<java.util.List: void clear()>()"
    "$i23 = interfaceinvoke r36.<java.util.List: int size()>()"
    "if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Clear didn\'t reduce size to zero.\")"
    "interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37)"
    "$z23 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)"
    "if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\")"
    "$z26 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36)"
    "if $z26 != 0 goto i29 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\")"
    "i29 = 0"
    "i30 = interfaceinvoke r36.<java.util.List: int size()>()"
    "if i29 >= i30 goto i31 = 0"
    "$i26 = i30 - i29"
    "$i27 = $i26 - 1"
    "$r31 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i29)"
    "$r32 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i27, $r31)"
    "interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i29, $r32)"
    "i29 = i29 + 1"
    "goto [?= (branch)]"
    "i31 = 0"
    "i32 = interfaceinvoke r36.<java.util.List: int size()>()"
    "if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)"
    "$i24 = i32 - i31"
    "$i25 = $i24 - 1"
    "$r28 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i31)"
    "$r29 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i25, $r28)"
    "interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i31, $r29)"
    "i31 = i31 + 1"
    "$z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)"
    "if $z24 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\")"
    "$z25 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36)"
    "if $z25 != 0 goto i28 = i28 + 1"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\")"
    "i28 = i28 + 1"
    "r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"
    "i33 = 0"
    "if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>()"
    "$r27 = new java.lang.Integer"
    "specialinvoke $r27.<java.lang.Integer: void <init>(int)>(i33)"
    "interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>($r27)"
    "i33 = i33 + 1"
    "$i2 = interfaceinvoke r45.<java.util.List: int size()>()"
    "if $i2 == b1 goto r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Size of [0..n-1] != n\")"
    "r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"
    "r47 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()"
    "$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()"
    "if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()"
    "$r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()"
    "$r26 = (java.lang.Integer) $r25"
    "$i21 = virtualinvoke $r26.<java.lang.Integer: int intValue()>()"
    "$i22 = $i21 % 2"
    "if $i22 != 1 goto $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()"
    "interfaceinvoke r47.<java.util.Iterator: void remove()>()"
    "goto [?= $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]"
    "r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()"
    "$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()"
    "if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"
    "$r23 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>()"
    "$r24 = (java.lang.Integer) $r23"
    "$i19 = virtualinvoke $r24.<java.lang.Integer: int intValue()>()"
    "$i20 = $i19 % 2"
    "if $i20 != 1 goto $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all odd nubmers.\")"
    "goto [?= $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()]"
    "r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"
    "i34 = 0"
    "$i3 = b1 / 2"
    "if i34 >= $i3 goto i35 = 0"
    "interfaceinvoke r49.<java.util.List: java.lang.Object remove(int)>(i34)"
    "i34 = i34 + 1"
    "goto [?= $i3 = b1 / 2]"
    "i35 = 0"
    "$i4 = b1 / 2"
    "if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"
    "$r20 = interfaceinvoke r49.<java.util.List: java.lang.Object get(int)>(i35)"
    "$r21 = (java.lang.Integer) $r20"
    "$i17 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()"
    "$i18 = $i17 % 2"
    "if $i18 == 1 goto i35 = i35 + 1"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all even nubmers.\")"
    "i35 = i35 + 1"
    "goto [?= $i4 = b1 / 2]"
    "r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"
    "i36 = 0"
    "$i5 = b1 / 2"
    "if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45)"
    "$i16 = 2 * i36"
    "$r19 = interfaceinvoke r46.<java.util.List: java.lang.Object get(int)>(i36)"
    "interfaceinvoke r50.<java.util.List: void add(int,java.lang.Object)>($i16, $r19)"
    "i36 = i36 + 1"
    "goto [?= $i5 = b1 / 2]"
    "$z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45)"
    "if $z0 != 0 goto r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints from odds and evens.\")"
    "r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"
    "$i6 = interfaceinvoke r51.<java.util.List: int size()>()"
    "r52 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator(int)>($i6)"
    "$i7 = interfaceinvoke r46.<java.util.List: int size()>()"
    "r53 = interfaceinvoke r46.<java.util.List: java.util.ListIterator listIterator(int)>($i7)"
    "$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()"
    "if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"
    "interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>()"
    "$r17 = interfaceinvoke r53.<java.util.ListIterator: java.lang.Object previous()>()"
    "interfaceinvoke r52.<java.util.ListIterator: void add(java.lang.Object)>($r17)"
    "goto [?= $z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()]"
    "r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"
    "$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()"
    "if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"
    "$r14 = interfaceinvoke r54.<java.util.ListIterator: java.lang.Object next()>()"
    "r55 = (java.lang.Integer) $r14"
    "$r15 = new java.lang.Integer"
    "$i15 = virtualinvoke r55.<java.lang.Integer: int intValue()>()"
    "specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i15)"
    "interfaceinvoke r54.<java.util.ListIterator: void set(java.lang.Object)>($r15)"
    "goto [?= $z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()]"
    "r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"
    "r57 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>()"
    "$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()"
    "if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45)"
    "$r12 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>()"
    "$r13 = interfaceinvoke r56.<java.util.ListIterator: java.lang.Object next()>()"
    "if $r12 != $r13 goto $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Iterator.set failed to change value.\")"
    "goto [?= $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()]"
    "$z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45)"
    "if $z2 != 0 goto r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints with ListIterator.\")"
    "r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"
    "i37 = 0"
    "$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()"
    "if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"
    "r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>()"
    "$i8 = interfaceinvoke r51.<java.util.List: int indexOf(java.lang.Object)>(r59)"
    "$i9 = interfaceinvoke r51.<java.util.List: int lastIndexOf(java.lang.Object)>(r59)"
    "if $i8 == $i9 goto $i10 = interfaceinvoke r51.<java.util.List: int size()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Apparent duplicate detected.\")"
    "$i10 = interfaceinvoke r51.<java.util.List: int size()>()"
    "$r10 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(i37, $i10)"
    "$i11 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r59)"
    "if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\")"
    "$i12 = i37 + 1"
    "$i13 = interfaceinvoke r51.<java.util.List: int size()>()"
    "$r11 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>($i12, $i13)"
    "$i14 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r59)"
    "if $i14 == -1 goto $i38 = i37 + 1"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\")"
    "$i38 = i37 + 1"
    "$r60 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(0, $i38)"
    "$i39 = interfaceinvoke $r60.<java.util.List: int lastIndexOf(java.lang.Object)>(r59)"
    "if $i39 == i37 goto i37 = i37 + 1"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/lastIndexOf is screwy.\")"
    "i37 = i37 + 1"
    "goto [?= $z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()]"
    "r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r61, b1)"
    "$r0 = newarray (java.lang.Integer)[0]"
    "$r1 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r0)"
    "$r2 = (java.lang.Integer[]) $r1"
    "r62 = (java.lang.Integer[]) $r2"
    "$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r62)"
    "$z3 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r3)"
    "if $z3 != 0 goto r63 = newarray (java.lang.Integer)[b1]"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (1)\")"
    "r63 = newarray (java.lang.Integer)[b1]"
    "$r4 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r63)"
    "$r5 = (java.lang.Integer[]) $r4"
    "r64 = (java.lang.Integer[]) $r5"
    "if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\")"
    "$r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r63)"
    "$z5 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r9)"
    "if $z5 != 0 goto $i40 = b1 + 1"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\")"
    "$i40 = b1 + 1"
    "r65 = newarray (java.lang.Integer)[$i40]"
    "$r66 = new java.lang.Integer"
    "specialinvoke $r66.<java.lang.Integer: void <init>(int)>(69)"
    "r65[b1] = $r66"
    "$r67 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r65)"
    "$r68 = (java.lang.Integer[]) $r67"
    "r69 = (java.lang.Integer[]) $r68"
    "if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")"
    "$r6 = r65[b1]"
    "if $r6 != null goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")"
    "$r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r65)"
    "$r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, b1)"
    "$z4 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r8)"
    "if $z4 != 0 goto return"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")"
    "return"
    "r35 := @parameter0: java.lang.String[]"->"b0 = 100";
    "b0 = 100"->"b1 = 100";
    "b1 = 100"->"i28 = 0";
    "i28 = 0"->"if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()";
    "if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"->"r36 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()";
    "if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"->"r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()";
    "r36 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r36, b1)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r36, b1)"->"r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()";
    "r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r37, b1)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r37, b1)"->"r38 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)";
    "r38 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)"->"interfaceinvoke r38.<java.util.List: boolean retainAll(java.util.Collection)>(r37)";
    "interfaceinvoke r38.<java.util.List: boolean retainAll(java.util.Collection)>(r37)"->"r39 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)";
    "r39 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)"->"interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r37)";
    "interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r37)"->"r40 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r37)";
    "r40 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r37)"->"interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r36)";
    "interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r36)"->"r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)";
    "r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36)"->"interfaceinvoke r41.<java.util.List: boolean addAll(java.util.Collection)>(r37)";
    "interfaceinvoke r41.<java.util.List: boolean addAll(java.util.Collection)>(r37)"->"$z11 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r40)";
    "$z11 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r40)"->"if $z11 == 0 goto $z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38)";
    "if $z11 == 0 goto $z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 2 failed\")";
    "if $z11 == 0 goto $z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"->"$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 2 failed\")"->"$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38)";
    "$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"->"if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 3 failed\")";
    "if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 3 failed\")"->"$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38)";
    "if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 4 failed\")";
    "if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"->"$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 4 failed\")"->"$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38)";
    "$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38)"->"if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 5 failed\")";
    "if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 5 failed\")"->"$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 6 failed\")";
    "if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 6 failed\")"->"$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)";
    "$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39)"->"if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39)";
    "if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 7 failed\")";
    "if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39)"->"interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 7 failed\")"->"interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39)";
    "interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39)"->"interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r40)";
    "interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r40)"->"$z19 = interfaceinvoke r38.<java.util.List: boolean containsAll(java.util.Collection)>(r41)";
    "$z19 = interfaceinvoke r38.<java.util.List: boolean containsAll(java.util.Collection)>(r41)"->"if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\")";
    "if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\")"->"$z29 = interfaceinvoke r41.<java.util.List: boolean containsAll(java.util.Collection)>(r38)";
    "if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\")";
    "$z29 = interfaceinvoke r41.<java.util.List: boolean containsAll(java.util.Collection)>(r38)"->"if $z29 != 0 goto r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()";
    "if $z29 != 0 goto r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\")";
    "if $z29 != 0 goto r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"->"r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\")"->"r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()";
    "r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"->"$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()";
    "$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()"->"if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>()";
    "if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>()"->"$r34 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>()";
    "if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>()"->"$z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>()";
    "$r34 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>()"->"interfaceinvoke r38.<java.util.List: boolean remove(java.lang.Object)>($r34)";
    "interfaceinvoke r38.<java.util.List: boolean remove(java.lang.Object)>($r34)"->"goto [?= $z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()]"->"$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()";
    "$z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>()"->"if $z20 != 0 goto r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()";
    "if $z20 != 0 goto r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Copy nonempty after deleting all elements.\")";
    "if $z20 != 0 goto r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"->"r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Copy nonempty after deleting all elements.\")"->"r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()";
    "r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>()"->"$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()";
    "$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()"->"if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>()";
    "if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>()"->"r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()";
    "if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>()"->"$z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>()";
    "r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>()"->"$z27 = interfaceinvoke r41.<java.util.List: boolean contains(java.lang.Object)>(r44)";
    "$z27 = interfaceinvoke r41.<java.util.List: boolean contains(java.lang.Object)>(r44)"->"if $z27 != 0 goto interfaceinvoke r43.<java.util.Iterator: void remove()>()";
    "if $z27 != 0 goto interfaceinvoke r43.<java.util.Iterator: void remove()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List doesn\'t contain one of its elements.\")";
    "if $z27 != 0 goto interfaceinvoke r43.<java.util.Iterator: void remove()>()"->"interfaceinvoke r43.<java.util.Iterator: void remove()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List doesn\'t contain one of its elements.\")"->"interfaceinvoke r43.<java.util.Iterator: void remove()>()";
    "interfaceinvoke r43.<java.util.Iterator: void remove()>()"->"goto [?= $z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()]"->"$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()";
    "$z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>()"->"if $z21 != 0 goto interfaceinvoke r36.<java.util.List: void clear()>()";
    "if $z21 != 0 goto interfaceinvoke r36.<java.util.List: void clear()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List nonempty after deleting all elements.\")";
    "if $z21 != 0 goto interfaceinvoke r36.<java.util.List: void clear()>()"->"interfaceinvoke r36.<java.util.List: void clear()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List nonempty after deleting all elements.\")"->"interfaceinvoke r36.<java.util.List: void clear()>()";
    "interfaceinvoke r36.<java.util.List: void clear()>()"->"$i23 = interfaceinvoke r36.<java.util.List: int size()>()";
    "$i23 = interfaceinvoke r36.<java.util.List: int size()>()"->"if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37)";
    "if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Clear didn\'t reduce size to zero.\")";
    "if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37)"->"interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Clear didn\'t reduce size to zero.\")"->"interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37)";
    "interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37)"->"$z23 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)";
    "$z23 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)"->"if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\")";
    "if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\")"->"$z26 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36)";
    "if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\")";
    "$z26 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36)"->"if $z26 != 0 goto i29 = 0";
    "if $z26 != 0 goto i29 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\")";
    "if $z26 != 0 goto i29 = 0"->"i29 = 0";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\")"->"i29 = 0";
    "i29 = 0"->"i30 = interfaceinvoke r36.<java.util.List: int size()>()";
    "i30 = interfaceinvoke r36.<java.util.List: int size()>()"->"if i29 >= i30 goto i31 = 0";
    "if i29 >= i30 goto i31 = 0"->"$i26 = i30 - i29";
    "if i29 >= i30 goto i31 = 0"->"i31 = 0";
    "$i26 = i30 - i29"->"$i27 = $i26 - 1";
    "$i27 = $i26 - 1"->"$r31 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i29)";
    "$r31 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i29)"->"$r32 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i27, $r31)";
    "$r32 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i27, $r31)"->"interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i29, $r32)";
    "interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i29, $r32)"->"i29 = i29 + 1";
    "i29 = i29 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i29 >= i30 goto i31 = 0";
    "i31 = 0"->"i32 = interfaceinvoke r36.<java.util.List: int size()>()";
    "i32 = interfaceinvoke r36.<java.util.List: int size()>()"->"if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)";
    "if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)"->"$i24 = i32 - i31";
    "if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)"->"$z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)";
    "$i24 = i32 - i31"->"$i25 = $i24 - 1";
    "$i25 = $i24 - 1"->"$r28 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i31)";
    "$r28 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i31)"->"$r29 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i25, $r28)";
    "$r29 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i25, $r28)"->"interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i31, $r29)";
    "interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i31, $r29)"->"i31 = i31 + 1";
    "i31 = i31 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)";
    "$z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37)"->"if $z24 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\")";
    "if $z24 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\")"->"$z25 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36)";
    "if $z24 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\")";
    "$z25 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36)"->"if $z25 != 0 goto i28 = i28 + 1";
    "if $z25 != 0 goto i28 = i28 + 1"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\")";
    "if $z25 != 0 goto i28 = i28 + 1"->"i28 = i28 + 1";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\")"->"i28 = i28 + 1";
    "i28 = i28 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()";
    "r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"->"i33 = 0";
    "i33 = 0"->"if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>()";
    "if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>()"->"$r27 = new java.lang.Integer";
    "if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>()"->"$i2 = interfaceinvoke r45.<java.util.List: int size()>()";
    "$r27 = new java.lang.Integer"->"specialinvoke $r27.<java.lang.Integer: void <init>(int)>(i33)";
    "specialinvoke $r27.<java.lang.Integer: void <init>(int)>(i33)"->"interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>($r27)";
    "interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>($r27)"->"i33 = i33 + 1";
    "i33 = i33 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>()";
    "$i2 = interfaceinvoke r45.<java.util.List: int size()>()"->"if $i2 == b1 goto r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)";
    "if $i2 == b1 goto r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Size of [0..n-1] != n\")";
    "if $i2 == b1 goto r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"->"r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Size of [0..n-1] != n\")"->"r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)";
    "r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"->"r47 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()";
    "r47 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()"->"$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()";
    "$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()"->"if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()";
    "if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()"->"$r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()";
    "if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()"->"r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()";
    "$r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>()"->"$r26 = (java.lang.Integer) $r25";
    "$r26 = (java.lang.Integer) $r25"->"$i21 = virtualinvoke $r26.<java.lang.Integer: int intValue()>()";
    "$i21 = virtualinvoke $r26.<java.lang.Integer: int intValue()>()"->"$i22 = $i21 % 2";
    "$i22 = $i21 % 2"->"if $i22 != 1 goto $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()";
    "if $i22 != 1 goto $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()"->"interfaceinvoke r47.<java.util.Iterator: void remove()>()";
    "if $i22 != 1 goto $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()"->"$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()";
    "interfaceinvoke r47.<java.util.Iterator: void remove()>()"->"goto [?= $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()]"->"$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()";
    "r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>()"->"$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()";
    "$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()"->"if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)";
    "if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"->"$r23 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>()";
    "if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"->"r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)";
    "$r23 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>()"->"$r24 = (java.lang.Integer) $r23";
    "$r24 = (java.lang.Integer) $r23"->"$i19 = virtualinvoke $r24.<java.lang.Integer: int intValue()>()";
    "$i19 = virtualinvoke $r24.<java.lang.Integer: int intValue()>()"->"$i20 = $i19 % 2";
    "$i20 = $i19 % 2"->"if $i20 != 1 goto $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()";
    "if $i20 != 1 goto $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all odd nubmers.\")";
    "if $i20 != 1 goto $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()"->"$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all odd nubmers.\")"->"goto [?= $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()]"->"$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()";
    "r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45)"->"i34 = 0";
    "i34 = 0"->"$i3 = b1 / 2";
    "$i3 = b1 / 2"->"if i34 >= $i3 goto i35 = 0";
    "if i34 >= $i3 goto i35 = 0"->"interfaceinvoke r49.<java.util.List: java.lang.Object remove(int)>(i34)";
    "if i34 >= $i3 goto i35 = 0"->"i35 = 0";
    "interfaceinvoke r49.<java.util.List: java.lang.Object remove(int)>(i34)"->"i34 = i34 + 1";
    "i34 = i34 + 1"->"goto [?= $i3 = b1 / 2]";
    "goto [?= $i3 = b1 / 2]"->"$i3 = b1 / 2";
    "i35 = 0"->"$i4 = b1 / 2";
    "$i4 = b1 / 2"->"if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)";
    "if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"->"$r20 = interfaceinvoke r49.<java.util.List: java.lang.Object get(int)>(i35)";
    "if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"->"r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)";
    "$r20 = interfaceinvoke r49.<java.util.List: java.lang.Object get(int)>(i35)"->"$r21 = (java.lang.Integer) $r20";
    "$r21 = (java.lang.Integer) $r20"->"$i17 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()";
    "$i17 = virtualinvoke $r21.<java.lang.Integer: int intValue()>()"->"$i18 = $i17 % 2";
    "$i18 = $i17 % 2"->"if $i18 == 1 goto i35 = i35 + 1";
    "if $i18 == 1 goto i35 = i35 + 1"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all even nubmers.\")";
    "if $i18 == 1 goto i35 = i35 + 1"->"i35 = i35 + 1";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all even nubmers.\")"->"i35 = i35 + 1";
    "i35 = i35 + 1"->"goto [?= $i4 = b1 / 2]";
    "goto [?= $i4 = b1 / 2]"->"$i4 = b1 / 2";
    "r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"->"i36 = 0";
    "i36 = 0"->"$i5 = b1 / 2";
    "$i5 = b1 / 2"->"if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45)";
    "if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45)"->"$i16 = 2 * i36";
    "if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45)"->"$z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45)";
    "$i16 = 2 * i36"->"$r19 = interfaceinvoke r46.<java.util.List: java.lang.Object get(int)>(i36)";
    "$r19 = interfaceinvoke r46.<java.util.List: java.lang.Object get(int)>(i36)"->"interfaceinvoke r50.<java.util.List: void add(int,java.lang.Object)>($i16, $r19)";
    "interfaceinvoke r50.<java.util.List: void add(int,java.lang.Object)>($i16, $r19)"->"i36 = i36 + 1";
    "i36 = i36 + 1"->"goto [?= $i5 = b1 / 2]";
    "goto [?= $i5 = b1 / 2]"->"$i5 = b1 / 2";
    "$z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45)"->"if $z0 != 0 goto r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)";
    "if $z0 != 0 goto r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints from odds and evens.\")";
    "if $z0 != 0 goto r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"->"r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints from odds and evens.\")"->"r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)";
    "r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49)"->"$i6 = interfaceinvoke r51.<java.util.List: int size()>()";
    "$i6 = interfaceinvoke r51.<java.util.List: int size()>()"->"r52 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator(int)>($i6)";
    "r52 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator(int)>($i6)"->"$i7 = interfaceinvoke r46.<java.util.List: int size()>()";
    "$i7 = interfaceinvoke r46.<java.util.List: int size()>()"->"r53 = interfaceinvoke r46.<java.util.List: java.util.ListIterator listIterator(int)>($i7)";
    "r53 = interfaceinvoke r46.<java.util.List: java.util.ListIterator listIterator(int)>($i7)"->"$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()";
    "$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()"->"if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()";
    "if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>()";
    "if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()";
    "interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>()"->"$r17 = interfaceinvoke r53.<java.util.ListIterator: java.lang.Object previous()>()";
    "$r17 = interfaceinvoke r53.<java.util.ListIterator: java.lang.Object previous()>()"->"interfaceinvoke r52.<java.util.ListIterator: void add(java.lang.Object)>($r17)";
    "interfaceinvoke r52.<java.util.ListIterator: void add(java.lang.Object)>($r17)"->"interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>()";
    "interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>()"->"goto [?= $z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()]";
    "goto [?= $z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()]"->"$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()";
    "r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()";
    "$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()"->"if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()";
    "if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"$r14 = interfaceinvoke r54.<java.util.ListIterator: java.lang.Object next()>()";
    "if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()";
    "$r14 = interfaceinvoke r54.<java.util.ListIterator: java.lang.Object next()>()"->"r55 = (java.lang.Integer) $r14";
    "r55 = (java.lang.Integer) $r14"->"$r15 = new java.lang.Integer";
    "$r15 = new java.lang.Integer"->"$i15 = virtualinvoke r55.<java.lang.Integer: int intValue()>()";
    "$i15 = virtualinvoke r55.<java.lang.Integer: int intValue()>()"->"specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i15)";
    "specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i15)"->"interfaceinvoke r54.<java.util.ListIterator: void set(java.lang.Object)>($r15)";
    "interfaceinvoke r54.<java.util.ListIterator: void set(java.lang.Object)>($r15)"->"goto [?= $z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()]";
    "goto [?= $z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()]"->"$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()";
    "r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"r57 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>()";
    "r57 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>()"->"$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()";
    "$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()"->"if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45)";
    "if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45)"->"$r12 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>()";
    "if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45)"->"$z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45)";
    "$r12 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>()"->"$r13 = interfaceinvoke r56.<java.util.ListIterator: java.lang.Object next()>()";
    "$r13 = interfaceinvoke r56.<java.util.ListIterator: java.lang.Object next()>()"->"if $r12 != $r13 goto $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()";
    "if $r12 != $r13 goto $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Iterator.set failed to change value.\")";
    "if $r12 != $r13 goto $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()"->"$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Iterator.set failed to change value.\")"->"goto [?= $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()]"->"$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()";
    "$z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45)"->"if $z2 != 0 goto r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()";
    "if $z2 != 0 goto r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints with ListIterator.\")";
    "if $z2 != 0 goto r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints with ListIterator.\")"->"r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()";
    "r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>()"->"i37 = 0";
    "i37 = 0"->"$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()";
    "$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()"->"if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()";
    "if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"->"r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>()";
    "if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"->"r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()";
    "r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>()"->"$i8 = interfaceinvoke r51.<java.util.List: int indexOf(java.lang.Object)>(r59)";
    "$i8 = interfaceinvoke r51.<java.util.List: int indexOf(java.lang.Object)>(r59)"->"$i9 = interfaceinvoke r51.<java.util.List: int lastIndexOf(java.lang.Object)>(r59)";
    "$i9 = interfaceinvoke r51.<java.util.List: int lastIndexOf(java.lang.Object)>(r59)"->"if $i8 == $i9 goto $i10 = interfaceinvoke r51.<java.util.List: int size()>()";
    "if $i8 == $i9 goto $i10 = interfaceinvoke r51.<java.util.List: int size()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Apparent duplicate detected.\")";
    "if $i8 == $i9 goto $i10 = interfaceinvoke r51.<java.util.List: int size()>()"->"$i10 = interfaceinvoke r51.<java.util.List: int size()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Apparent duplicate detected.\")"->"$i10 = interfaceinvoke r51.<java.util.List: int size()>()";
    "$i10 = interfaceinvoke r51.<java.util.List: int size()>()"->"$r10 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(i37, $i10)";
    "$r10 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(i37, $i10)"->"$i11 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r59)";
    "$i11 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r59)"->"if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\")";
    "if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\")"->"$i12 = i37 + 1";
    "if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\")";
    "$i12 = i37 + 1"->"$i13 = interfaceinvoke r51.<java.util.List: int size()>()";
    "$i13 = interfaceinvoke r51.<java.util.List: int size()>()"->"$r11 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>($i12, $i13)";
    "$r11 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>($i12, $i13)"->"$i14 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r59)";
    "$i14 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r59)"->"if $i14 == -1 goto $i38 = i37 + 1";
    "if $i14 == -1 goto $i38 = i37 + 1"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\")";
    "if $i14 == -1 goto $i38 = i37 + 1"->"$i38 = i37 + 1";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\")"->"$i38 = i37 + 1";
    "$i38 = i37 + 1"->"$r60 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(0, $i38)";
    "$r60 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(0, $i38)"->"$i39 = interfaceinvoke $r60.<java.util.List: int lastIndexOf(java.lang.Object)>(r59)";
    "$i39 = interfaceinvoke $r60.<java.util.List: int lastIndexOf(java.lang.Object)>(r59)"->"if $i39 == i37 goto i37 = i37 + 1";
    "if $i39 == i37 goto i37 = i37 + 1"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/lastIndexOf is screwy.\")";
    "if $i39 == i37 goto i37 = i37 + 1"->"i37 = i37 + 1";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/lastIndexOf is screwy.\")"->"i37 = i37 + 1";
    "i37 = i37 + 1"->"goto [?= $z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()]"->"$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()";
    "r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r61, b1)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r61, b1)"->"$r0 = newarray (java.lang.Integer)[0]";
    "$r0 = newarray (java.lang.Integer)[0]"->"$r1 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r0)";
    "$r1 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r0)"->"$r2 = (java.lang.Integer[]) $r1";
    "$r2 = (java.lang.Integer[]) $r1"->"r62 = (java.lang.Integer[]) $r2";
    "r62 = (java.lang.Integer[]) $r2"->"$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r62)";
    "$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r62)"->"$z3 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r3)";
    "$z3 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r3)"->"if $z3 != 0 goto r63 = newarray (java.lang.Integer)[b1]";
    "if $z3 != 0 goto r63 = newarray (java.lang.Integer)[b1]"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (1)\")";
    "if $z3 != 0 goto r63 = newarray (java.lang.Integer)[b1]"->"r63 = newarray (java.lang.Integer)[b1]";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (1)\")"->"r63 = newarray (java.lang.Integer)[b1]";
    "r63 = newarray (java.lang.Integer)[b1]"->"$r4 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r63)";
    "$r4 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r63)"->"$r5 = (java.lang.Integer[]) $r4";
    "$r5 = (java.lang.Integer[]) $r4"->"r64 = (java.lang.Integer[]) $r5";
    "r64 = (java.lang.Integer[]) $r5"->"if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\")";
    "if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\")"->"$r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r63)";
    "if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\")";
    "$r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r63)"->"$z5 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r9)";
    "$z5 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r9)"->"if $z5 != 0 goto $i40 = b1 + 1";
    "if $z5 != 0 goto $i40 = b1 + 1"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\")";
    "if $z5 != 0 goto $i40 = b1 + 1"->"$i40 = b1 + 1";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\")"->"$i40 = b1 + 1";
    "$i40 = b1 + 1"->"r65 = newarray (java.lang.Integer)[$i40]";
    "r65 = newarray (java.lang.Integer)[$i40]"->"$r66 = new java.lang.Integer";
    "$r66 = new java.lang.Integer"->"specialinvoke $r66.<java.lang.Integer: void <init>(int)>(69)";
    "specialinvoke $r66.<java.lang.Integer: void <init>(int)>(69)"->"r65[b1] = $r66";
    "r65[b1] = $r66"->"$r67 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r65)";
    "$r67 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r65)"->"$r68 = (java.lang.Integer[]) $r67";
    "$r68 = (java.lang.Integer[]) $r67"->"r69 = (java.lang.Integer[]) $r68";
    "r69 = (java.lang.Integer[]) $r68"->"if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")";
    "if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")"->"$r6 = r65[b1]";
    "if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")";
    "$r6 = r65[b1]"->"if $r6 != null goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")";
    "if $r6 != null goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")"->"$r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r65)";
    "if $r6 != null goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")";
    "$r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r65)"->"$r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, b1)";
    "$r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, b1)"->"$z4 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r8)";
    "$z4 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r8)"->"if $z4 != 0 goto return";
    "if $z4 != 0 goto return"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")";
    "if $z4 != 0 goto return"->"return";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\")"->"return";
}
