digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 5 6 ]
r0 := @parameter0: java.util.Map$Entry;
$r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r1, null);
$r2 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r2, null);
$r3 = new java.util.AbstractMap$SimpleEntry;
specialinvoke $r3.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r3);
$r4 = new java.util.AbstractMap$SimpleImmutableEntry;
specialinvoke $r4.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r4);
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r5, \"null=null\");
$z0 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z0 == 0 goto interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"
    "Block 1:
[preds: 0 ] [succs: 7 ]
$r7 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r8 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r7);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r8, null);
$r9 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r10 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r9, $r10);
goto [?= return];
"
    "Block 2:
[preds: 0 ] [succs: 5 6 3 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"
    "Block 3:
[preds: 2 ] [succs: 5 6 4 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
"
    "Block 4:
[preds: 3 ] [succs: 7 ]
goto [?= return];
"
    "Block 5:
[preds: 0 2 3 ] [succs: 7 ]
$r12 := @caughtexception;
r13 = $r12;
goto [?= return];
"
    "Block 6:
[preds: 0 2 3 ] [succs: 7 ]
$r11 := @caughtexception;
r14 = $r11;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r14);
"
    "Block 7:
[preds: 1 4 5 6 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 5 6 ]
r0 := @parameter0: java.util.Map$Entry;
$r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r1, null);
$r2 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r2, null);
$r3 = new java.util.AbstractMap$SimpleEntry;
specialinvoke $r3.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r3);
$r4 = new java.util.AbstractMap$SimpleImmutableEntry;
specialinvoke $r4.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r4);
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r5, \"null=null\");
$z0 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z0 == 0 goto interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"->"Block 1:
[preds: 0 ] [succs: 7 ]
$r7 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r8 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r7);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r8, null);
$r9 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r10 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r9, $r10);
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 5 6 ]
r0 := @parameter0: java.util.Map$Entry;
$r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r1, null);
$r2 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r2, null);
$r3 = new java.util.AbstractMap$SimpleEntry;
specialinvoke $r3.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r3);
$r4 = new java.util.AbstractMap$SimpleImmutableEntry;
specialinvoke $r4.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r4);
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r5, \"null=null\");
$z0 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z0 == 0 goto interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"->"Block 2:
[preds: 0 ] [succs: 5 6 3 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
";
    "Block 0:
[preds: ] [succs: 1 2 5 6 ]
r0 := @parameter0: java.util.Map$Entry;
$r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r1, null);
$r2 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r2, null);
$r3 = new java.util.AbstractMap$SimpleEntry;
specialinvoke $r3.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r3);
$r4 = new java.util.AbstractMap$SimpleImmutableEntry;
specialinvoke $r4.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r4);
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r5, \"null=null\");
$z0 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z0 == 0 goto interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"->"Block 5:
[preds: 0 2 3 ] [succs: 7 ]
$r12 := @caughtexception;
r13 = $r12;
goto [?= return];
";
    "Block 0:
[preds: ] [succs: 1 2 5 6 ]
r0 := @parameter0: java.util.Map$Entry;
$r1 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getKey()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r1, null);
$r2 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r2, null);
$r3 = new java.util.AbstractMap$SimpleEntry;
specialinvoke $r3.<java.util.AbstractMap$SimpleEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r3);
$r4 = new java.util.AbstractMap$SimpleImmutableEntry;
specialinvoke $r4.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>(r0, $r4);
$r5 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r5, \"null=null\");
$z0 = r0 instanceof java.util.AbstractMap$SimpleEntry;
if $z0 == 0 goto interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"->"Block 6:
[preds: 0 2 3 ] [succs: 7 ]
$r11 := @caughtexception;
r14 = $r11;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r14);
";
    "Block 1:
[preds: 0 ] [succs: 7 ]
$r7 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
$r8 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r7);
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r8, null);
$r9 = interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object getValue()>();
$r10 = <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: java.lang.Long v>;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void equal(java.lang.Object,java.lang.Object)>($r9, $r10);
goto [?= return];
"->"Block 7:
[preds: 1 4 5 6 ] [succs: ]
return;
";
    "Block 2:
[preds: 0 ] [succs: 5 6 3 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"->"Block 5:
[preds: 0 2 3 ] [succs: 7 ]
$r12 := @caughtexception;
r13 = $r12;
goto [?= return];
";
    "Block 2:
[preds: 0 ] [succs: 5 6 3 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"->"Block 6:
[preds: 0 2 3 ] [succs: 7 ]
$r11 := @caughtexception;
r14 = $r11;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r14);
";
    "Block 2:
[preds: 0 ] [succs: 5 6 3 ]
interfaceinvoke r0.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(null);
"->"Block 3:
[preds: 2 ] [succs: 5 6 4 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
";
    "Block 3:
[preds: 2 ] [succs: 5 6 4 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
"->"Block 5:
[preds: 0 2 3 ] [succs: 7 ]
$r12 := @caughtexception;
r13 = $r12;
goto [?= return];
";
    "Block 3:
[preds: 2 ] [succs: 5 6 4 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
"->"Block 6:
[preds: 0 2 3 ] [succs: 7 ]
$r11 := @caughtexception;
r14 = $r11;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r14);
";
    "Block 3:
[preds: 2 ] [succs: 5 6 4 ]
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void fail()>();
"->"Block 4:
[preds: 3 ] [succs: 7 ]
goto [?= return];
";
    "Block 4:
[preds: 3 ] [succs: 7 ]
goto [?= return];
"->"Block 7:
[preds: 1 4 5 6 ] [succs: ]
return;
";
    "Block 5:
[preds: 0 2 3 ] [succs: 7 ]
$r12 := @caughtexception;
r13 = $r12;
goto [?= return];
"->"Block 7:
[preds: 1 4 5 6 ] [succs: ]
return;
";
    "Block 6:
[preds: 0 2 3 ] [succs: 7 ]
$r11 := @caughtexception;
r14 = $r11;
staticinvoke <jsr166tests.jtreg.util.AbstractMap.SimpleEntries: void unexpected(java.lang.Throwable)>(r14);
"->"Block 7:
[preds: 1 4 5 6 ] [succs: ]
return;
";
}
