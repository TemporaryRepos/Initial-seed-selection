digraph "unitGraph" {
    "r2 := @parameter0: java.lang.Object[]"
    "i1 := @parameter1: int"
    "i0 := @parameter2: int"
    "i4 = 0"
    "if i4 >= i0 goto return"
    "$r0 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>"
    "i2 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(i1)"
    "$r1 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>"
    "i3 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(i1)"
    "r3 = r2[i2]"
    "$r4 = r2[i3]"
    "r2[i2] = $r4"
    "r2[i3] = r3"
    "i4 = i4 + 1"
    "goto [?= (branch)]"
    "return"
    "r2 := @parameter0: java.lang.Object[]"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"i0 := @parameter2: int";
    "i0 := @parameter2: int"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto return";
    "if i4 >= i0 goto return"->"$r0 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>";
    "if i4 >= i0 goto return"->"return";
    "$r0 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>"->"i2 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(i1)";
    "i2 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(i1)"->"$r1 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>";
    "$r1 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>"->"i3 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(i1)";
    "i3 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(i1)"->"r3 = r2[i2]";
    "r3 = r2[i2]"->"$r4 = r2[i3]";
    "$r4 = r2[i3]"->"r2[i2] = $r4";
    "r2[i2] = $r4"->"r2[i3] = r3";
    "r2[i3] = r3"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto return";
}
