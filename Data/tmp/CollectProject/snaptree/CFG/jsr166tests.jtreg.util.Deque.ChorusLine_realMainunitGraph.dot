digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.ArrayDeque"
    "specialinvoke $r0.<java.util.ArrayDeque: void <init>(int)>(3)"
    "r1 = $r0"
    "$r2 = new java.util.ArrayDeque"
    "specialinvoke $r2.<java.util.ArrayDeque: void <init>()>()"
    "interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2)"
    "$r3 = new java.util.LinkedList"
    "specialinvoke $r3.<java.util.LinkedList: void <init>()>()"
    "interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3)"
    "$r4 = new java.util.concurrent.LinkedBlockingDeque"
    "specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>()>()"
    "interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4)"
    "staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)"
    "r5 = <jsr166tests.jtreg.util.Deque.ChorusLine: jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker[] tweakers>"
    "i0 = lengthof r5"
    "i1 = 0"
    "if i1 >= i0 goto return"
    "r6 = r5[i1]"
    "r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()"
    "$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"
    "if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)"
    "$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"
    "r9 = (java.util.Deque) $r8"
    "interfaceinvoke r6.<jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker: void run(java.util.Deque)>(r9)"
    "goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"$r0 = new java.util.ArrayDeque";
    "$r0 = new java.util.ArrayDeque"->"specialinvoke $r0.<java.util.ArrayDeque: void <init>(int)>(3)";
    "specialinvoke $r0.<java.util.ArrayDeque: void <init>(int)>(3)"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.util.ArrayDeque";
    "$r2 = new java.util.ArrayDeque"->"specialinvoke $r2.<java.util.ArrayDeque: void <init>()>()";
    "specialinvoke $r2.<java.util.ArrayDeque: void <init>()>()"->"interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2)";
    "interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2)"->"$r3 = new java.util.LinkedList";
    "$r3 = new java.util.LinkedList"->"specialinvoke $r3.<java.util.LinkedList: void <init>()>()";
    "specialinvoke $r3.<java.util.LinkedList: void <init>()>()"->"interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3)";
    "interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3)"->"$r4 = new java.util.concurrent.LinkedBlockingDeque";
    "$r4 = new java.util.concurrent.LinkedBlockingDeque"->"specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>()>()";
    "specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>()>()"->"interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4)";
    "interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4)"->"staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)";
    "staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)"->"r5 = <jsr166tests.jtreg.util.Deque.ChorusLine: jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker[] tweakers>";
    "r5 = <jsr166tests.jtreg.util.Deque.ChorusLine: jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker[] tweakers>"->"i0 = lengthof r5";
    "i0 = lengthof r5"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto return";
    "if i1 >= i0 goto return"->"r6 = r5[i1]";
    "if i1 >= i0 goto return"->"return";
    "r6 = r5[i1]"->"r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()";
    "r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>()"->"$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()"->"if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)";
    "if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)"->"$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()";
    "if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)"->"staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)";
    "$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>()"->"r9 = (java.util.Deque) $r8";
    "r9 = (java.util.Deque) $r8"->"interfaceinvoke r6.<jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker: void run(java.util.Deque)>(r9)";
    "interfaceinvoke r6.<jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker: void run(java.util.Deque)>(r9)"->"goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()]"->"$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()";
    "staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto return";
}
