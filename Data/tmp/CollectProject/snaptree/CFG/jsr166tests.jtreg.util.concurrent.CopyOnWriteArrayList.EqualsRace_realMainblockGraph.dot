digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r8 := @parameter0: java.lang.String[];
i0 = 100000;
$r0 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
r1 = $r0;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r3 = newarray (java.lang.Integer)[1];
$r3[0] = r2;
r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);
$r5 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace$1;
specialinvoke $r5.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace$1: void <init>(java.util.List,java.lang.Integer)>(r1, r2);
r6 = $r5;
virtualinvoke r6.<java.lang.Thread: void start()>();
i2 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 100000 goto virtualinvoke r6.<java.lang.Thread: void join()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>(r4);
$r7 = <java.util.Collections: java.util.List EMPTY_LIST>;
interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>($r7);
i2 = i2 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
virtualinvoke r6.<java.lang.Thread: void join()>();
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if $i1 != 0 goto $z2 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace: void check(boolean)>($z2)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
"
    "Block 6:
[preds: 4 5 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace: void check(boolean)>($z2);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r8 := @parameter0: java.lang.String[];
i0 = 100000;
$r0 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke $r0.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
r1 = $r0;
r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
$r3 = newarray (java.lang.Integer)[1];
$r3[0] = r2;
r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r3);
$r5 = new jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace$1;
specialinvoke $r5.<jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace$1: void <init>(java.util.List,java.lang.Integer)>(r1, r2);
r6 = $r5;
virtualinvoke r6.<java.lang.Thread: void start()>();
i2 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 100000 goto virtualinvoke r6.<java.lang.Thread: void join()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 100000 goto virtualinvoke r6.<java.lang.Thread: void join()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>(r4);
$r7 = <java.util.Collections: java.util.List EMPTY_LIST>;
interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>($r7);
i2 = i2 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 100000 goto virtualinvoke r6.<java.lang.Thread: void join()>();
"->"Block 3:
[preds: 1 ] [succs: 4 5 ]
virtualinvoke r6.<java.lang.Thread: void join()>();
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if $i1 != 0 goto $z2 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>(r4);
$r7 = <java.util.Collections: java.util.List EMPTY_LIST>;
interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>($r7);
i2 = i2 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i2 >= 100000 goto virtualinvoke r6.<java.lang.Thread: void join()>();
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
virtualinvoke r6.<java.lang.Thread: void join()>();
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if $i1 != 0 goto $z2 = 0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace: void check(boolean)>($z2)];
";
    "Block 3:
[preds: 1 ] [succs: 4 5 ]
virtualinvoke r6.<java.lang.Thread: void join()>();
$i1 = interfaceinvoke r1.<java.util.List: int size()>();
if $i1 != 0 goto $z2 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace: void check(boolean)>($z2)];
"->"Block 6:
[preds: 4 5 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace: void check(boolean)>($z2);
return;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z2 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CopyOnWriteArrayList.EqualsRace: void check(boolean)>($z2);
return;
";
}
