digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new jsr166tests.jtreg.util.AbstractSequentialList.FooList;
specialinvoke $r0.<jsr166tests.jtreg.util.AbstractSequentialList.FooList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"b\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"a\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"r\");
$r2 = newarray (java.lang.String)[3];
$r2[0] = \"f\";
$r2[1] = \"o\";
$r2[2] = \"o\";
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);
interfaceinvoke r1.<java.util.List: boolean addAll(int,java.util.Collection)>(0, $r3);
$r4 = newarray (java.lang.String)[6];
$r4[0] = \"f\";
$r4[1] = \"o\";
$r4[2] = \"o\";
$r4[3] = \"b\";
$r4[4] = \"a\";
$r4[5] = \"r\";
$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);
$z4 = interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>($r5);
if $z4 != 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"addAll is broken\");
throw $r6;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new jsr166tests.jtreg.util.AbstractSequentialList.FooList;
specialinvoke $r0.<jsr166tests.jtreg.util.AbstractSequentialList.FooList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"b\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"a\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"r\");
$r2 = newarray (java.lang.String)[3];
$r2[0] = \"f\";
$r2[1] = \"o\";
$r2[2] = \"o\";
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);
interfaceinvoke r1.<java.util.List: boolean addAll(int,java.util.Collection)>(0, $r3);
$r4 = newarray (java.lang.String)[6];
$r4[0] = \"f\";
$r4[1] = \"o\";
$r4[2] = \"o\";
$r4[3] = \"b\";
$r4[4] = \"a\";
$r4[5] = \"r\";
$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);
$z4 = interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>($r5);
if $z4 != 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.Exception;
specialinvoke $r6.<java.lang.Exception: void <init>(java.lang.String)>(\"addAll is broken\");
throw $r6;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r7 := @parameter0: java.lang.String[];
$r0 = new jsr166tests.jtreg.util.AbstractSequentialList.FooList;
specialinvoke $r0.<jsr166tests.jtreg.util.AbstractSequentialList.FooList: void <init>()>();
r1 = $r0;
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"b\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"a\");
interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(\"r\");
$r2 = newarray (java.lang.String)[3];
$r2[0] = \"f\";
$r2[1] = \"o\";
$r2[2] = \"o\";
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);
interfaceinvoke r1.<java.util.List: boolean addAll(int,java.util.Collection)>(0, $r3);
$r4 = newarray (java.lang.String)[6];
$r4[0] = \"f\";
$r4[1] = \"o\";
$r4[2] = \"o\";
$r4[3] = \"b\";
$r4[4] = \"a\";
$r4[5] = \"r\";
$r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);
$z4 = interfaceinvoke r1.<java.util.List: boolean equals(java.lang.Object)>($r5);
if $z4 != 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
