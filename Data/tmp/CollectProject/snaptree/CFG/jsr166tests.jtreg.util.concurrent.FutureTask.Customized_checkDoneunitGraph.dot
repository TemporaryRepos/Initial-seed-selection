digraph "unitGraph" {
    "r0 := @parameter0: java.util.concurrent.FutureTask"
    "$z0 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isDone()>()"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0)"
    "$z1 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isCancelled()>()"
    "if $z1 != 0 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)]"
    "$z2 = 0"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)"
    "$r1 = virtualinvoke r0.<java.util.concurrent.FutureTask: java.lang.Object get()>()"
    "if $r1 == null goto $z3 = 0"
    "$z3 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)]"
    "$z3 = 0"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)"
    "goto [?= return]"
    "$r2 := @caughtexception"
    "r3 = $r2"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r3)"
    "return"
    "r0 := @parameter0: java.util.concurrent.FutureTask"->"$z0 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isDone()>()";
    "r0 := @parameter0: java.util.concurrent.FutureTask"->"$r2 := @caughtexception";
    "$z0 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isDone()>()"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0)";
    "$z0 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isDone()>()"->"$r2 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0)"->"$z1 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isCancelled()>()";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0)"->"$r2 := @caughtexception";
    "$z1 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isCancelled()>()"->"if $z1 != 0 goto $z2 = 0";
    "$z1 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isCancelled()>()"->"$r2 := @caughtexception";
    "if $z1 != 0 goto $z2 = 0"->"$z2 = 1";
    "if $z1 != 0 goto $z2 = 0"->"$z2 = 0";
    "if $z1 != 0 goto $z2 = 0"->"$r2 := @caughtexception";
    "$z2 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)]";
    "$z2 = 1"->"$r2 := @caughtexception";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)]"->"$r2 := @caughtexception";
    "$z2 = 0"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)";
    "$z2 = 0"->"$r2 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)"->"$r1 = virtualinvoke r0.<java.util.concurrent.FutureTask: java.lang.Object get()>()";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)"->"$r2 := @caughtexception";
    "$r1 = virtualinvoke r0.<java.util.concurrent.FutureTask: java.lang.Object get()>()"->"if $r1 == null goto $z3 = 0";
    "$r1 = virtualinvoke r0.<java.util.concurrent.FutureTask: java.lang.Object get()>()"->"$r2 := @caughtexception";
    "if $r1 == null goto $z3 = 0"->"$z3 = 1";
    "if $r1 == null goto $z3 = 0"->"$z3 = 0";
    "if $r1 == null goto $z3 = 0"->"$r2 := @caughtexception";
    "$z3 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)]";
    "$z3 = 1"->"$r2 := @caughtexception";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)]"->"$r2 := @caughtexception";
    "$z3 = 0"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)";
    "$z3 = 0"->"$r2 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)"->"goto [?= return]";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z3)"->"$r2 := @caughtexception";
    "goto [?= return]"->"return";
    "$r2 := @caughtexception"->"r3 = $r2";
    "r3 = $r2"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r3)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r3)"->"return";
}
