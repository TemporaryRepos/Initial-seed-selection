digraph "unitGraph" {
    "r32 := @parameter0: java.lang.String[]"
    "b0 = 100"
    "b1 = 100"
    "i13 = 0"
    "if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"
    "r33 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"
    "r34 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"
    "i14 = 0"
    "if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>()"
    "$r29 = new java.lang.Integer"
    "$r30 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Random rnd>"
    "$i12 = virtualinvoke $r30.<java.util.Random: int nextInt()>()"
    "specialinvoke $r29.<java.lang.Integer: void <init>(int)>($i12)"
    "r35 = $r29"
    "$z20 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r35)"
    "if $z20 != 0 goto $r29 = new java.lang.Integer"
    "interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r34)"
    "r34 = r35"
    "i14 = i14 + 1"
    "goto [?= (branch)]"
    "$i5 = interfaceinvoke r33.<java.util.Map: int size()>()"
    "if $i5 == b1 goto $r13 = new java.util.HashMap"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Size not as expected.\")"
    "$r13 = new java.util.HashMap"
    "specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>(r33)"
    "r36 = $r13"
    "$i6 = virtualinvoke r36.<java.util.HashMap: int hashCode()>()"
    "$i7 = interfaceinvoke r33.<java.util.Map: int hashCode()>()"
    "if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")"
    "$r25 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()"
    "$i8 = interfaceinvoke $r25.<java.util.Set: int hashCode()>()"
    "$r26 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()"
    "$i9 = interfaceinvoke $r26.<java.util.Set: int hashCode()>()"
    "if $i8 != $i9 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")"
    "$r27 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()"
    "$i10 = interfaceinvoke $r27.<java.util.Set: int hashCode()>()"
    "$r28 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()"
    "$i11 = interfaceinvoke $r28.<java.util.Set: int hashCode()>()"
    "if $i10 == $i11 goto $z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")"
    "$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33)"
    "if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"
    "$r17 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()"
    "$r18 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()"
    "$z15 = interfaceinvoke $r17.<java.util.Set: boolean equals(java.lang.Object)>($r18)"
    "if $z15 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"
    "$r19 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()"
    "$r20 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()"
    "$z16 = interfaceinvoke $r19.<java.util.Set: boolean equals(java.lang.Object)>($r20)"
    "if $z16 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"
    "$z17 = interfaceinvoke r33.<java.util.Map: boolean equals(java.lang.Object)>(r36)"
    "if $z17 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"
    "$r21 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()"
    "$r22 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()"
    "$z18 = interfaceinvoke $r21.<java.util.Set: boolean equals(java.lang.Object)>($r22)"
    "if $z18 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"
    "$r23 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()"
    "$r24 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()"
    "$z19 = interfaceinvoke $r23.<java.util.Set: boolean equals(java.lang.Object)>($r24)"
    "if $z19 != 0 goto r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"
    "r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"
    "interfaceinvoke r37.<java.util.Map: void putAll(java.util.Map)>(r33)"
    "$r38 = interfaceinvoke r37.<java.util.Map: java.util.Collection values()>()"
    "$r39 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()"
    "interfaceinvoke $r38.<java.util.Collection: boolean removeAll(java.util.Collection)>($r39)"
    "$i15 = interfaceinvoke r37.<java.util.Map: int size()>()"
    "if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\")"
    "$r16 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"
    "$z14 = interfaceinvoke r37.<java.util.Map: boolean containsValue(java.lang.Object)>($r16)"
    "if $z14 != 0 goto i16 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\")"
    "i16 = 0"
    "$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"
    "if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>()"
    "$z13 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r34)"
    "if $z13 != 0 goto r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list doesn\'t contain a link.\")"
    "r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)"
    "if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Could not retrieve a link.\")"
    "interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34)"
    "r34 = r14"
    "i16 = i16 + 1"
    "goto [?= $r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>]"
    "$z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>()"
    "if $z12 != 0 goto (branch)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Map nonempty after removing all links.\")"
    "if i16 == b1 goto i13 = i13 + 1"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list size not as expected.\")"
    "i13 = i13 + 1"
    "r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"
    "i17 = 0"
    "if i17 >= b1 goto i18 = 0"
    "$r10 = new java.lang.Integer"
    "specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i17)"
    "$r11 = new java.lang.Integer"
    "$i4 = 2 * i17"
    "specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i4)"
    "$r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11)"
    "if $r12 == null goto i17 = i17 + 1"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a non-null value erroenously.\")"
    "i17 = i17 + 1"
    "i18 = 0"
    "$i2 = 2 * b1"
    "if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"
    "$r5 = new java.lang.Integer"
    "specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i18)"
    "$z10 = interfaceinvoke r41.<java.util.Map: boolean containsValue(java.lang.Object)>($r5)"
    "$i3 = i18 % 2"
    "if $i3 != 0 goto $z22 = 0"
    "$z22 = 1"
    "$z22 = 0"
    "if $z10 == $z22 goto i18 = i18 + 1"
    "$r6 = new java.lang.StringBuilder"
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \")"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>($r9)"
    "i18 = i18 + 1"
    "goto [?= $i2 = 2 * b1]"
    "$r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"
    "$r0 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"
    "$r2 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0)"
    "if $r2 != null goto r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a null value erroenously.\")"
    "r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"
    "interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)"
    "$z0 = interfaceinvoke r41.<java.util.Map: boolean equals(java.lang.Object)>(r42)"
    "if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (1)\")"
    "$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41)"
    "if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (2)\")"
    "r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"
    "r44 = interfaceinvoke r42.<java.util.Map: java.util.Set entrySet()>()"
    "$z2 = interfaceinvoke r43.<java.util.Set: boolean equals(java.lang.Object)>(r44)"
    "if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (3)\")"
    "$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43)"
    "if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (4)\")"
    "$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44)"
    "if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Original doesn\'t contain clone!\")"
    "$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43)"
    "if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone doesn\'t contain original!\")"
    "interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43)"
    "$z7 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>()"
    "if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"entrySet().removeAll failed.\")"
    "interfaceinvoke r42.<java.util.Map: void clear()>()"
    "$z8 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>()"
    "if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"clear failed.\")"
    "$r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"
    "r45 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()"
    "$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()"
    "if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>()"
    "interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()"
    "interfaceinvoke r45.<java.util.Iterator: void remove()>()"
    "goto [?= $z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]"
    "$z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>()"
    "if $z9 != 0 goto return"
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Iterator.remove() failed\")"
    "return"
    "r32 := @parameter0: java.lang.String[]"->"b0 = 100";
    "b0 = 100"->"b1 = 100";
    "b1 = 100"->"i13 = 0";
    "i13 = 0"->"if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"r33 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "r33 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"r34 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>";
    "r34 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"->"i14 = 0";
    "i14 = 0"->"if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>()";
    "if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>()"->"$r29 = new java.lang.Integer";
    "if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>()"->"$i5 = interfaceinvoke r33.<java.util.Map: int size()>()";
    "$r29 = new java.lang.Integer"->"$r30 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Random rnd>";
    "$r30 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Random rnd>"->"$i12 = virtualinvoke $r30.<java.util.Random: int nextInt()>()";
    "$i12 = virtualinvoke $r30.<java.util.Random: int nextInt()>()"->"specialinvoke $r29.<java.lang.Integer: void <init>(int)>($i12)";
    "specialinvoke $r29.<java.lang.Integer: void <init>(int)>($i12)"->"r35 = $r29";
    "r35 = $r29"->"$z20 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r35)";
    "$z20 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r35)"->"if $z20 != 0 goto $r29 = new java.lang.Integer";
    "if $z20 != 0 goto $r29 = new java.lang.Integer"->"interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r34)";
    "if $z20 != 0 goto $r29 = new java.lang.Integer"->"$r29 = new java.lang.Integer";
    "interfaceinvoke r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, r34)"->"r34 = r35";
    "r34 = r35"->"i14 = i14 + 1";
    "i14 = i14 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i14 >= b1 goto $i5 = interfaceinvoke r33.<java.util.Map: int size()>()";
    "$i5 = interfaceinvoke r33.<java.util.Map: int size()>()"->"if $i5 == b1 goto $r13 = new java.util.HashMap";
    "if $i5 == b1 goto $r13 = new java.util.HashMap"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Size not as expected.\")";
    "if $i5 == b1 goto $r13 = new java.util.HashMap"->"$r13 = new java.util.HashMap";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Size not as expected.\")"->"$r13 = new java.util.HashMap";
    "$r13 = new java.util.HashMap"->"specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>(r33)";
    "specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>(r33)"->"r36 = $r13";
    "r36 = $r13"->"$i6 = virtualinvoke r36.<java.util.HashMap: int hashCode()>()";
    "$i6 = virtualinvoke r36.<java.util.HashMap: int hashCode()>()"->"$i7 = interfaceinvoke r33.<java.util.Map: int hashCode()>()";
    "$i7 = interfaceinvoke r33.<java.util.Map: int hashCode()>()"->"if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")";
    "if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")"->"$r25 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()";
    "if $i6 != $i7 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")";
    "$r25 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()"->"$i8 = interfaceinvoke $r25.<java.util.Set: int hashCode()>()";
    "$i8 = interfaceinvoke $r25.<java.util.Set: int hashCode()>()"->"$r26 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()";
    "$r26 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()"->"$i9 = interfaceinvoke $r26.<java.util.Set: int hashCode()>()";
    "$i9 = interfaceinvoke $r26.<java.util.Set: int hashCode()>()"->"if $i8 != $i9 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")";
    "if $i8 != $i9 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")"->"$r27 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()";
    "if $i8 != $i9 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")";
    "$r27 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()"->"$i10 = interfaceinvoke $r27.<java.util.Set: int hashCode()>()";
    "$i10 = interfaceinvoke $r27.<java.util.Set: int hashCode()>()"->"$r28 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()";
    "$r28 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()"->"$i11 = interfaceinvoke $r28.<java.util.Set: int hashCode()>()";
    "$i11 = interfaceinvoke $r28.<java.util.Set: int hashCode()>()"->"if $i10 == $i11 goto $z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33)";
    "if $i10 == $i11 goto $z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")";
    "if $i10 == $i11 goto $z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33)"->"$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect hashCode computation.\")"->"$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33)";
    "$z21 = virtualinvoke r36.<java.util.HashMap: boolean equals(java.lang.Object)>(r33)"->"if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"$r17 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()";
    "if $z21 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "$r17 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()"->"$r18 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()";
    "$r18 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()"->"$z15 = interfaceinvoke $r17.<java.util.Set: boolean equals(java.lang.Object)>($r18)";
    "$z15 = interfaceinvoke $r17.<java.util.Set: boolean equals(java.lang.Object)>($r18)"->"if $z15 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "if $z15 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"$r19 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()";
    "if $z15 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "$r19 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()"->"$r20 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()";
    "$r20 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()"->"$z16 = interfaceinvoke $r19.<java.util.Set: boolean equals(java.lang.Object)>($r20)";
    "$z16 = interfaceinvoke $r19.<java.util.Set: boolean equals(java.lang.Object)>($r20)"->"if $z16 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "if $z16 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"$z17 = interfaceinvoke r33.<java.util.Map: boolean equals(java.lang.Object)>(r36)";
    "if $z16 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "$z17 = interfaceinvoke r33.<java.util.Map: boolean equals(java.lang.Object)>(r36)"->"if $z17 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "if $z17 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"$r21 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()";
    "if $z17 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "$r21 = interfaceinvoke r33.<java.util.Map: java.util.Set entrySet()>()"->"$r22 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()";
    "$r22 = virtualinvoke r36.<java.util.HashMap: java.util.Set entrySet()>()"->"$z18 = interfaceinvoke $r21.<java.util.Set: boolean equals(java.lang.Object)>($r22)";
    "$z18 = interfaceinvoke $r21.<java.util.Set: boolean equals(java.lang.Object)>($r22)"->"if $z18 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "if $z18 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"$r23 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()";
    "if $z18 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "$r23 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()"->"$r24 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()";
    "$r24 = virtualinvoke r36.<java.util.HashMap: java.util.Set keySet()>()"->"$z19 = interfaceinvoke $r23.<java.util.Set: boolean equals(java.lang.Object)>($r24)";
    "$z19 = interfaceinvoke $r23.<java.util.Set: boolean equals(java.lang.Object)>($r24)"->"if $z19 != 0 goto r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "if $z19 != 0 goto r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")";
    "if $z19 != 0 goto r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Incorrect equals computation.\")"->"r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"interfaceinvoke r37.<java.util.Map: void putAll(java.util.Map)>(r33)";
    "interfaceinvoke r37.<java.util.Map: void putAll(java.util.Map)>(r33)"->"$r38 = interfaceinvoke r37.<java.util.Map: java.util.Collection values()>()";
    "$r38 = interfaceinvoke r37.<java.util.Map: java.util.Collection values()>()"->"$r39 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()";
    "$r39 = interfaceinvoke r33.<java.util.Map: java.util.Set keySet()>()"->"interfaceinvoke $r38.<java.util.Collection: boolean removeAll(java.util.Collection)>($r39)";
    "interfaceinvoke $r38.<java.util.Collection: boolean removeAll(java.util.Collection)>($r39)"->"$i15 = interfaceinvoke r37.<java.util.Map: int size()>()";
    "$i15 = interfaceinvoke r37.<java.util.Map: int size()>()"->"if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\")";
    "if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\")"->"$r16 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>";
    "if $i15 != 1 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\")";
    "$r16 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"->"$z14 = interfaceinvoke r37.<java.util.Map: boolean containsValue(java.lang.Object)>($r16)";
    "$z14 = interfaceinvoke r37.<java.util.Map: boolean containsValue(java.lang.Object)>($r16)"->"if $z14 != 0 goto i16 = 0";
    "if $z14 != 0 goto i16 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\")";
    "if $z14 != 0 goto i16 = 0"->"i16 = 0";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Collection views test failed.\")"->"i16 = 0";
    "i16 = 0"->"$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>";
    "$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"->"if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>()";
    "if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>()"->"$z13 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r34)";
    "if r34 == $r40 goto $z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>()"->"$z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>()";
    "$z13 = interfaceinvoke r33.<java.util.Map: boolean containsKey(java.lang.Object)>(r34)"->"if $z13 != 0 goto r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)";
    "if $z13 != 0 goto r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list doesn\'t contain a link.\")";
    "if $z13 != 0 goto r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)"->"r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list doesn\'t contain a link.\")"->"r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)";
    "r14 = interfaceinvoke r33.<java.util.Map: java.lang.Object get(java.lang.Object)>(r34)"->"if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34)";
    "if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Could not retrieve a link.\")";
    "if r14 != null goto interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34)"->"interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Could not retrieve a link.\")"->"interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34)";
    "interfaceinvoke r33.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r34)"->"r34 = r14";
    "r34 = r14"->"i16 = i16 + 1";
    "i16 = i16 + 1"->"goto [?= $r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>]";
    "goto [?= $r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>]"->"$r40 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>";
    "$z12 = interfaceinvoke r33.<java.util.Map: boolean isEmpty()>()"->"if $z12 != 0 goto (branch)";
    "if $z12 != 0 goto (branch)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Map nonempty after removing all links.\")";
    "if $z12 != 0 goto (branch)"->"if i16 == b1 goto i13 = i13 + 1";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Map nonempty after removing all links.\")"->"if i16 == b1 goto i13 = i13 + 1";
    "if i16 == b1 goto i13 = i13 + 1"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list size not as expected.\")";
    "if i16 == b1 goto i13 = i13 + 1"->"i13 = i13 + 1";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Linked list size not as expected.\")"->"i13 = i13 + 1";
    "i13 = i13 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i13 >= b0 goto r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"i17 = 0";
    "i17 = 0"->"if i17 >= b1 goto i18 = 0";
    "if i17 >= b1 goto i18 = 0"->"$r10 = new java.lang.Integer";
    "if i17 >= b1 goto i18 = 0"->"i18 = 0";
    "$r10 = new java.lang.Integer"->"specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i17)";
    "specialinvoke $r10.<java.lang.Integer: void <init>(int)>(i17)"->"$r11 = new java.lang.Integer";
    "$r11 = new java.lang.Integer"->"$i4 = 2 * i17";
    "$i4 = 2 * i17"->"specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i4)";
    "specialinvoke $r11.<java.lang.Integer: void <init>(int)>($i4)"->"$r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11)";
    "$r12 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r10, $r11)"->"if $r12 == null goto i17 = i17 + 1";
    "if $r12 == null goto i17 = i17 + 1"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a non-null value erroenously.\")";
    "if $r12 == null goto i17 = i17 + 1"->"i17 = i17 + 1";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a non-null value erroenously.\")"->"i17 = i17 + 1";
    "i17 = i17 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i17 >= b1 goto i18 = 0";
    "i18 = 0"->"$i2 = 2 * b1";
    "$i2 = 2 * b1"->"if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>";
    "if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"->"$r5 = new java.lang.Integer";
    "if i18 >= $i2 goto $r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"->"$r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>";
    "$r5 = new java.lang.Integer"->"specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i18)";
    "specialinvoke $r5.<java.lang.Integer: void <init>(int)>(i18)"->"$z10 = interfaceinvoke r41.<java.util.Map: boolean containsValue(java.lang.Object)>($r5)";
    "$z10 = interfaceinvoke r41.<java.util.Map: boolean containsValue(java.lang.Object)>($r5)"->"$i3 = i18 % 2";
    "$i3 = i18 % 2"->"if $i3 != 0 goto $z22 = 0";
    "if $i3 != 0 goto $z22 = 0"->"$z22 = 1";
    "if $i3 != 0 goto $z22 = 0"->"$z22 = 0";
    "$z22 = 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if $z10 == $z22 goto i18 = i18 + 1";
    "$z22 = 0"->"if $z10 == $z22 goto i18 = i18 + 1";
    "if $z10 == $z22 goto i18 = i18 + 1"->"$r6 = new java.lang.StringBuilder";
    "if $z10 == $z22 goto i18 = i18 + 1"->"i18 = i18 + 1";
    "$r6 = new java.lang.StringBuilder"->"specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \")";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"contains value \")"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>($r9)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>($r9)"->"i18 = i18 + 1";
    "i18 = i18 + 1"->"goto [?= $i2 = 2 * b1]";
    "goto [?= $i2 = 2 * b1]"->"$i2 = 2 * b1";
    "$r1 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"->"$r0 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>";
    "$r0 = <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.lang.Object nil>"->"$r2 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0)";
    "$r2 = interfaceinvoke r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r0)"->"if $r2 != null goto r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "if $r2 != null goto r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a null value erroenously.\")";
    "if $r2 != null goto r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"put returns a null value erroenously.\")"->"r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()";
    "r42 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: java.util.Map newMap()>()"->"interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)";
    "interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)"->"$z0 = interfaceinvoke r41.<java.util.Map: boolean equals(java.lang.Object)>(r42)";
    "$z0 = interfaceinvoke r41.<java.util.Map: boolean equals(java.lang.Object)>(r42)"->"if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41)";
    "if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (1)\")";
    "if $z0 != 0 goto $z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41)"->"$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (1)\")"->"$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41)";
    "$z1 = interfaceinvoke r42.<java.util.Map: boolean equals(java.lang.Object)>(r41)"->"if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()";
    "if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (2)\")";
    "if $z1 != 0 goto r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"->"r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (2)\")"->"r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()";
    "r43 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"->"r44 = interfaceinvoke r42.<java.util.Map: java.util.Set entrySet()>()";
    "r44 = interfaceinvoke r42.<java.util.Map: java.util.Set entrySet()>()"->"$z2 = interfaceinvoke r43.<java.util.Set: boolean equals(java.lang.Object)>(r44)";
    "$z2 = interfaceinvoke r43.<java.util.Set: boolean equals(java.lang.Object)>(r44)"->"if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43)";
    "if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (3)\")";
    "if $z2 != 0 goto $z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43)"->"$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (3)\")"->"$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43)";
    "$z3 = interfaceinvoke r44.<java.util.Set: boolean equals(java.lang.Object)>(r43)"->"if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44)";
    "if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (4)\")";
    "if $z3 != 0 goto $z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44)"->"$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone not equal to original. (4)\")"->"$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44)";
    "$z4 = interfaceinvoke r43.<java.util.Set: boolean containsAll(java.util.Collection)>(r44)"->"if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43)";
    "if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Original doesn\'t contain clone!\")";
    "if $z4 != 0 goto $z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43)"->"$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Original doesn\'t contain clone!\")"->"$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43)";
    "$z5 = interfaceinvoke r44.<java.util.Set: boolean containsAll(java.util.Collection)>(r43)"->"if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43)";
    "if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone doesn\'t contain original!\")";
    "if $z5 != 0 goto interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43)"->"interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Clone doesn\'t contain original!\")"->"interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43)";
    "interfaceinvoke r44.<java.util.Set: boolean removeAll(java.util.Collection)>(r43)"->"$z7 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>()";
    "$z7 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>()"->"if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)";
    "if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"entrySet().removeAll failed.\")";
    "if $z7 != 0 goto interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)"->"interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"entrySet().removeAll failed.\")"->"interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)";
    "interfaceinvoke r42.<java.util.Map: void putAll(java.util.Map)>(r41)"->"interfaceinvoke r42.<java.util.Map: void clear()>()";
    "interfaceinvoke r42.<java.util.Map: void clear()>()"->"$z8 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>()";
    "$z8 = interfaceinvoke r42.<java.util.Map: boolean isEmpty()>()"->"if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()";
    "if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"clear failed.\")";
    "if $z8 != 0 goto $r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"->"$r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"clear failed.\")"->"$r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()";
    "$r3 = interfaceinvoke r41.<java.util.Map: java.util.Set entrySet()>()"->"r45 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()";
    "r45 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()"->"$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()";
    "$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()"->"if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>()";
    "if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>()"->"interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()";
    "if $z23 == 0 goto $z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>()"->"$z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>()";
    "interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>()"->"interfaceinvoke r45.<java.util.Iterator: void remove()>()";
    "interfaceinvoke r45.<java.util.Iterator: void remove()>()"->"goto [?= $z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]";
    "goto [?= $z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()]"->"$z23 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>()";
    "$z9 = interfaceinvoke r41.<java.util.Map: boolean isEmpty()>()"->"if $z9 != 0 goto return";
    "if $z9 != 0 goto return"->"staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Iterator.remove() failed\")";
    "if $z9 != 0 goto return"->"return";
    "staticinvoke <jsr166tests.jtreg.util.Collections.CheckedMapBash: void fail(java.lang.String)>(\"Iterator.remove() failed\")"->"return";
}
