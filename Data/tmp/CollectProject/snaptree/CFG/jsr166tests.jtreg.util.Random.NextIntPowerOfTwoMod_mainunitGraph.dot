digraph "unitGraph" {
    "r3 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.Random"
    "specialinvoke $r0.<java.util.Random: void <init>(long)>(69L)"
    "r1 = $r0"
    "i1 = 0"
    "i2 = 0"
    "if i2 >= 1000 goto (branch)"
    "$i0 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(16)"
    "i1 = i1 + $i0"
    "i2 = i2 + 1"
    "goto [?= (branch)]"
    "if i1 == 7639 goto return"
    "$r2 = new java.lang.RuntimeException"
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Not using correct algorithm.\")"
    "throw $r2"
    "return"
    "r3 := @parameter0: java.lang.String[]"->"$r0 = new java.util.Random";
    "$r0 = new java.util.Random"->"specialinvoke $r0.<java.util.Random: void <init>(long)>(69L)";
    "specialinvoke $r0.<java.util.Random: void <init>(long)>(69L)"->"r1 = $r0";
    "r1 = $r0"->"i1 = 0";
    "i1 = 0"->"i2 = 0";
    "i2 = 0"->"if i2 >= 1000 goto (branch)";
    "if i2 >= 1000 goto (branch)"->"$i0 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(16)";
    "if i2 >= 1000 goto (branch)"->"if i1 == 7639 goto return";
    "$i0 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(16)"->"i1 = i1 + $i0";
    "i1 = i1 + $i0"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 1000 goto (branch)";
    "if i1 == 7639 goto return"->"$r2 = new java.lang.RuntimeException";
    "if i1 == 7639 goto return"->"return";
    "$r2 = new java.lang.RuntimeException"->"specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Not using correct algorithm.\")";
    "specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Not using correct algorithm.\")"->"throw $r2";
}
