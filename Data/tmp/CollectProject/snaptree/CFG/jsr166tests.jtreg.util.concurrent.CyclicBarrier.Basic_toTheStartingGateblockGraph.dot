digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 5 ]
$r1 = <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: java.util.concurrent.CyclicBarrier atTheStartingGate>;
"
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
"
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
virtualinvoke $r1.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(10L, $r0);
"
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
goto [?= return];
"
    "Block 5:
[preds: 0 1 2 3 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void unexpected(java.lang.Throwable)>(r3);
$r4 = <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: java.util.concurrent.CyclicBarrier atTheStartingGate>;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void reset(java.util.concurrent.CyclicBarrier)>($r4);
$r5 = new java.lang.Error;
specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>(r3);
throw $r5;
"
    "Block 6:
[preds: 4 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 5 ]
$r1 = <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: java.util.concurrent.CyclicBarrier atTheStartingGate>;
"->"Block 1:
[preds: 0 ] [succs: 2 5 ]
$r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
";
    "Block 0:
[preds: ] [succs: 1 5 ]
$r1 = <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: java.util.concurrent.CyclicBarrier atTheStartingGate>;
"->"Block 5:
[preds: 0 1 2 3 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void unexpected(java.lang.Throwable)>(r3);
$r4 = <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: java.util.concurrent.CyclicBarrier atTheStartingGate>;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void reset(java.util.concurrent.CyclicBarrier)>($r4);
$r5 = new java.lang.Error;
specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>(r3);
throw $r5;
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
"->"Block 2:
[preds: 1 ] [succs: 3 5 ]
virtualinvoke $r1.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(10L, $r0);
";
    "Block 1:
[preds: 0 ] [succs: 2 5 ]
$r0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
"->"Block 5:
[preds: 0 1 2 3 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void unexpected(java.lang.Throwable)>(r3);
$r4 = <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: java.util.concurrent.CyclicBarrier atTheStartingGate>;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void reset(java.util.concurrent.CyclicBarrier)>($r4);
$r5 = new java.lang.Error;
specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>(r3);
throw $r5;
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
virtualinvoke $r1.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(10L, $r0);
"->"Block 3:
[preds: 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
";
    "Block 2:
[preds: 1 ] [succs: 3 5 ]
virtualinvoke $r1.<java.util.concurrent.CyclicBarrier: int await(long,java.util.concurrent.TimeUnit)>(10L, $r0);
"->"Block 5:
[preds: 0 1 2 3 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void unexpected(java.lang.Throwable)>(r3);
$r4 = <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: java.util.concurrent.CyclicBarrier atTheStartingGate>;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void reset(java.util.concurrent.CyclicBarrier)>($r4);
$r5 = new java.lang.Error;
specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>(r3);
throw $r5;
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"->"Block 4:
[preds: 3 ] [succs: 6 ]
goto [?= return];
";
    "Block 3:
[preds: 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"->"Block 5:
[preds: 0 1 2 3 ] [succs: ]
$r2 := @caughtexception;
r3 = $r2;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void unexpected(java.lang.Throwable)>(r3);
$r4 = <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: java.util.concurrent.CyclicBarrier atTheStartingGate>;
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void reset(java.util.concurrent.CyclicBarrier)>($r4);
$r5 = new java.lang.Error;
specialinvoke $r5.<java.lang.Error: void <init>(java.lang.Throwable)>(r3);
throw $r5;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
goto [?= return];
"->"Block 6:
[preds: 4 ] [succs: ]
return;
";
}
