digraph "unitGraph" {
    "r7 := @this: jsr166tests.jtreg.util.Map.LockStep"
    "r0 := @parameter0: java.util.Map"
    "r1 := @parameter1: java.util.Iterator"
    "i0 = interfaceinvoke r0.<java.util.Map: int size()>()"
    "interfaceinvoke r1.<java.util.Iterator: void remove()>()"
    "$i1 = interfaceinvoke r0.<java.util.Map: int size()>()"
    "$i2 = i0 - 1"
    "if $i1 == $i2 goto return"
    "$r2 = new java.lang.Error"
    "$r3 = newarray (java.lang.Object)[2]"
    "$r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>()"
    "$r3[0] = $r4"
    "$i3 = interfaceinvoke r0.<java.util.Map: int size()>()"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"
    "$r3[1] = $r5"
    "$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Incorrect size!%nmap=%s, size=%d%n\", $r3)"
    "specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r6)"
    "throw $r2"
    "return"
    "r7 := @this: jsr166tests.jtreg.util.Map.LockStep"->"r0 := @parameter0: java.util.Map";
    "r0 := @parameter0: java.util.Map"->"r1 := @parameter1: java.util.Iterator";
    "r1 := @parameter1: java.util.Iterator"->"i0 = interfaceinvoke r0.<java.util.Map: int size()>()";
    "i0 = interfaceinvoke r0.<java.util.Map: int size()>()"->"interfaceinvoke r1.<java.util.Iterator: void remove()>()";
    "interfaceinvoke r1.<java.util.Iterator: void remove()>()"->"$i1 = interfaceinvoke r0.<java.util.Map: int size()>()";
    "$i1 = interfaceinvoke r0.<java.util.Map: int size()>()"->"$i2 = i0 - 1";
    "$i2 = i0 - 1"->"if $i1 == $i2 goto return";
    "if $i1 == $i2 goto return"->"$r2 = new java.lang.Error";
    "if $i1 == $i2 goto return"->"return";
    "$r2 = new java.lang.Error"->"$r3 = newarray (java.lang.Object)[2]";
    "$r3 = newarray (java.lang.Object)[2]"->"$r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>()";
    "$r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>()"->"$r3[0] = $r4";
    "$r3[0] = $r4"->"$i3 = interfaceinvoke r0.<java.util.Map: int size()>()";
    "$i3 = interfaceinvoke r0.<java.util.Map: int size()>()"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"->"$r3[1] = $r5";
    "$r3[1] = $r5"->"$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Incorrect size!%nmap=%s, size=%d%n\", $r3)";
    "$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Incorrect size!%nmap=%s, size=%d%n\", $r3)"->"specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r6)";
    "specialinvoke $r2.<java.lang.Error: void <init>(java.lang.String)>($r6)"->"throw $r2";
}
