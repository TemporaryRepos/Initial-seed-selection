digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: void realMain(java.lang.String[])>(r0)"
    "goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]"
    "$r7 := @caughtexception"
    "r8 = $r7"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: void unexpected(java.lang.Throwable)>(r8)"
    "$r2 = <java.lang.System: java.io.PrintStream out>"
    "$r1 = newarray (java.lang.Object)[2]"
    "$i0 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int passed>"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r1[0] = $r3"
    "$i1 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int failed>"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$r1[1] = $r4"
    "virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r1)"
    "$i2 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int failed>"
    "if $i2 <= 0 goto return"
    "$r6 = new java.lang.AssertionError"
    "specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Some tests failed\")"
    "throw $r6"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: void realMain(java.lang.String[])>(r0)";
    "r0 := @parameter0: java.lang.String[]"->"$r7 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: void realMain(java.lang.String[])>(r0)"->"goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: void realMain(java.lang.String[])>(r0)"->"$r7 := @caughtexception";
    "goto [?= $r2 = <java.lang.System: java.io.PrintStream out>]"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r7 := @caughtexception"->"r8 = $r7";
    "r8 = $r7"->"staticinvoke <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: void unexpected(java.lang.Throwable)>(r8)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: void unexpected(java.lang.Throwable)>(r8)"->"$r2 = <java.lang.System: java.io.PrintStream out>";
    "$r2 = <java.lang.System: java.io.PrintStream out>"->"$r1 = newarray (java.lang.Object)[2]";
    "$r1 = newarray (java.lang.Object)[2]"->"$i0 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int passed>";
    "$i0 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int passed>"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r1[0] = $r3";
    "$r1[0] = $r3"->"$i1 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int failed>";
    "$i1 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int failed>"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$r1[1] = $r4";
    "$r1[1] = $r4"->"virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r1)";
    "virtualinvoke $r2.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r1)"->"$i2 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int failed>";
    "$i2 = <jsr166tests.jtreg.util.concurrent.DelayQueue.Iterate: int failed>"->"if $i2 <= 0 goto return";
    "if $i2 <= 0 goto return"->"$r6 = new java.lang.AssertionError";
    "if $i2 <= 0 goto return"->"return";
    "$r6 = new java.lang.AssertionError"->"specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Some tests failed\")";
    "specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Some tests failed\")"->"throw $r6";
}
