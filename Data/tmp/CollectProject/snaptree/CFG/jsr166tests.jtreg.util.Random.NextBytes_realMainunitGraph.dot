digraph "unitGraph" {
    "r6 := @parameter0: java.lang.String[]"
    "$r0 = newarray (byte)[11]"
    "$r0[0] = 27"
    "$r0[1] = -105"
    "$r0[2] = -24"
    "$r0[3] = 83"
    "$r0[4] = -77"
    "$r0[5] = -29"
    "$r0[6] = 119"
    "$r0[7] = -74"
    "$r0[8] = -106"
    "$r0[9] = 68"
    "$r0[10] = 54"
    "r1 = $r0"
    "$r2 = new java.util.Random"
    "specialinvoke $r2.<java.util.Random: void <init>(long)>(2398579034L)"
    "r3 = $r2"
    "i1 = 0"
    "$i0 = lengthof r1"
    "if i1 > $i0 goto return"
    "virtualinvoke r3.<java.util.Random: void setSeed(long)>(2398579034L)"
    "r4 = newarray (byte)[i1]"
    "virtualinvoke r3.<java.util.Random: void nextBytes(byte[])>(r4)"
    "$r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, i1)"
    "$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r5)"
    "staticinvoke <jsr166tests.jtreg.util.Random.NextBytes: void check(boolean)>($z0)"
    "i1 = i1 + 1"
    "goto [?= $i0 = lengthof r1]"
    "return"
    "r6 := @parameter0: java.lang.String[]"->"$r0 = newarray (byte)[11]";
    "$r0 = newarray (byte)[11]"->"$r0[0] = 27";
    "$r0[0] = 27"->"$r0[1] = -105";
    "$r0[1] = -105"->"$r0[2] = -24";
    "$r0[2] = -24"->"$r0[3] = 83";
    "$r0[3] = 83"->"$r0[4] = -77";
    "$r0[4] = -77"->"$r0[5] = -29";
    "$r0[5] = -29"->"$r0[6] = 119";
    "$r0[6] = 119"->"$r0[7] = -74";
    "$r0[7] = -74"->"$r0[8] = -106";
    "$r0[8] = -106"->"$r0[9] = 68";
    "$r0[9] = 68"->"$r0[10] = 54";
    "$r0[10] = 54"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.util.Random";
    "$r2 = new java.util.Random"->"specialinvoke $r2.<java.util.Random: void <init>(long)>(2398579034L)";
    "specialinvoke $r2.<java.util.Random: void <init>(long)>(2398579034L)"->"r3 = $r2";
    "r3 = $r2"->"i1 = 0";
    "i1 = 0"->"$i0 = lengthof r1";
    "$i0 = lengthof r1"->"if i1 > $i0 goto return";
    "if i1 > $i0 goto return"->"virtualinvoke r3.<java.util.Random: void setSeed(long)>(2398579034L)";
    "if i1 > $i0 goto return"->"return";
    "virtualinvoke r3.<java.util.Random: void setSeed(long)>(2398579034L)"->"r4 = newarray (byte)[i1]";
    "r4 = newarray (byte)[i1]"->"virtualinvoke r3.<java.util.Random: void nextBytes(byte[])>(r4)";
    "virtualinvoke r3.<java.util.Random: void nextBytes(byte[])>(r4)"->"$r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, i1)";
    "$r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, i1)"->"$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r5)";
    "$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r5)"->"staticinvoke <jsr166tests.jtreg.util.Random.NextBytes: void check(boolean)>($z0)";
    "staticinvoke <jsr166tests.jtreg.util.Random.NextBytes: void check(boolean)>($z0)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= $i0 = lengthof r1]";
    "goto [?= $i0 = lengthof r1]"->"$i0 = lengthof r1";
}
