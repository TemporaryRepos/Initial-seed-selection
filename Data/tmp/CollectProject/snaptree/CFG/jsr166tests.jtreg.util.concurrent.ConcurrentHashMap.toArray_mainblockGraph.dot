digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
r0 = newarray (java.lang.Throwable)[1];
s0 = 1000;
$r1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
r2 = $r1;
$r3 = new jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$1;
specialinvoke $r3.<jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$1: void <init>(java.util.concurrent.ConcurrentHashMap)>(r2);
r4 = $r3;
$r5 = new jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$2;
specialinvoke $r5.<jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$2: void <init>(java.util.concurrent.ConcurrentHashMap,java.lang.Throwable[])>(r2, r0);
r6 = $r5;
virtualinvoke r6.<java.lang.Thread: void start()>();
virtualinvoke r4.<java.lang.Thread: void start()>();
virtualinvoke r4.<java.lang.Thread: void join()>();
virtualinvoke r6.<java.lang.Thread: void join()>();
$r7 = r0[0];
if $r7 == null goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r8 = r0[0];
throw $r8;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
r0 = newarray (java.lang.Throwable)[1];
s0 = 1000;
$r1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
r2 = $r1;
$r3 = new jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$1;
specialinvoke $r3.<jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$1: void <init>(java.util.concurrent.ConcurrentHashMap)>(r2);
r4 = $r3;
$r5 = new jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$2;
specialinvoke $r5.<jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$2: void <init>(java.util.concurrent.ConcurrentHashMap,java.lang.Throwable[])>(r2, r0);
r6 = $r5;
virtualinvoke r6.<java.lang.Thread: void start()>();
virtualinvoke r4.<java.lang.Thread: void start()>();
virtualinvoke r4.<java.lang.Thread: void join()>();
virtualinvoke r6.<java.lang.Thread: void join()>();
$r7 = r0[0];
if $r7 == null goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r8 = r0[0];
throw $r8;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
r0 = newarray (java.lang.Throwable)[1];
s0 = 1000;
$r1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
r2 = $r1;
$r3 = new jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$1;
specialinvoke $r3.<jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$1: void <init>(java.util.concurrent.ConcurrentHashMap)>(r2);
r4 = $r3;
$r5 = new jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$2;
specialinvoke $r5.<jsr166tests.jtreg.util.concurrent.ConcurrentHashMap.toArray$2: void <init>(java.util.concurrent.ConcurrentHashMap,java.lang.Throwable[])>(r2, r0);
r6 = $r5;
virtualinvoke r6.<java.lang.Thread: void start()>();
virtualinvoke r4.<java.lang.Thread: void start()>();
virtualinvoke r4.<java.lang.Thread: void join()>();
virtualinvoke r6.<java.lang.Thread: void join()>();
$r7 = r0[0];
if $r7 == null goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
