digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r10 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayDeque;
specialinvoke $r0.<java.util.ArrayDeque: void <init>(int)>(3);
r1 = $r0;
$r2 = new java.util.ArrayDeque;
specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();
interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);
$r3 = new java.util.LinkedList;
specialinvoke $r3.<java.util.LinkedList: void <init>()>();
interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);
$r4 = new java.util.concurrent.LinkedBlockingDeque;
specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>()>();
interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);
staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
r5 = <jsr166tests.jtreg.util.Deque.ChorusLine: jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker[] tweakers>;
i0 = lengthof r5;
i1 = 0;
"
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
r6 = r5[i1];
r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
"
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
"
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Deque) $r8;
interfaceinvoke r6.<jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker: void run(java.util.Deque)>(r9);
goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 5:
[preds: 3 ] [succs: 1 ]
staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
i1 = i1 + 1;
goto [?= (branch)];
"
    "Block 6:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r10 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayDeque;
specialinvoke $r0.<java.util.ArrayDeque: void <init>(int)>(3);
r1 = $r0;
$r2 = new java.util.ArrayDeque;
specialinvoke $r2.<java.util.ArrayDeque: void <init>()>();
interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r2);
$r3 = new java.util.LinkedList;
specialinvoke $r3.<java.util.LinkedList: void <init>()>();
interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r3);
$r4 = new java.util.concurrent.LinkedBlockingDeque;
specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>()>();
interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>($r4);
staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
r5 = <jsr166tests.jtreg.util.Deque.ChorusLine: jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker[] tweakers>;
i0 = lengthof r5;
i1 = 0;
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
r6 = r5[i1];
r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
";
    "Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
"->"Block 6:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
r6 = r5[i1];
r7 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
"->"Block 4:
[preds: 3 ] [succs: 3 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Deque) $r8;
interfaceinvoke r6.<jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker: void run(java.util.Deque)>(r9);
goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
"->"Block 5:
[preds: 3 ] [succs: 1 ]
staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
i1 = i1 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 3 ]
$r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Deque) $r8;
interfaceinvoke r6.<jsr166tests.jtreg.util.Deque.ChorusLine$Tweaker: void run(java.util.Deque)>(r9);
goto [?= $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>()];
"->"Block 3:
[preds: 2 4 ] [succs: 4 5 ]
$z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();
if $z3 == 0 goto staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
";
    "Block 5:
[preds: 3 ] [succs: 1 ]
staticinvoke <jsr166tests.jtreg.util.Deque.ChorusLine: void equal(java.lang.Iterable)>(r1);
i1 = i1 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 5 ] [succs: 2 6 ]
if i1 >= i0 goto return;
";
}
