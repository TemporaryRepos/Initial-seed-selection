digraph "unitGraph" {
    "r31 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.Random"
    "specialinvoke $r0.<java.util.Random: void <init>()>()"
    "r1 = $r0"
    "r2 = newarray (java.util.List)[20]"
    "i4 = 0"
    "i5 = 0"
    "if i5 >= 20 goto i8 = 0"
    "$i2 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(10)"
    "i6 = $i2 + 2"
    "$r28 = new java.util.ArrayList"
    "specialinvoke $r28.<java.util.ArrayList: void <init>(int)>(i6)"
    "r32 = $r28"
    "i7 = 1"
    "if i7 >= i6 goto $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "$i3 = i4"
    "i4 = i4 + 1"
    "$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"
    "interfaceinvoke r32.<java.util.List: boolean add(java.lang.Object)>($r30)"
    "i7 = i7 + 1"
    "goto [?= (branch)]"
    "$r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"
    "interfaceinvoke r32.<java.util.List: boolean add(java.lang.Object)>($r29)"
    "staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r32)"
    "r2[i5] = r32"
    "i5 = i5 + 1"
    "i8 = 0"
    "if i8 >= 20 goto return"
    "i9 = 0"
    "if i9 >= 20 goto i8 = i8 + 1"
    "$i0 = i8 - i9"
    "$i1 = staticinvoke <java.lang.Math: int abs(int)>($i0)"
    "if $i1 <= 1 goto $z5 = 0"
    "$z5 = 1"
    "goto [?= z6 = $z5]"
    "$z5 = 0"
    "z6 = $z5"
    "r33 = r2[i8]"
    "r3 = r2[i9]"
    "$z0 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>(r33, r3)"
    "if $z0 == z6 goto $r4 = new java.util.HashSet"
    "$r21 = new java.lang.RuntimeException"
    "$r22 = new java.lang.StringBuilder"
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A: \")"
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)"
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27)"
    "throw $r21"
    "$r4 = new java.util.HashSet"
    "specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>(r33)"
    "$z1 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>($r4, r3)"
    "if $z1 == z6 goto $r5 = new java.util.HashSet"
    "$r14 = new java.lang.RuntimeException"
    "$r15 = new java.lang.StringBuilder"
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"B: \")"
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)"
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20)"
    "throw $r14"
    "$r5 = new java.util.HashSet"
    "specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r33)"
    "$r6 = new java.util.HashSet"
    "specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>(r3)"
    "$z2 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>($r5, $r6)"
    "if $z2 == z6 goto i9 = i9 + 1"
    "$r7 = new java.lang.RuntimeException"
    "$r8 = new java.lang.StringBuilder"
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"C: \")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)"
    "throw $r7"
    "i9 = i9 + 1"
    "i8 = i8 + 1"
    "return"
    "r31 := @parameter0: java.lang.String[]"->"$r0 = new java.util.Random";
    "$r0 = new java.util.Random"->"specialinvoke $r0.<java.util.Random: void <init>()>()";
    "specialinvoke $r0.<java.util.Random: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"r2 = newarray (java.util.List)[20]";
    "r2 = newarray (java.util.List)[20]"->"i4 = 0";
    "i4 = 0"->"i5 = 0";
    "i5 = 0"->"if i5 >= 20 goto i8 = 0";
    "if i5 >= 20 goto i8 = 0"->"$i2 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(10)";
    "if i5 >= 20 goto i8 = 0"->"i8 = 0";
    "$i2 = virtualinvoke r1.<java.util.Random: int nextInt(int)>(10)"->"i6 = $i2 + 2";
    "i6 = $i2 + 2"->"$r28 = new java.util.ArrayList";
    "$r28 = new java.util.ArrayList"->"specialinvoke $r28.<java.util.ArrayList: void <init>(int)>(i6)";
    "specialinvoke $r28.<java.util.ArrayList: void <init>(int)>(i6)"->"r32 = $r28";
    "r32 = $r28"->"i7 = 1";
    "i7 = 1"->"if i7 >= i6 goto $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "if i7 >= i6 goto $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"$i3 = i4";
    "if i7 >= i6 goto $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"$r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "$i3 = i4"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)";
    "$r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"->"interfaceinvoke r32.<java.util.List: boolean add(java.lang.Object)>($r30)";
    "interfaceinvoke r32.<java.util.List: boolean add(java.lang.Object)>($r30)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= i6 goto $r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)";
    "$r29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4)"->"interfaceinvoke r32.<java.util.List: boolean add(java.lang.Object)>($r29)";
    "interfaceinvoke r32.<java.util.List: boolean add(java.lang.Object)>($r29)"->"staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r32)";
    "staticinvoke <java.util.Collections: void shuffle(java.util.List)>(r32)"->"r2[i5] = r32";
    "r2[i5] = r32"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= 20 goto i8 = 0";
    "i8 = 0"->"if i8 >= 20 goto return";
    "if i8 >= 20 goto return"->"i9 = 0";
    "if i8 >= 20 goto return"->"return";
    "i9 = 0"->"if i9 >= 20 goto i8 = i8 + 1";
    "if i9 >= 20 goto i8 = i8 + 1"->"$i0 = i8 - i9";
    "if i9 >= 20 goto i8 = i8 + 1"->"i8 = i8 + 1";
    "$i0 = i8 - i9"->"$i1 = staticinvoke <java.lang.Math: int abs(int)>($i0)";
    "$i1 = staticinvoke <java.lang.Math: int abs(int)>($i0)"->"if $i1 <= 1 goto $z5 = 0";
    "if $i1 <= 1 goto $z5 = 0"->"$z5 = 1";
    "if $i1 <= 1 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= z6 = $z5]";
    "goto [?= z6 = $z5]"->"z6 = $z5";
    "$z5 = 0"->"z6 = $z5";
    "z6 = $z5"->"r33 = r2[i8]";
    "r33 = r2[i8]"->"r3 = r2[i9]";
    "r3 = r2[i9]"->"$z0 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>(r33, r3)";
    "$z0 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>(r33, r3)"->"if $z0 == z6 goto $r4 = new java.util.HashSet";
    "if $z0 == z6 goto $r4 = new java.util.HashSet"->"$r21 = new java.lang.RuntimeException";
    "if $z0 == z6 goto $r4 = new java.util.HashSet"->"$r4 = new java.util.HashSet";
    "$r21 = new java.lang.RuntimeException"->"$r22 = new java.lang.StringBuilder";
    "$r22 = new java.lang.StringBuilder"->"specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()"->"$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A: \")";
    "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"A: \")"->"$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)";
    "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)"->"$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)";
    "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"->"$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27)";
    "specialinvoke $r21.<java.lang.RuntimeException: void <init>(java.lang.String)>($r27)"->"throw $r21";
    "$r4 = new java.util.HashSet"->"specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>(r33)";
    "specialinvoke $r4.<java.util.HashSet: void <init>(java.util.Collection)>(r33)"->"$z1 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>($r4, r3)";
    "$z1 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>($r4, r3)"->"if $z1 == z6 goto $r5 = new java.util.HashSet";
    "if $z1 == z6 goto $r5 = new java.util.HashSet"->"$r14 = new java.lang.RuntimeException";
    "if $z1 == z6 goto $r5 = new java.util.HashSet"->"$r5 = new java.util.HashSet";
    "$r14 = new java.lang.RuntimeException"->"$r15 = new java.lang.StringBuilder";
    "$r15 = new java.lang.StringBuilder"->"specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()"->"$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"B: \")";
    "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"B: \")"->"$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)";
    "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)"->"$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)";
    "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"->"$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20)";
    "specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r20)"->"throw $r14";
    "$r5 = new java.util.HashSet"->"specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r33)";
    "specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r33)"->"$r6 = new java.util.HashSet";
    "$r6 = new java.util.HashSet"->"specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>(r3)";
    "specialinvoke $r6.<java.util.HashSet: void <init>(java.util.Collection)>(r3)"->"$z2 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>($r5, $r6)";
    "$z2 = staticinvoke <java.util.Collections: boolean disjoint(java.util.Collection,java.util.Collection)>($r5, $r6)"->"if $z2 == z6 goto i9 = i9 + 1";
    "if $z2 == z6 goto i9 = i9 + 1"->"$r7 = new java.lang.RuntimeException";
    "if $z2 == z6 goto i9 = i9 + 1"->"i9 = i9 + 1";
    "$r7 = new java.lang.RuntimeException"->"$r8 = new java.lang.StringBuilder";
    "$r8 = new java.lang.StringBuilder"->"specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"C: \")";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"C: \")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)";
    "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13)"->"throw $r7";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 >= 20 goto i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 >= 20 goto return";
}
