digraph "unitGraph" {
    "r21 := @parameter0: java.lang.String[]"
    "b0 = 10"
    "$r0 = new java.util.concurrent.ArrayBlockingQueue"
    "specialinvoke $r0.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(20)"
    "r1 = $r0"
    "$r2 = new java.util.concurrent.ThreadPoolExecutor"
    "$r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"
    "specialinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>(10, 10, 30L, $r3, r1)"
    "r4 = $r2"
    "$i1 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()>()"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r5, $r6)"
    "$z0 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()"
    "if $z0 != 0 goto $z3 = 0"
    "$z3 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z3)]"
    "$z3 = 0"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z3)"
    "virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1)"
    "$z1 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z1)"
    "$i2 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r7, $r8)"
    "i8 = 0"
    "if i8 >= 10 goto $i3 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"
    "$r19 = new jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut$1"
    "specialinvoke $r19.<jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut$1: void <init>()>()"
    "virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>($r19)"
    "i8 = i8 + 1"
    "goto [?= (branch)]"
    "$i3 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r9, $r10)"
    "staticinvoke <java.lang.Thread: void sleep(long)>(500L)"
    "$i4 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"
    "$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r11, $r12)"
    "virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: void shutdown()>()"
    "$z2 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z2)"
    "$r14 = <java.lang.System: java.io.PrintStream out>"
    "$r13 = newarray (java.lang.Object)[2]"
    "$i5 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int passed>"
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"
    "$r13[0] = $r15"
    "$i6 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int failed>"
    "$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)"
    "$r13[1] = $r16"
    "virtualinvoke $r14.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r13)"
    "$i7 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int failed>"
    "if $i7 <= 0 goto return"
    "$r18 = new java.lang.Exception"
    "specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")"
    "throw $r18"
    "return"
    "r21 := @parameter0: java.lang.String[]"->"b0 = 10";
    "b0 = 10"->"$r0 = new java.util.concurrent.ArrayBlockingQueue";
    "$r0 = new java.util.concurrent.ArrayBlockingQueue"->"specialinvoke $r0.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(20)";
    "specialinvoke $r0.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(20)"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new java.util.concurrent.ThreadPoolExecutor";
    "$r2 = new java.util.concurrent.ThreadPoolExecutor"->"$r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>";
    "$r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"->"specialinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>(10, 10, 30L, $r3, r1)";
    "specialinvoke $r2.<java.util.concurrent.ThreadPoolExecutor: void <init>(int,int,long,java.util.concurrent.TimeUnit,java.util.concurrent.BlockingQueue)>(10, 10, 30L, $r3, r1)"->"r4 = $r2";
    "r4 = $r2"->"$i1 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()>()";
    "$i1 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: int getCorePoolSize()>()"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r5, $r6)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r5, $r6)"->"$z0 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()";
    "$z0 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()"->"if $z0 != 0 goto $z3 = 0";
    "if $z0 != 0 goto $z3 = 0"->"$z3 = 1";
    "if $z0 != 0 goto $z3 = 0"->"$z3 = 0";
    "$z3 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z3)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z3)]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z3)";
    "$z3 = 0"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z3)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z3)"->"virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1)";
    "virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(1)"->"$z1 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()";
    "$z1 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z1)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z1)"->"$i2 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()";
    "$i2 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"->"$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "$r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r7, $r8)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r7, $r8)"->"i8 = 0";
    "i8 = 0"->"if i8 >= 10 goto $i3 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()";
    "if i8 >= 10 goto $i3 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"->"$r19 = new jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut$1";
    "if i8 >= 10 goto $i3 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"->"$i3 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()";
    "$r19 = new jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut$1"->"specialinvoke $r19.<jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut$1: void <init>()>()";
    "specialinvoke $r19.<jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut$1: void <init>()>()"->"virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>($r19)";
    "virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: java.util.concurrent.Future submit(java.lang.Runnable)>($r19)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 >= 10 goto $i3 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()";
    "$i3 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"->"$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)";
    "$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3)"->"$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)";
    "$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r9, $r10)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r9, $r10)"->"staticinvoke <java.lang.Thread: void sleep(long)>(500L)";
    "staticinvoke <java.lang.Thread: void sleep(long)>(500L)"->"$i4 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()";
    "$i4 = staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int countExecutorThreads()>()"->"$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)";
    "$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4)"->"$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)";
    "$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r11, $r12)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void equal(java.lang.Object,java.lang.Object)>($r11, $r12)"->"virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: void shutdown()>()";
    "virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: void shutdown()>()"->"$z2 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()";
    "$z2 = virtualinvoke r4.<java.util.concurrent.ThreadPoolExecutor: boolean allowsCoreThreadTimeOut()>()"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z2)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: void check(boolean)>($z2)"->"$r14 = <java.lang.System: java.io.PrintStream out>";
    "$r14 = <java.lang.System: java.io.PrintStream out>"->"$r13 = newarray (java.lang.Object)[2]";
    "$r13 = newarray (java.lang.Object)[2]"->"$i5 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int passed>";
    "$i5 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int passed>"->"$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)";
    "$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"->"$r13[0] = $r15";
    "$r13[0] = $r15"->"$i6 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int failed>";
    "$i6 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int failed>"->"$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)";
    "$r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)"->"$r13[1] = $r16";
    "$r13[1] = $r16"->"virtualinvoke $r14.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r13)";
    "virtualinvoke $r14.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r13)"->"$i7 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int failed>";
    "$i7 = <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.CoreThreadTimeOut: int failed>"->"if $i7 <= 0 goto return";
    "if $i7 <= 0 goto return"->"$r18 = new java.lang.Exception";
    "if $i7 <= 0 goto return"->"return";
    "$r18 = new java.lang.Exception"->"specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")";
    "specialinvoke $r18.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")"->"throw $r18";
}
