digraph "unitGraph" {
    "r4 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.Hashtable"
    "specialinvoke $r0.<java.util.Hashtable: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r0)"
    "$r1 = new java.util.HashMap"
    "specialinvoke $r1.<java.util.HashMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r1)"
    "$r2 = new java.util.LinkedHashMap"
    "specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r2)"
    "$r3 = new java.util.concurrent.ConcurrentHashMap"
    "specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r3)"
    "return"
    "r4 := @parameter0: java.lang.String[]"->"$r0 = new java.util.Hashtable";
    "$r0 = new java.util.Hashtable"->"specialinvoke $r0.<java.util.Hashtable: void <init>()>()";
    "specialinvoke $r0.<java.util.Hashtable: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r0)";
    "staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r0)"->"$r1 = new java.util.HashMap";
    "$r1 = new java.util.HashMap"->"specialinvoke $r1.<java.util.HashMap: void <init>()>()";
    "specialinvoke $r1.<java.util.HashMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r1)";
    "staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r1)"->"$r2 = new java.util.LinkedHashMap";
    "$r2 = new java.util.LinkedHashMap"->"specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>()";
    "specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r2)";
    "staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r2)"->"$r3 = new java.util.concurrent.ConcurrentHashMap";
    "$r3 = new java.util.concurrent.ConcurrentHashMap"->"specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>()";
    "specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r3)";
    "staticinvoke <jsr166tests.jtreg.util.Hashtable.SelfRef: void testMap(java.util.Map)>($r3)"->"return";
}
