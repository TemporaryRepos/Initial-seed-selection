digraph "unitGraph" {
    "r0 := @parameter0: java.util.Map"
    "i0 = 0"
    "if i0 >= 18 goto $r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()"
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)"
    "i0 = i0 + 1"
    "goto [?= (branch)]"
    "$r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r1)"
    "$r2 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r2)"
    "$r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r3)"
    "goto [?= return]"
    "$r7 := @caughtexception"
    "r8 = $r7"
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void unexpected(java.lang.Throwable)>(r8)"
    "return"
    "r0 := @parameter0: java.util.Map"->"i0 = 0";
    "r0 := @parameter0: java.util.Map"->"$r7 := @caughtexception";
    "i0 = 0"->"if i0 >= 18 goto $r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()";
    "i0 = 0"->"$r7 := @caughtexception";
    "if i0 >= 18 goto $r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()"->"$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "if i0 >= 18 goto $r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()"->"$r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()";
    "if i0 >= 18 goto $r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()"->"$r7 := @caughtexception";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r7 := @caughtexception";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$r7 := @caughtexception";
    "interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)"->"i0 = i0 + 1";
    "interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r5)"->"$r7 := @caughtexception";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "i0 = i0 + 1"->"$r7 := @caughtexception";
    "goto [?= (branch)]"->"if i0 >= 18 goto $r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()";
    "goto [?= (branch)]"->"$r7 := @caughtexception";
    "$r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r1)";
    "$r1 = interfaceinvoke r0.<java.util.Map: java.util.Collection values()>()"->"$r7 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r1)"->"$r2 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r1)"->"$r7 := @caughtexception";
    "$r2 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r2)";
    "$r2 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>()"->"$r7 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r2)"->"$r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r2)"->"$r7 := @caughtexception";
    "$r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r3)";
    "$r3 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>()"->"$r7 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r3)"->"goto [?= return]";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void test(java.util.Collection)>($r3)"->"$r7 := @caughtexception";
    "goto [?= return]"->"return";
    "$r7 := @caughtexception"->"r8 = $r7";
    "r8 = $r7"->"staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void unexpected(java.lang.Throwable)>(r8)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void unexpected(java.lang.Throwable)>(r8)"->"return";
}
