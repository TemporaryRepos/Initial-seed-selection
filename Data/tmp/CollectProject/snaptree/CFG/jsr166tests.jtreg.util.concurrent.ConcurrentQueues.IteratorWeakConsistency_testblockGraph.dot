digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @this: jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency;
r0 := @parameter0: java.util.Queue;
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto r25 = interfaceinvoke r0.<java.util.Queue: java.util.Iterator iterator()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r0.<java.util.Queue: boolean add(java.lang.Object)>($r24);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
r25 = interfaceinvoke r0.<java.util.Queue: java.util.Iterator iterator()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);
interfaceinvoke r0.<java.util.Queue: boolean remove(java.lang.Object)>($r4);
$r5 = new java.util.ArrayList;
specialinvoke $r5.<java.util.ArrayList: void <init>()>();
r6 = $r5;
"
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $r8 = newarray (java.lang.Integer)[7];
"
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r23 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r23);
goto [?= $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r8 = newarray (java.lang.Integer)[7];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r8[0] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r8[1] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r8[2] = $r11;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r8[3] = $r12;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r8[4] = $r13;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
$r8[5] = $r14;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
$r8[6] = $r15;
$r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);
virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void equal(java.lang.Object,java.lang.Object)>(r6, $r16);
$z2 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(null);
if $z2 != 0 goto $z5 = 0;
"
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z5 = 1;
goto [?= virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void check(boolean)>($z5)];
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z5 = 0;
"
    "Block 9:
[preds: 7 8 ] [succs: ]
virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void check(boolean)>($z5);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[2];
$r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();
$r17[0] = $r20;
$r17[1] = r6;
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%s: %s%n\", $r17);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @this: jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency;
r0 := @parameter0: java.util.Queue;
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto r25 = interfaceinvoke r0.<java.util.Queue: java.util.Iterator iterator()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto r25 = interfaceinvoke r0.<java.util.Queue: java.util.Iterator iterator()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r0.<java.util.Queue: boolean add(java.lang.Object)>($r24);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto r25 = interfaceinvoke r0.<java.util.Queue: java.util.Iterator iterator()>();
"->"Block 3:
[preds: 1 ] [succs: 4 ]
r25 = interfaceinvoke r0.<java.util.Queue: java.util.Iterator iterator()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);
interfaceinvoke r0.<java.util.Queue: boolean remove(java.lang.Object)>($r4);
$r5 = new java.util.ArrayList;
specialinvoke $r5.<java.util.ArrayList: void <init>()>();
r6 = $r5;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
interfaceinvoke r0.<java.util.Queue: boolean add(java.lang.Object)>($r24);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 10 goto r25 = interfaceinvoke r0.<java.util.Queue: java.util.Iterator iterator()>();
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
r25 = interfaceinvoke r0.<java.util.Queue: java.util.Iterator iterator()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
interfaceinvoke r0.<java.util.Queue: java.lang.Object poll()>();
$r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);
interfaceinvoke r0.<java.util.Queue: boolean remove(java.lang.Object)>($r4);
$r5 = new java.util.ArrayList;
specialinvoke $r5.<java.util.ArrayList: void <init>()>();
r6 = $r5;
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $r8 = newarray (java.lang.Integer)[7];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $r8 = newarray (java.lang.Integer)[7];
"->"Block 5:
[preds: 4 ] [succs: 4 ]
$r23 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r23);
goto [?= $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $r8 = newarray (java.lang.Integer)[7];
"->"Block 6:
[preds: 4 ] [succs: 7 8 ]
$r8 = newarray (java.lang.Integer)[7];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r8[0] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r8[1] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r8[2] = $r11;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r8[3] = $r12;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r8[4] = $r13;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
$r8[5] = $r14;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
$r8[6] = $r15;
$r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);
virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void equal(java.lang.Object,java.lang.Object)>(r6, $r16);
$z2 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(null);
if $z2 != 0 goto $z5 = 0;
";
    "Block 5:
[preds: 4 ] [succs: 4 ]
$r23 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r23);
goto [?= $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>()];
"->"Block 4:
[preds: 3 5 ] [succs: 5 6 ]
$z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto $r8 = newarray (java.lang.Integer)[7];
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r8 = newarray (java.lang.Integer)[7];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r8[0] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r8[1] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r8[2] = $r11;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r8[3] = $r12;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r8[4] = $r13;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
$r8[5] = $r14;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
$r8[6] = $r15;
$r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);
virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void equal(java.lang.Object,java.lang.Object)>(r6, $r16);
$z2 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(null);
if $z2 != 0 goto $z5 = 0;
"->"Block 7:
[preds: 6 ] [succs: 9 ]
$z5 = 1;
goto [?= virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void check(boolean)>($z5)];
";
    "Block 6:
[preds: 4 ] [succs: 7 8 ]
$r8 = newarray (java.lang.Integer)[7];
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
$r8[0] = $r9;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
$r8[1] = $r10;
$r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);
$r8[2] = $r11;
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);
$r8[3] = $r12;
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);
$r8[4] = $r13;
$r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
$r8[5] = $r14;
$r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);
$r8[6] = $r15;
$r16 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);
virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void equal(java.lang.Object,java.lang.Object)>(r6, $r16);
$z2 = interfaceinvoke r6.<java.util.List: boolean contains(java.lang.Object)>(null);
if $z2 != 0 goto $z5 = 0;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
$z5 = 0;
";
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z5 = 1;
goto [?= virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void check(boolean)>($z5)];
"->"Block 9:
[preds: 7 8 ] [succs: ]
virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void check(boolean)>($z5);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[2];
$r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();
$r17[0] = $r20;
$r17[1] = r6;
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%s: %s%n\", $r17);
return;
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z5 = 0;
"->"Block 9:
[preds: 7 8 ] [succs: ]
virtualinvoke r7.<jsr166tests.jtreg.util.concurrent.ConcurrentQueues.IteratorWeakConsistency: void check(boolean)>($z5);
$r18 = <java.lang.System: java.io.PrintStream out>;
$r17 = newarray (java.lang.Object)[2];
$r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();
$r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();
$r17[0] = $r20;
$r17[1] = r6;
virtualinvoke $r18.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%s: %s%n\", $r17);
return;
";
}
