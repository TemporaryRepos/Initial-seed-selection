digraph "unitGraph" {
    "r2 := @this: jsr166tests.jtreg.util.Map.LockStep"
    "r0 := @parameter0: java.lang.Object"
    "r1 := @parameter1: java.lang.Object"
    "if r0 != null goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1)"
    "if r1 != null goto $r3 = new java.lang.StringBuilder"
    "goto [?= virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void pass()>()]"
    "$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1)"
    "if $z0 == 0 goto $r3 = new java.lang.StringBuilder"
    "virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void pass()>()"
    "goto [?= return]"
    "$r3 = new java.lang.StringBuilder"
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"
    "if r0 != null goto $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"
    "$r15 = null"
    "goto [?= $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)]"
    "$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"
    "$r15 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>()"
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)"
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \")"
    "if r1 != null goto $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()"
    "$r16 = null"
    "goto [?= $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)]"
    "$r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()"
    "$r16 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>()"
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void fail(java.lang.String)>($r13)"
    "return"
    "r2 := @this: jsr166tests.jtreg.util.Map.LockStep"->"r0 := @parameter0: java.lang.Object";
    "r0 := @parameter0: java.lang.Object"->"r1 := @parameter1: java.lang.Object";
    "r1 := @parameter1: java.lang.Object"->"if r0 != null goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1)";
    "if r0 != null goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1)"->"if r1 != null goto $r3 = new java.lang.StringBuilder";
    "if r0 != null goto $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1)"->"$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1)";
    "if r1 != null goto $r3 = new java.lang.StringBuilder"->"goto [?= virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void pass()>()]";
    "if r1 != null goto $r3 = new java.lang.StringBuilder"->"$r3 = new java.lang.StringBuilder";
    "goto [?= virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void pass()>()]"->"virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void pass()>()";
    "$z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1)"->"if $z0 == 0 goto $r3 = new java.lang.StringBuilder";
    "if $z0 == 0 goto $r3 = new java.lang.StringBuilder"->"virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void pass()>()";
    "if $z0 == 0 goto $r3 = new java.lang.StringBuilder"->"$r3 = new java.lang.StringBuilder";
    "virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void pass()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r3 = new java.lang.StringBuilder"->"specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()";
    "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()"->"if r0 != null goto $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()";
    "if r0 != null goto $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"->"$r15 = null";
    "if r0 != null goto $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"->"$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()";
    "$r15 = null"->"goto [?= $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)]";
    "goto [?= $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)]"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)";
    "$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()"->"$r15 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>()";
    "$r15 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>()"->"$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)";
    "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)"->"$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")";
    "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)";
    "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)"->"$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \")";
    "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not equal to \")"->"if r1 != null goto $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()";
    "if r1 != null goto $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()"->"$r16 = null";
    "if r1 != null goto $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()"->"$r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()";
    "$r16 = null"->"goto [?= $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)]";
    "goto [?= $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)]"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)";
    "$r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()"->"$r16 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>()";
    "$r16 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>()"->"$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)";
    "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)"->"$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")";
    "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")"->"$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)";
    "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)"->"$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void fail(java.lang.String)>($r13)";
    "virtualinvoke r2.<jsr166tests.jtreg.util.Map.LockStep: void fail(java.lang.String)>($r13)"->"return";
}
