digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.concurrent.FutureTask;
$z0 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isDone()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0);
$z1 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isCancelled()>();
if $z1 != 0 goto $z2 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z2 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2);
$r1 = newarray (jsr166tests.jtreg.util.concurrent.FutureTask.Customized$Fun)[2];
$r2 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$4;
specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$4: void <init>(java.util.concurrent.FutureTask)>(r0);
$r1[0] = $r2;
$r3 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$5;
specialinvoke $r3.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$5: void <init>(java.util.concurrent.FutureTask)>(r0);
$r1[1] = $r3;
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void THROWS(java.lang.Class,jsr166tests.jtreg.util.concurrent.FutureTask.Customized$Fun[])>(class \"Ljava/util/concurrent/ExecutionException;\", $r1);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.concurrent.FutureTask;
$z0 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isDone()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0);
$z1 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isCancelled()>();
if $z1 != 0 goto $z2 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.concurrent.FutureTask;
$z0 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isDone()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0);
$z1 = virtualinvoke r0.<java.util.concurrent.FutureTask: boolean isCancelled()>();
if $z1 != 0 goto $z2 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z2 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z2 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)];
"->"Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2);
$r1 = newarray (jsr166tests.jtreg.util.concurrent.FutureTask.Customized$Fun)[2];
$r2 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$4;
specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$4: void <init>(java.util.concurrent.FutureTask)>(r0);
$r1[0] = $r2;
$r3 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$5;
specialinvoke $r3.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$5: void <init>(java.util.concurrent.FutureTask)>(r0);
$r1[1] = $r3;
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void THROWS(java.lang.Class,jsr166tests.jtreg.util.concurrent.FutureTask.Customized$Fun[])>(class \"Ljava/util/concurrent/ExecutionException;\", $r1);
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z2 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2);
$r1 = newarray (jsr166tests.jtreg.util.concurrent.FutureTask.Customized$Fun)[2];
$r2 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$4;
specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$4: void <init>(java.util.concurrent.FutureTask)>(r0);
$r1[0] = $r2;
$r3 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$5;
specialinvoke $r3.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$5: void <init>(java.util.concurrent.FutureTask)>(r0);
$r1[1] = $r3;
staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void THROWS(java.lang.Class,jsr166tests.jtreg.util.concurrent.FutureTask.Customized$Fun[])>(class \"Ljava/util/concurrent/ExecutionException;\", $r1);
return;
";
}
