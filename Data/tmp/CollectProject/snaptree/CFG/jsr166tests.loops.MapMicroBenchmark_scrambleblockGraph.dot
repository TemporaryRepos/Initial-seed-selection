digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @parameter0: java.lang.Object[];
i8 = 0;
"
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i0 = lengthof $r0;
if i8 >= $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i8 != 0 goto $r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$i9 = 0;
goto [?= i2 = $i9];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i1 = i8 - 1;
$i9 = $r1[$i1];
"
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i2 = $i9;
$r2 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
i10 = $r2[i8];
"
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i11 = i2 + 1;
if i10 <= $i11 goto i8 = i8 + 1;
"
    "Block 7:
[preds: 6 ] [succs: 6 ]
$i3 = i10 - 1;
r4 = r3[$i3];
$r5 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
$i4 = i10 - i2;
$i5 = virtualinvoke $r5.<java.util.Random: int nextInt(int)>($i4);
i6 = $i5 + i2;
$i7 = i10 - 1;
$r6 = r3[i6];
r3[$i7] = $r6;
r3[i6] = r4;
i10 = i10 + -1;
goto [?= $i11 = i2 + 1];
"
    "Block 8:
[preds: 6 ] [succs: 1 ]
i8 = i8 + 1;
goto [?= $r0 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>];
"
    "Block 9:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @parameter0: java.lang.Object[];
i8 = 0;
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i0 = lengthof $r0;
if i8 >= $i0 goto return;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i0 = lengthof $r0;
if i8 >= $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
if i8 != 0 goto $r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
";
    "Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i0 = lengthof $r0;
if i8 >= $i0 goto return;
"->"Block 9:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i8 != 0 goto $r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$i9 = 0;
goto [?= i2 = $i9];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
if i8 != 0 goto $r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i1 = i8 - 1;
$i9 = $r1[$i1];
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$i9 = 0;
goto [?= i2 = $i9];
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i2 = $i9;
$r2 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
i10 = $r2[i8];
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$r1 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i1 = i8 - 1;
$i9 = $r1[$i1];
"->"Block 5:
[preds: 3 4 ] [succs: 6 ]
i2 = $i9;
$r2 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
i10 = $r2[i8];
";
    "Block 5:
[preds: 3 4 ] [succs: 6 ]
i2 = $i9;
$r2 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
i10 = $r2[i8];
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i11 = i2 + 1;
if i10 <= $i11 goto i8 = i8 + 1;
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i11 = i2 + 1;
if i10 <= $i11 goto i8 = i8 + 1;
"->"Block 7:
[preds: 6 ] [succs: 6 ]
$i3 = i10 - 1;
r4 = r3[$i3];
$r5 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
$i4 = i10 - i2;
$i5 = virtualinvoke $r5.<java.util.Random: int nextInt(int)>($i4);
i6 = $i5 + i2;
$i7 = i10 - 1;
$r6 = r3[i6];
r3[$i7] = $r6;
r3[i6] = r4;
i10 = i10 + -1;
goto [?= $i11 = i2 + 1];
";
    "Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i11 = i2 + 1;
if i10 <= $i11 goto i8 = i8 + 1;
"->"Block 8:
[preds: 6 ] [succs: 1 ]
i8 = i8 + 1;
goto [?= $r0 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>];
";
    "Block 7:
[preds: 6 ] [succs: 6 ]
$i3 = i10 - 1;
r4 = r3[$i3];
$r5 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
$i4 = i10 - i2;
$i5 = virtualinvoke $r5.<java.util.Random: int nextInt(int)>($i4);
i6 = $i5 + i2;
$i7 = i10 - 1;
$r6 = r3[i6];
r3[$i7] = $r6;
r3[i6] = r4;
i10 = i10 + -1;
goto [?= $i11 = i2 + 1];
"->"Block 6:
[preds: 5 7 ] [succs: 7 8 ]
$i11 = i2 + 1;
if i10 <= $i11 goto i8 = i8 + 1;
";
    "Block 8:
[preds: 6 ] [succs: 1 ]
i8 = i8 + 1;
goto [?= $r0 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>];
"->"Block 1:
[preds: 0 8 ] [succs: 2 9 ]
$r0 = <jsr166tests.loops.MapMicroBenchmark: int[] sizes>;
$i0 = lengthof $r0;
if i8 >= $i0 goto return;
";
}
