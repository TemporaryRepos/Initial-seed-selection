digraph "unitGraph" {
    "r0 := @parameter0: java.util.Collection"
    "r2 := @parameter1: java.util.Collection"
    "$r1 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray()>()"
    "$r3 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray()>()"
    "staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r1, $r3)"
    "$r4 = newarray (java.lang.Object)[0]"
    "$r5 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4)"
    "$r6 = newarray (java.lang.Object)[0]"
    "$r7 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6)"
    "staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r5, $r7)"
    "$r8 = newarray (java.lang.Object)[5]"
    "$r9 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8)"
    "$r10 = newarray (java.lang.Object)[5]"
    "$r11 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r10)"
    "staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r9, $r11)"
    "return"
    "r0 := @parameter0: java.util.Collection"->"r2 := @parameter1: java.util.Collection";
    "r2 := @parameter1: java.util.Collection"->"$r1 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray()>()";
    "$r1 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray()>()"->"$r3 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray()>()";
    "$r3 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray()>()"->"staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r1, $r3)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r1, $r3)"->"$r4 = newarray (java.lang.Object)[0]";
    "$r4 = newarray (java.lang.Object)[0]"->"$r5 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4)";
    "$r5 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4)"->"$r6 = newarray (java.lang.Object)[0]";
    "$r6 = newarray (java.lang.Object)[0]"->"$r7 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6)";
    "$r7 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r6)"->"staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r5, $r7)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r5, $r7)"->"$r8 = newarray (java.lang.Object)[5]";
    "$r8 = newarray (java.lang.Object)[5]"->"$r9 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8)";
    "$r9 = interfaceinvoke r0.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r8)"->"$r10 = newarray (java.lang.Object)[5]";
    "$r10 = newarray (java.lang.Object)[5]"->"$r11 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r10)";
    "$r11 = interfaceinvoke r2.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r10)"->"staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r9, $r11)";
    "staticinvoke <jsr166tests.jtreg.util.Collection.BiggernYours: void arrayEqual(java.lang.Object[],java.lang.Object[])>($r9, $r11)"->"return";
}
