digraph "unitGraph" {
    "r3 := @this: jsr166tests.jtreg.util.Collections.T6433170"
    "r6 := @parameter0: java.lang.Class"
    "r0 := @parameter1: jsr166tests.jtreg.util.Collections.T6433170$F[]"
    "r1 = r0"
    "i0 = lengthof r1"
    "i1 = 0"
    "if i1 >= i0 goto return"
    "r2 = r1[i1]"
    "virtualinvoke r2.<jsr166tests.jtreg.util.Collections.T6433170$F: void f()>()"
    "$r4 = new java.lang.StringBuilder"
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")"
    "$r7 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>()"
    "$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)"
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not thrown\")"
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"
    "virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void fail(java.lang.String)>($r10)"
    "goto [?= i1 = i1 + 1]"
    "$r11 := @caughtexception"
    "r12 = $r11"
    "$r13 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()"
    "$z0 = virtualinvoke r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r13)"
    "if $z0 == 0 goto virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void unexpected(java.lang.Throwable)>(r12)"
    "virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void pass()>()"
    "virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void unexpected(java.lang.Throwable)>(r12)"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "return"
    "r3 := @this: jsr166tests.jtreg.util.Collections.T6433170"->"r6 := @parameter0: java.lang.Class";
    "r6 := @parameter0: java.lang.Class"->"r0 := @parameter1: jsr166tests.jtreg.util.Collections.T6433170$F[]";
    "r0 := @parameter1: jsr166tests.jtreg.util.Collections.T6433170$F[]"->"r1 = r0";
    "r1 = r0"->"i0 = lengthof r1";
    "i0 = lengthof r1"->"i1 = 0";
    "i1 = 0"->"if i1 >= i0 goto return";
    "if i1 >= i0 goto return"->"r2 = r1[i1]";
    "if i1 >= i0 goto return"->"return";
    "r2 = r1[i1]"->"virtualinvoke r2.<jsr166tests.jtreg.util.Collections.T6433170$F: void f()>()";
    "r2 = r1[i1]"->"$r11 := @caughtexception";
    "virtualinvoke r2.<jsr166tests.jtreg.util.Collections.T6433170$F: void f()>()"->"$r4 = new java.lang.StringBuilder";
    "virtualinvoke r2.<jsr166tests.jtreg.util.Collections.T6433170$F: void f()>()"->"$r11 := @caughtexception";
    "$r4 = new java.lang.StringBuilder"->"specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()";
    "$r4 = new java.lang.StringBuilder"->"$r11 := @caughtexception";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")";
    "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()"->"$r11 := @caughtexception";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")"->"$r7 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>()";
    "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")"->"$r11 := @caughtexception";
    "$r7 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>()"->"$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)";
    "$r7 = virtualinvoke r6.<java.lang.Class: java.lang.String getName()>()"->"$r11 := @caughtexception";
    "$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)"->"$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not thrown\")";
    "$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)"->"$r11 := @caughtexception";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not thrown\")"->"$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()";
    "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not thrown\")"->"$r11 := @caughtexception";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void fail(java.lang.String)>($r10)";
    "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()"->"$r11 := @caughtexception";
    "virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void fail(java.lang.String)>($r10)"->"goto [?= i1 = i1 + 1]";
    "virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void fail(java.lang.String)>($r10)"->"$r11 := @caughtexception";
    "goto [?= i1 = i1 + 1]"->"i1 = i1 + 1";
    "$r11 := @caughtexception"->"r12 = $r11";
    "r12 = $r11"->"$r13 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()";
    "$r13 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>()"->"$z0 = virtualinvoke r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r13)";
    "$z0 = virtualinvoke r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r13)"->"if $z0 == 0 goto virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void unexpected(java.lang.Throwable)>(r12)";
    "if $z0 == 0 goto virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void unexpected(java.lang.Throwable)>(r12)"->"virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void pass()>()";
    "if $z0 == 0 goto virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void unexpected(java.lang.Throwable)>(r12)"->"virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void unexpected(java.lang.Throwable)>(r12)";
    "virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void pass()>()"->"goto [?= i1 = i1 + 1]";
    "goto [?= i1 = i1 + 1]"->"i1 = i1 + 1";
    "virtualinvoke r3.<jsr166tests.jtreg.util.Collections.T6433170: void unexpected(java.lang.Throwable)>(r12)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= i0 goto return";
}
