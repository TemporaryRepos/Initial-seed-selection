digraph "unitGraph" {
    "r10 := @parameter0: java.lang.String[]"
    "r11 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(0, \"foo\")"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>(r11)"
    "$r0 = interfaceinvoke r11.<java.util.List: java.util.List subList(int,int)>(0, 0)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r0)"
    "r1 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(42, \"foo\")"
    "$i0 = interfaceinvoke r1.<java.util.List: int size()>()"
    "if $i0 != 42 goto $z0 = 0"
    "$z0 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)]"
    "$z0 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)"
    "$i1 = interfaceinvoke r1.<java.util.List: int size()>()"
    "$i2 = $i1 / 2"
    "$i3 = interfaceinvoke r1.<java.util.List: int size()>()"
    "$i4 = $i3 - 1"
    "$r2 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i2, $i4)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkFoos(java.util.List)>($r2)"
    "goto [?= $r4 = <java.lang.System: java.io.PrintStream out>]"
    "$r9 := @caughtexception"
    "r12 = $r9"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void unexpected(java.lang.Throwable)>(r12)"
    "$r4 = <java.lang.System: java.io.PrintStream out>"
    "$r3 = newarray (java.lang.Object)[2]"
    "$i5 = <jsr166tests.jtreg.util.Collections.NCopies: int passed>"
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"
    "$r3[0] = $r5"
    "$i6 = <jsr166tests.jtreg.util.Collections.NCopies: int failed>"
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)"
    "$r3[1] = $r6"
    "virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r3)"
    "$i7 = <jsr166tests.jtreg.util.Collections.NCopies: int failed>"
    "if $i7 <= 0 goto return"
    "$r8 = new java.lang.Error"
    "specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"Some tests failed\")"
    "throw $r8"
    "return"
    "r10 := @parameter0: java.lang.String[]"->"r11 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(0, \"foo\")";
    "r10 := @parameter0: java.lang.String[]"->"$r9 := @caughtexception";
    "r11 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(0, \"foo\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>(r11)";
    "r11 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(0, \"foo\")"->"$r9 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>(r11)"->"$r0 = interfaceinvoke r11.<java.util.List: java.util.List subList(int,int)>(0, 0)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>(r11)"->"$r9 := @caughtexception";
    "$r0 = interfaceinvoke r11.<java.util.List: java.util.List subList(int,int)>(0, 0)"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r0)";
    "$r0 = interfaceinvoke r11.<java.util.List: java.util.List subList(int,int)>(0, 0)"->"$r9 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r0)"->"r1 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(42, \"foo\")";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r0)"->"$r9 := @caughtexception";
    "r1 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(42, \"foo\")"->"$i0 = interfaceinvoke r1.<java.util.List: int size()>()";
    "r1 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>(42, \"foo\")"->"$r9 := @caughtexception";
    "$i0 = interfaceinvoke r1.<java.util.List: int size()>()"->"if $i0 != 42 goto $z0 = 0";
    "$i0 = interfaceinvoke r1.<java.util.List: int size()>()"->"$r9 := @caughtexception";
    "if $i0 != 42 goto $z0 = 0"->"$z0 = 1";
    "if $i0 != 42 goto $z0 = 0"->"$z0 = 0";
    "if $i0 != 42 goto $z0 = 0"->"$r9 := @caughtexception";
    "$z0 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)]";
    "$z0 = 1"->"$r9 := @caughtexception";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)]"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)]"->"$r9 := @caughtexception";
    "$z0 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)";
    "$z0 = 0"->"$r9 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)"->"$i1 = interfaceinvoke r1.<java.util.List: int size()>()";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z0)"->"$r9 := @caughtexception";
    "$i1 = interfaceinvoke r1.<java.util.List: int size()>()"->"$i2 = $i1 / 2";
    "$i1 = interfaceinvoke r1.<java.util.List: int size()>()"->"$r9 := @caughtexception";
    "$i2 = $i1 / 2"->"$i3 = interfaceinvoke r1.<java.util.List: int size()>()";
    "$i2 = $i1 / 2"->"$r9 := @caughtexception";
    "$i3 = interfaceinvoke r1.<java.util.List: int size()>()"->"$i4 = $i3 - 1";
    "$i3 = interfaceinvoke r1.<java.util.List: int size()>()"->"$r9 := @caughtexception";
    "$i4 = $i3 - 1"->"$r2 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i2, $i4)";
    "$i4 = $i3 - 1"->"$r9 := @caughtexception";
    "$r2 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i2, $i4)"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkFoos(java.util.List)>($r2)";
    "$r2 = interfaceinvoke r1.<java.util.List: java.util.List subList(int,int)>($i2, $i4)"->"$r9 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkFoos(java.util.List)>($r2)"->"goto [?= $r4 = <java.lang.System: java.io.PrintStream out>]";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkFoos(java.util.List)>($r2)"->"$r9 := @caughtexception";
    "goto [?= $r4 = <java.lang.System: java.io.PrintStream out>]"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r9 := @caughtexception"->"r12 = $r9";
    "r12 = $r9"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void unexpected(java.lang.Throwable)>(r12)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void unexpected(java.lang.Throwable)>(r12)"->"$r4 = <java.lang.System: java.io.PrintStream out>";
    "$r4 = <java.lang.System: java.io.PrintStream out>"->"$r3 = newarray (java.lang.Object)[2]";
    "$r3 = newarray (java.lang.Object)[2]"->"$i5 = <jsr166tests.jtreg.util.Collections.NCopies: int passed>";
    "$i5 = <jsr166tests.jtreg.util.Collections.NCopies: int passed>"->"$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)";
    "$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5)"->"$r3[0] = $r5";
    "$r3[0] = $r5"->"$i6 = <jsr166tests.jtreg.util.Collections.NCopies: int failed>";
    "$i6 = <jsr166tests.jtreg.util.Collections.NCopies: int failed>"->"$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)";
    "$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6)"->"$r3[1] = $r6";
    "$r3[1] = $r6"->"virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r3)";
    "virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r3)"->"$i7 = <jsr166tests.jtreg.util.Collections.NCopies: int failed>";
    "$i7 = <jsr166tests.jtreg.util.Collections.NCopies: int failed>"->"if $i7 <= 0 goto return";
    "if $i7 <= 0 goto return"->"$r8 = new java.lang.Error";
    "if $i7 <= 0 goto return"->"return";
    "$r8 = new java.lang.Error"->"specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"Some tests failed\")";
    "specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"Some tests failed\")"->"throw $r8";
}
