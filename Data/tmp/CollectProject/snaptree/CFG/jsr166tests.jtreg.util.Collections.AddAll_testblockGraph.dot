digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.util.Collection;
i2 = 0;
i3 = 0;
"
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i3 >= 100 goto $z0 = r0 instanceof java.util.List;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r18 = <jsr166tests.jtreg.util.Collections.AddAll: java.util.Random rnd>;
i0 = virtualinvoke $r18.<java.util.Random: int nextInt(int)>(10);
$i1 = i2 + i0;
$r19 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(i2, $i1);
$z3 = staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r0, $r19);
if i0 == 0 goto $z4 = 0;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z4 = 1;
goto [?= (branch)];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z4 = 0;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if $z3 == $z4 goto i2 = i2 + i0;
"
    "Block 6:
[preds: 5 ] [succs: ]
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);
throw $r20;
"
    "Block 7:
[preds: 5 ] [succs: 1 ]
i2 = i2 + i0;
i3 = i3 + 1;
goto [?= (branch)];
"
    "Block 8:
[preds: 1 ] [succs: 9 11 ]
$z0 = r0 instanceof java.util.List;
if $z0 == 0 goto $r1 = new java.util.HashSet;
"
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r10 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(0, i2);
$r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean equals(java.lang.Object)>($r11);
if $z2 != 0 goto return;
"
    "Block 10:
[preds: 9 ] [succs: ]
$r12 = new java.lang.RuntimeException;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);
throw $r12;
"
    "Block 11:
[preds: 8 ] [succs: 12 13 ]
$r1 = new java.util.HashSet;
$r2 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(0, i2);
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);
specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean equals(java.lang.Object)>($r1);
if $z1 != 0 goto return;
"
    "Block 12:
[preds: 11 ] [succs: ]
$r4 = new java.lang.RuntimeException;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
throw $r4;
"
    "Block 13:
[preds: 9 11 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.util.Collection;
i2 = 0;
i3 = 0;
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i3 >= 100 goto $z0 = r0 instanceof java.util.List;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i3 >= 100 goto $z0 = r0 instanceof java.util.List;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r18 = <jsr166tests.jtreg.util.Collections.AddAll: java.util.Random rnd>;
i0 = virtualinvoke $r18.<java.util.Random: int nextInt(int)>(10);
$i1 = i2 + i0;
$r19 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(i2, $i1);
$z3 = staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r0, $r19);
if i0 == 0 goto $z4 = 0;
";
    "Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i3 >= 100 goto $z0 = r0 instanceof java.util.List;
"->"Block 8:
[preds: 1 ] [succs: 9 11 ]
$z0 = r0 instanceof java.util.List;
if $z0 == 0 goto $r1 = new java.util.HashSet;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r18 = <jsr166tests.jtreg.util.Collections.AddAll: java.util.Random rnd>;
i0 = virtualinvoke $r18.<java.util.Random: int nextInt(int)>(10);
$i1 = i2 + i0;
$r19 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(i2, $i1);
$z3 = staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r0, $r19);
if i0 == 0 goto $z4 = 0;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$z4 = 1;
goto [?= (branch)];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r18 = <jsr166tests.jtreg.util.Collections.AddAll: java.util.Random rnd>;
i0 = virtualinvoke $r18.<java.util.Random: int nextInt(int)>(10);
$i1 = i2 + i0;
$r19 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(i2, $i1);
$z3 = staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(r0, $r19);
if i0 == 0 goto $z4 = 0;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$z4 = 0;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$z4 = 1;
goto [?= (branch)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if $z3 == $z4 goto i2 = i2 + i0;
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$z4 = 0;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if $z3 == $z4 goto i2 = i2 + i0;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if $z3 == $z4 goto i2 = i2 + i0;
"->"Block 6:
[preds: 5 ] [succs: ]
$r20 = new java.lang.RuntimeException;
$r21 = new java.lang.StringBuilder;
specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();
$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\");
$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);
$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);
throw $r20;
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
if $z3 == $z4 goto i2 = i2 + i0;
"->"Block 7:
[preds: 5 ] [succs: 1 ]
i2 = i2 + i0;
i3 = i3 + 1;
goto [?= (branch)];
";
    "Block 7:
[preds: 5 ] [succs: 1 ]
i2 = i2 + i0;
i3 = i3 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 7 ] [succs: 2 8 ]
if i3 >= 100 goto $z0 = r0 instanceof java.util.List;
";
    "Block 8:
[preds: 1 ] [succs: 9 11 ]
$z0 = r0 instanceof java.util.List;
if $z0 == 0 goto $r1 = new java.util.HashSet;
"->"Block 9:
[preds: 8 ] [succs: 10 13 ]
$r10 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(0, i2);
$r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean equals(java.lang.Object)>($r11);
if $z2 != 0 goto return;
";
    "Block 8:
[preds: 1 ] [succs: 9 11 ]
$z0 = r0 instanceof java.util.List;
if $z0 == 0 goto $r1 = new java.util.HashSet;
"->"Block 11:
[preds: 8 ] [succs: 12 13 ]
$r1 = new java.util.HashSet;
$r2 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(0, i2);
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);
specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean equals(java.lang.Object)>($r1);
if $z1 != 0 goto return;
";
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r10 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(0, i2);
$r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean equals(java.lang.Object)>($r11);
if $z2 != 0 goto return;
"->"Block 10:
[preds: 9 ] [succs: ]
$r12 = new java.lang.RuntimeException;
$r13 = new java.lang.StringBuilder;
specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();
$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r12.<java.lang.RuntimeException: void <init>(java.lang.String)>($r17);
throw $r12;
";
    "Block 9:
[preds: 8 ] [succs: 10 13 ]
$r10 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(0, i2);
$r11 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r10);
$z2 = interfaceinvoke r0.<java.util.Collection: boolean equals(java.lang.Object)>($r11);
if $z2 != 0 goto return;
"->"Block 13:
[preds: 9 11 ] [succs: ]
return;
";
    "Block 11:
[preds: 8 ] [succs: 12 13 ]
$r1 = new java.util.HashSet;
$r2 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(0, i2);
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);
specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean equals(java.lang.Object)>($r1);
if $z1 != 0 goto return;
"->"Block 12:
[preds: 11 ] [succs: ]
$r4 = new java.lang.RuntimeException;
$r5 = new java.lang.StringBuilder;
specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();
$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);
throw $r4;
";
    "Block 11:
[preds: 8 ] [succs: 12 13 ]
$r1 = new java.util.HashSet;
$r2 = staticinvoke <jsr166tests.jtreg.util.Collections.AddAll: java.lang.Integer[] range(int,int)>(0, i2);
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);
specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);
$z1 = interfaceinvoke r0.<java.util.Collection: boolean equals(java.lang.Object)>($r1);
if $z1 != 0 goto return;
"->"Block 13:
[preds: 9 11 ] [succs: ]
return;
";
}
