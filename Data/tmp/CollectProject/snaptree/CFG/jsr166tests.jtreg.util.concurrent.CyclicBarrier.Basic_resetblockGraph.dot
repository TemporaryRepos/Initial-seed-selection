digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.concurrent.CyclicBarrier;
virtualinvoke r0.<java.util.concurrent.CyclicBarrier: void reset()>();
$z0 = virtualinvoke r0.<java.util.concurrent.CyclicBarrier: boolean isBroken()>();
if $z0 != 0 goto $z1 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void check(boolean)>($z1)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void check(boolean)>($z1);
$i0 = virtualinvoke r0.<java.util.concurrent.CyclicBarrier: int getNumberWaiting()>();
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void equal(java.lang.Object,java.lang.Object)>($r1, $r2);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.concurrent.CyclicBarrier;
virtualinvoke r0.<java.util.concurrent.CyclicBarrier: void reset()>();
$z0 = virtualinvoke r0.<java.util.concurrent.CyclicBarrier: boolean isBroken()>();
if $z0 != 0 goto $z1 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void check(boolean)>($z1)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.concurrent.CyclicBarrier;
virtualinvoke r0.<java.util.concurrent.CyclicBarrier: void reset()>();
$z0 = virtualinvoke r0.<java.util.concurrent.CyclicBarrier: boolean isBroken()>();
if $z0 != 0 goto $z1 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z1 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void check(boolean)>($z1)];
"->"Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void check(boolean)>($z1);
$i0 = virtualinvoke r0.<java.util.concurrent.CyclicBarrier: int getNumberWaiting()>();
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void equal(java.lang.Object,java.lang.Object)>($r1, $r2);
return;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z1 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void check(boolean)>($z1);
$i0 = virtualinvoke r0.<java.util.concurrent.CyclicBarrier: int getNumberWaiting()>();
$r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void equal(java.lang.Object,java.lang.Object)>($r1, $r2);
return;
";
}
