digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.util.concurrent.ThreadPoolExecutor;
i1 := @parameter1: int;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>();
if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
staticinvoke <java.lang.Thread: void yield()>();
goto [?= $i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()];
"
    "Block 3:
[preds: 1 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>();
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r0 := @parameter0: java.util.concurrent.ThreadPoolExecutor;
i1 := @parameter1: int;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>();
if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>();
if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
staticinvoke <java.lang.Thread: void yield()>();
goto [?= $i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>();
if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>();
"->"Block 3:
[preds: 1 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>();
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
staticinvoke <java.lang.Thread: void yield()>();
goto [?= $i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>();
if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>();
";
}
