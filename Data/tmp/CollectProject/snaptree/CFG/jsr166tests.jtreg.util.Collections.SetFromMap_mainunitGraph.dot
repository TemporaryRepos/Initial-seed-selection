digraph "unitGraph" {
    "r8 := @parameter0: java.lang.String[]"
    "staticinvoke <jsr166tests.jtreg.util.Collections.SetFromMap: void realMain()>()"
    "goto [?= $r1 = <java.lang.System: java.io.PrintStream out>]"
    "$r6 := @caughtexception"
    "r7 = $r6"
    "staticinvoke <jsr166tests.jtreg.util.Collections.SetFromMap: void unexpected(java.lang.Throwable)>(r7)"
    "$r1 = <java.lang.System: java.io.PrintStream out>"
    "$r0 = newarray (java.lang.Object)[2]"
    "$i0 = <jsr166tests.jtreg.util.Collections.SetFromMap: int passed>"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"
    "$r0[0] = $r2"
    "$i1 = <jsr166tests.jtreg.util.Collections.SetFromMap: int failed>"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"
    "$r0[1] = $r3"
    "virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r0)"
    "$i2 = <jsr166tests.jtreg.util.Collections.SetFromMap: int failed>"
    "if $i2 <= 0 goto return"
    "$r5 = new java.lang.Exception"
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")"
    "throw $r5"
    "return"
    "r8 := @parameter0: java.lang.String[]"->"staticinvoke <jsr166tests.jtreg.util.Collections.SetFromMap: void realMain()>()";
    "r8 := @parameter0: java.lang.String[]"->"$r6 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.Collections.SetFromMap: void realMain()>()"->"goto [?= $r1 = <java.lang.System: java.io.PrintStream out>]";
    "staticinvoke <jsr166tests.jtreg.util.Collections.SetFromMap: void realMain()>()"->"$r6 := @caughtexception";
    "goto [?= $r1 = <java.lang.System: java.io.PrintStream out>]"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "$r6 := @caughtexception"->"r7 = $r6";
    "r7 = $r6"->"staticinvoke <jsr166tests.jtreg.util.Collections.SetFromMap: void unexpected(java.lang.Throwable)>(r7)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.SetFromMap: void unexpected(java.lang.Throwable)>(r7)"->"$r1 = <java.lang.System: java.io.PrintStream out>";
    "$r1 = <java.lang.System: java.io.PrintStream out>"->"$r0 = newarray (java.lang.Object)[2]";
    "$r0 = newarray (java.lang.Object)[2]"->"$i0 = <jsr166tests.jtreg.util.Collections.SetFromMap: int passed>";
    "$i0 = <jsr166tests.jtreg.util.Collections.SetFromMap: int passed>"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)"->"$r0[0] = $r2";
    "$r0[0] = $r2"->"$i1 = <jsr166tests.jtreg.util.Collections.SetFromMap: int failed>";
    "$i1 = <jsr166tests.jtreg.util.Collections.SetFromMap: int failed>"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1)"->"$r0[1] = $r3";
    "$r0[1] = $r3"->"virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r0)";
    "virtualinvoke $r1.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r0)"->"$i2 = <jsr166tests.jtreg.util.Collections.SetFromMap: int failed>";
    "$i2 = <jsr166tests.jtreg.util.Collections.SetFromMap: int failed>"->"if $i2 <= 0 goto return";
    "if $i2 <= 0 goto return"->"$r5 = new java.lang.Exception";
    "if $i2 <= 0 goto return"->"return";
    "$r5 = new java.lang.Exception"->"specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")";
    "specialinvoke $r5.<java.lang.Exception: void <init>(java.lang.String)>(\"Some tests failed\")"->"throw $r5";
}
