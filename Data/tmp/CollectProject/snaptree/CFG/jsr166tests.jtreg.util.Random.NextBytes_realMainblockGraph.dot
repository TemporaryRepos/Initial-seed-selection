digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
$r0 = newarray (byte)[11];
$r0[0] = 27;
$r0[1] = -105;
$r0[2] = -24;
$r0[3] = 83;
$r0[4] = -77;
$r0[5] = -29;
$r0[6] = 119;
$r0[7] = -74;
$r0[8] = -106;
$r0[9] = 68;
$r0[10] = 54;
r1 = $r0;
$r2 = new java.util.Random;
specialinvoke $r2.<java.util.Random: void <init>(long)>(2398579034L);
r3 = $r2;
i1 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r1;
if i1 > $i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
virtualinvoke r3.<java.util.Random: void setSeed(long)>(2398579034L);
r4 = newarray (byte)[i1];
virtualinvoke r3.<java.util.Random: void nextBytes(byte[])>(r4);
$r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, i1);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r5);
staticinvoke <jsr166tests.jtreg.util.Random.NextBytes: void check(boolean)>($z0);
i1 = i1 + 1;
goto [?= $i0 = lengthof r1];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r6 := @parameter0: java.lang.String[];
$r0 = newarray (byte)[11];
$r0[0] = 27;
$r0[1] = -105;
$r0[2] = -24;
$r0[3] = 83;
$r0[4] = -77;
$r0[5] = -29;
$r0[6] = 119;
$r0[7] = -74;
$r0[8] = -106;
$r0[9] = 68;
$r0[10] = 54;
r1 = $r0;
$r2 = new java.util.Random;
specialinvoke $r2.<java.util.Random: void <init>(long)>(2398579034L);
r3 = $r2;
i1 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r1;
if i1 > $i0 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r1;
if i1 > $i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
virtualinvoke r3.<java.util.Random: void setSeed(long)>(2398579034L);
r4 = newarray (byte)[i1];
virtualinvoke r3.<java.util.Random: void nextBytes(byte[])>(r4);
$r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, i1);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r5);
staticinvoke <jsr166tests.jtreg.util.Random.NextBytes: void check(boolean)>($z0);
i1 = i1 + 1;
goto [?= $i0 = lengthof r1];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r1;
if i1 > $i0 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
virtualinvoke r3.<java.util.Random: void setSeed(long)>(2398579034L);
r4 = newarray (byte)[i1];
virtualinvoke r3.<java.util.Random: void nextBytes(byte[])>(r4);
$r5 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(r1, i1);
$z0 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(r4, $r5);
staticinvoke <jsr166tests.jtreg.util.Random.NextBytes: void check(boolean)>($z0);
i1 = i1 + 1;
goto [?= $i0 = lengthof r1];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i0 = lengthof r1;
if i1 > $i0 goto return;
";
}
