digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r0);
$r1 = new java.util.concurrent.ConcurrentSkipListMap;
specialinvoke $r1.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r1);
$r2 = new edu.stanford.ppl.concurrent.SnapTreeMap;
specialinvoke $r2.<edu.stanford.ppl.concurrent.SnapTreeMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r2);
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = newarray (java.lang.Object)[2];
$i0 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int passed>;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3[0] = $r5;
$i1 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int failed>;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$r3[1] = $r6;
virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r3);
$i2 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int failed>;
if $i2 <= 0 goto return;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r8 = new java.lang.Error;
specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"Some tests failed\");
throw $r8;
"
    "Block 2:
[preds: 0 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r0);
$r1 = new java.util.concurrent.ConcurrentSkipListMap;
specialinvoke $r1.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r1);
$r2 = new edu.stanford.ppl.concurrent.SnapTreeMap;
specialinvoke $r2.<edu.stanford.ppl.concurrent.SnapTreeMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r2);
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = newarray (java.lang.Object)[2];
$i0 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int passed>;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3[0] = $r5;
$i1 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int failed>;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$r3[1] = $r6;
virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r3);
$i2 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int failed>;
if $i2 <= 0 goto return;
"->"Block 1:
[preds: 0 ] [succs: ]
$r8 = new java.lang.Error;
specialinvoke $r8.<java.lang.Error: void <init>(java.lang.String)>(\"Some tests failed\");
throw $r8;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r9 := @parameter0: java.lang.String[];
$r0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r0);
$r1 = new java.util.concurrent.ConcurrentSkipListMap;
specialinvoke $r1.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r1);
$r2 = new edu.stanford.ppl.concurrent.SnapTreeMap;
specialinvoke $r2.<edu.stanford.ppl.concurrent.SnapTreeMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: void test(java.util.concurrent.ConcurrentMap)>($r2);
$r4 = <java.lang.System: java.io.PrintStream out>;
$r3 = newarray (java.lang.Object)[2];
$i0 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int passed>;
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);
$r3[0] = $r5;
$i1 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int failed>;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$r3[1] = $r6;
virtualinvoke $r4.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"%nPassed = %d, failed = %d%n%n\", $r3);
$i2 = <jsr166tests.jtreg.util.concurrent.ConcurrentMap.ConcurrentModification: int failed>;
if $i2 <= 0 goto return;
"->"Block 2:
[preds: 0 ] [succs: ]
return;
";
}
