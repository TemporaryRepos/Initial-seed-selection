digraph "unitGraph" {
    "r11 := @parameter0: java.lang.String[]"
    "$r0 = newarray (java.util.concurrent.Semaphore)[3]"
    "$r1 = new java.util.concurrent.Semaphore"
    "specialinvoke $r1.<java.util.concurrent.Semaphore: void <init>(int)>(0)"
    "$r0[0] = $r1"
    "$r2 = new java.util.concurrent.Semaphore"
    "specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 0)"
    "$r0[1] = $r2"
    "$r3 = new java.util.concurrent.Semaphore"
    "specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 1)"
    "$r0[2] = $r3"
    "r4 = $r0"
    "i0 = lengthof r4"
    "i4 = 0"
    "if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>"
    "r6 = r4[i4]"
    "$r7 = newarray (int)[2]"
    "$r7[0] = 0"
    "$r7[1] = 1"
    "r8 = $r7"
    "i1 = lengthof r8"
    "i5 = 0"
    "if i5 >= i1 goto i4 = i4 + 1"
    "i2 = r8[i5]"
    "i6 = 0"
    "if i6 >= 3 goto i5 = i5 + 1"
    "$l3 = (long) i2"
    "$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"
    "$z0 = virtualinvoke r6.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l3, $r9)"
    "if $z0 == 0 goto i6 = i6 + 1"
    "$r10 = new java.lang.Error"
    "specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"Acquired Semaphore with no permits!\")"
    "throw $r10"
    "i6 = i6 + 1"
    "goto [?= (branch)]"
    "i5 = i5 + 1"
    "i4 = i4 + 1"
    "$r5 = <java.lang.System: java.io.PrintStream out>"
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Done!\")"
    "return"
    "r11 := @parameter0: java.lang.String[]"->"$r0 = newarray (java.util.concurrent.Semaphore)[3]";
    "$r0 = newarray (java.util.concurrent.Semaphore)[3]"->"$r1 = new java.util.concurrent.Semaphore";
    "$r1 = new java.util.concurrent.Semaphore"->"specialinvoke $r1.<java.util.concurrent.Semaphore: void <init>(int)>(0)";
    "specialinvoke $r1.<java.util.concurrent.Semaphore: void <init>(int)>(0)"->"$r0[0] = $r1";
    "$r0[0] = $r1"->"$r2 = new java.util.concurrent.Semaphore";
    "$r2 = new java.util.concurrent.Semaphore"->"specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 0)";
    "specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 0)"->"$r0[1] = $r2";
    "$r0[1] = $r2"->"$r3 = new java.util.concurrent.Semaphore";
    "$r3 = new java.util.concurrent.Semaphore"->"specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 1)";
    "specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 1)"->"$r0[2] = $r3";
    "$r0[2] = $r3"->"r4 = $r0";
    "r4 = $r0"->"i0 = lengthof r4";
    "i0 = lengthof r4"->"i4 = 0";
    "i4 = 0"->"if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>";
    "if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>"->"r6 = r4[i4]";
    "if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>"->"$r5 = <java.lang.System: java.io.PrintStream out>";
    "r6 = r4[i4]"->"$r7 = newarray (int)[2]";
    "$r7 = newarray (int)[2]"->"$r7[0] = 0";
    "$r7[0] = 0"->"$r7[1] = 1";
    "$r7[1] = 1"->"r8 = $r7";
    "r8 = $r7"->"i1 = lengthof r8";
    "i1 = lengthof r8"->"i5 = 0";
    "i5 = 0"->"if i5 >= i1 goto i4 = i4 + 1";
    "if i5 >= i1 goto i4 = i4 + 1"->"i2 = r8[i5]";
    "if i5 >= i1 goto i4 = i4 + 1"->"i4 = i4 + 1";
    "i2 = r8[i5]"->"i6 = 0";
    "i6 = 0"->"if i6 >= 3 goto i5 = i5 + 1";
    "if i6 >= 3 goto i5 = i5 + 1"->"$l3 = (long) i2";
    "if i6 >= 3 goto i5 = i5 + 1"->"i5 = i5 + 1";
    "$l3 = (long) i2"->"$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>";
    "$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>"->"$z0 = virtualinvoke r6.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l3, $r9)";
    "$z0 = virtualinvoke r6.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l3, $r9)"->"if $z0 == 0 goto i6 = i6 + 1";
    "if $z0 == 0 goto i6 = i6 + 1"->"$r10 = new java.lang.Error";
    "if $z0 == 0 goto i6 = i6 + 1"->"i6 = i6 + 1";
    "$r10 = new java.lang.Error"->"specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"Acquired Semaphore with no permits!\")";
    "specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"Acquired Semaphore with no permits!\")"->"throw $r10";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= 3 goto i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= i1 goto i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>";
    "$r5 = <java.lang.System: java.io.PrintStream out>"->"virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Done!\")";
    "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Done!\")"->"return";
}
