digraph "unitGraph" {
    "r0 := @parameter0: java.util.List"
    "$z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>()"
    "if $z0 != 0 goto $z4 = 0"
    "$z4 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)]"
    "$z4 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)"
    "$r1 = new java.lang.String"
    "specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"foo\")"
    "$i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1)"
    "if $i0 != 0 goto $z5 = 0"
    "$z5 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)]"
    "$z5 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)"
    "$r2 = new java.lang.String"
    "specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(\"foo\")"
    "$i1 = interfaceinvoke r0.<java.util.List: int lastIndexOf(java.lang.Object)>($r2)"
    "$i2 = interfaceinvoke r0.<java.util.List: int size()>()"
    "$i3 = $i2 - 1"
    "if $i1 != $i3 goto $z6 = 0"
    "$z6 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)]"
    "$z6 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)"
    "$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>()"
    "$i4 = lengthof $r3"
    "$i5 = interfaceinvoke r0.<java.util.List: int size()>()"
    "if $i4 != $i5 goto $z7 = 0"
    "$z7 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)]"
    "$z7 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)"
    "$r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>()"
    "$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>()"
    "if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0"
    "$z8 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)]"
    "$z8 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)"
    "$i6 = interfaceinvoke r0.<java.util.List: int size()>()"
    "$r6 = newarray (java.lang.String)[$i6]"
    "$r7 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6)"
    "r8 = (java.lang.String[]) $r7"
    "$r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()"
    "if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0"
    "$z9 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)]"
    "$z9 = 0"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)"
    "$r10 = r8[0]"
    "$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z1)"
    "$i7 = lengthof r8"
    "$i8 = $i7 - 1"
    "$r11 = r8[$i8]"
    "$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z2)"
    "$i9 = interfaceinvoke r0.<java.util.List: int size()>()"
    "$i10 = $i9 / 2"
    "$r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i10)"
    "$r13 = (java.lang.String) $r12"
    "$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z3)"
    "$i11 = interfaceinvoke r0.<java.util.List: int size()>()"
    "$i12 = $i11 / 2"
    "$i13 = interfaceinvoke r0.<java.util.List: int size()>()"
    "$i14 = $i13 / 2"
    "$r14 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>($i12, $i14)"
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r14)"
    "return"
    "r0 := @parameter0: java.util.List"->"$z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>()";
    "$z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>()"->"if $z0 != 0 goto $z4 = 0";
    "if $z0 != 0 goto $z4 = 0"->"$z4 = 1";
    "if $z0 != 0 goto $z4 = 0"->"$z4 = 0";
    "$z4 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)]"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)";
    "$z4 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)"->"$r1 = new java.lang.String";
    "$r1 = new java.lang.String"->"specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"foo\")";
    "specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"foo\")"->"$i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1)";
    "$i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1)"->"if $i0 != 0 goto $z5 = 0";
    "if $i0 != 0 goto $z5 = 0"->"$z5 = 1";
    "if $i0 != 0 goto $z5 = 0"->"$z5 = 0";
    "$z5 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)]"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)";
    "$z5 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)"->"$r2 = new java.lang.String";
    "$r2 = new java.lang.String"->"specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(\"foo\")";
    "specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(\"foo\")"->"$i1 = interfaceinvoke r0.<java.util.List: int lastIndexOf(java.lang.Object)>($r2)";
    "$i1 = interfaceinvoke r0.<java.util.List: int lastIndexOf(java.lang.Object)>($r2)"->"$i2 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i2 = interfaceinvoke r0.<java.util.List: int size()>()"->"$i3 = $i2 - 1";
    "$i3 = $i2 - 1"->"if $i1 != $i3 goto $z6 = 0";
    "if $i1 != $i3 goto $z6 = 0"->"$z6 = 1";
    "if $i1 != $i3 goto $z6 = 0"->"$z6 = 0";
    "$z6 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)]"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)";
    "$z6 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)"->"$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>()";
    "$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>()"->"$i4 = lengthof $r3";
    "$i4 = lengthof $r3"->"$i5 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i5 = interfaceinvoke r0.<java.util.List: int size()>()"->"if $i4 != $i5 goto $z7 = 0";
    "if $i4 != $i5 goto $z7 = 0"->"$z7 = 1";
    "if $i4 != $i5 goto $z7 = 0"->"$z7 = 0";
    "$z7 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)]"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)";
    "$z7 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)"->"$r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>()";
    "$r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>()"->"$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>()";
    "$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>()"->"if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0";
    "if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0"->"$z8 = 1";
    "if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0"->"$z8 = 0";
    "$z8 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)]"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)";
    "$z8 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)"->"$i6 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i6 = interfaceinvoke r0.<java.util.List: int size()>()"->"$r6 = newarray (java.lang.String)[$i6]";
    "$r6 = newarray (java.lang.String)[$i6]"->"$r7 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6)";
    "$r7 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6)"->"r8 = (java.lang.String[]) $r7";
    "r8 = (java.lang.String[]) $r7"->"$r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()";
    "$r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>()"->"if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0";
    "if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0"->"$z9 = 1";
    "if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0"->"$z9 = 0";
    "$z9 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)]";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)]"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)";
    "$z9 = 0"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)"->"$r10 = r8[0]";
    "$r10 = r8[0]"->"$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")";
    "$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z1)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z1)"->"$i7 = lengthof r8";
    "$i7 = lengthof r8"->"$i8 = $i7 - 1";
    "$i8 = $i7 - 1"->"$r11 = r8[$i8]";
    "$r11 = r8[$i8]"->"$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")";
    "$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z2)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z2)"->"$i9 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i9 = interfaceinvoke r0.<java.util.List: int size()>()"->"$i10 = $i9 / 2";
    "$i10 = $i9 / 2"->"$r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i10)";
    "$r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i10)"->"$r13 = (java.lang.String) $r12";
    "$r13 = (java.lang.String) $r12"->"$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")";
    "$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\")"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z3)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z3)"->"$i11 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i11 = interfaceinvoke r0.<java.util.List: int size()>()"->"$i12 = $i11 / 2";
    "$i12 = $i11 / 2"->"$i13 = interfaceinvoke r0.<java.util.List: int size()>()";
    "$i13 = interfaceinvoke r0.<java.util.List: int size()>()"->"$i14 = $i13 / 2";
    "$i14 = $i13 / 2"->"$r14 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>($i12, $i14)";
    "$r14 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>($i12, $i14)"->"staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r14)";
    "staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r14)"->"return";
}
