digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: ]
r21 := @parameter0: java.lang.String[];
$r0 = new java.util.ArrayList;
specialinvoke $r0.<java.util.ArrayList: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r0);
$r1 = new java.util.Vector;
specialinvoke $r1.<java.util.Vector: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r1);
$r2 = new java.util.LinkedList;
specialinvoke $r2.<java.util.LinkedList: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r2);
$r3 = new java.util.ArrayDeque;
specialinvoke $r3.<java.util.ArrayDeque: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r3);
$r4 = new java.util.TreeSet;
specialinvoke $r4.<java.util.TreeSet: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r4);
$r5 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke $r5.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r5);
$r6 = new java.util.concurrent.CopyOnWriteArraySet;
specialinvoke $r6.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r6);
$r7 = new java.util.concurrent.ConcurrentSkipListSet;
specialinvoke $r7.<java.util.concurrent.ConcurrentSkipListSet: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r7);
$r8 = new java.util.PriorityQueue;
specialinvoke $r8.<java.util.PriorityQueue: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r8);
$r9 = new java.util.concurrent.LinkedBlockingQueue;
specialinvoke $r9.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r9);
$r10 = new java.util.concurrent.ArrayBlockingQueue;
specialinvoke $r10.<java.util.concurrent.ArrayBlockingQueue: void <init>(int)>(100);
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r10);
$r11 = new java.util.concurrent.ConcurrentLinkedQueue;
specialinvoke $r11.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testCollection(java.util.Collection)>($r11);
$r12 = new java.util.HashMap;
specialinvoke $r12.<java.util.HashMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r12);
$r13 = new java.util.Hashtable;
specialinvoke $r13.<java.util.Hashtable: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r13);
$r14 = new java.util.LinkedHashMap;
specialinvoke $r14.<java.util.LinkedHashMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r14);
$r15 = new java.util.WeakHashMap;
specialinvoke $r15.<java.util.WeakHashMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r15);
$r16 = new java.util.IdentityHashMap;
specialinvoke $r16.<java.util.IdentityHashMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r16);
$r17 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke $r17.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r17);
$r18 = new java.util.concurrent.ConcurrentSkipListMap;
specialinvoke $r18.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r18);
$r19 = new edu.stanford.ppl.concurrent.SnapTreeMap;
specialinvoke $r19.<edu.stanford.ppl.concurrent.SnapTreeMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r19);
$r20 = new java.util.TreeMap;
specialinvoke $r20.<java.util.TreeMap: void <init>()>();
staticinvoke <jsr166tests.jtreg.util.Collection.IteratorAtEnd: void testMap(java.util.Map)>($r20);
return;
"
}
