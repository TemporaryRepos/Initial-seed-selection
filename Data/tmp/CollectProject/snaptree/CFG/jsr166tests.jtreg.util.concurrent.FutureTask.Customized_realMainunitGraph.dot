digraph "unitGraph" {
    "r42 := @parameter0: java.lang.String[]"
    "$r0 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$6"
    "specialinvoke $r0.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$6: void <init>()>()"
    "r1 = $r0"
    "$r2 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$7"
    "specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$7: void <init>()>()"
    "r3 = $r2"
    "$r4 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"
    "$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"
    "specialinvoke $r4.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r5)"
    "r43 = $r4"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r43)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(0L, 0L, 0L)"
    "$z0 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: boolean runAndReset()>()"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r43)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r43)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(1L, 1L, 0L)"
    "$r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"
    "$r7 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: java.lang.Object get()>()"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equal(java.lang.Object,java.lang.Object)>($r6, $r7)"
    "$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"
    "$r9 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: java.lang.Object get()>()"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equal(java.lang.Object,java.lang.Object)>($r8, $r9)"
    "goto [?= $r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"
    "$r41 := @caughtexception"
    "r44 = $r41"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r44)"
    "$r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"
    "$r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"
    "specialinvoke $r10.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r11)"
    "r45 = $r10"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void cancel(java.util.concurrent.FutureTask,boolean)>(r45, 0)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r45)"
    "$z1 = virtualinvoke r45.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: boolean runAndReset()>()"
    "if $z1 != 0 goto $z2 = 0"
    "$z2 = 1"
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)]"
    "$z2 = 0"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)"
    "goto [?= $r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"
    "$r40 := @caughtexception"
    "r46 = $r40"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r46)"
    "$r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"
    "$r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"
    "specialinvoke $r12.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r3, $r13)"
    "r47 = $r12"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r47)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r47)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r47)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(3L, 1L, 1L)"
    "goto [?= $r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"
    "$r39 := @caughtexception"
    "r48 = $r39"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r48)"
    "$r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"
    "$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"
    "specialinvoke $r14.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r15)"
    "r49 = $r14"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r49)"
    "$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)"
    "virtualinvoke r49.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void set(java.lang.Object)>($r16)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r49)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 1L)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r49)"
    "$r17 = new java.lang.Throwable"
    "specialinvoke $r17.<java.lang.Throwable: void <init>()>()"
    "virtualinvoke r49.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void setException(java.lang.Throwable)>($r17)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 2L)"
    "goto [?= $r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"
    "$r38 := @caughtexception"
    "r50 = $r38"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r50)"
    "$r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"
    "$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"
    "specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r19)"
    "r51 = $r18"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r51)"
    "$r20 = new java.lang.Throwable"
    "specialinvoke $r20.<java.lang.Throwable: void <init>()>()"
    "virtualinvoke r51.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void setException(java.lang.Throwable)>($r20)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r51)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 2L, 3L)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r51)"
    "$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)"
    "virtualinvoke r51.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void set(java.lang.Object)>($r21)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 3L, 3L)"
    "goto [?= $r24 = <java.lang.System: java.io.PrintStream out>]"
    "$r37 := @caughtexception"
    "r52 = $r37"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r52)"
    "$r24 = <java.lang.System: java.io.PrintStream out>"
    "$r22 = newarray (java.lang.Object)[1]"
    "$r23 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong doneCount>"
    "$l0 = virtualinvoke $r23.<java.util.concurrent.atomic.AtomicLong: long get()>()"
    "$r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)"
    "$r22[0] = $r25"
    "virtualinvoke $r24.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"doneCount=%d%n\", $r22)"
    "$r29 = <java.lang.System: java.io.PrintStream out>"
    "$r27 = newarray (java.lang.Object)[1]"
    "$r28 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong setCount>"
    "$l1 = virtualinvoke $r28.<java.util.concurrent.atomic.AtomicLong: long get()>()"
    "$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"
    "$r27[0] = $r30"
    "virtualinvoke $r29.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"setCount=%d%n\", $r27)"
    "$r34 = <java.lang.System: java.io.PrintStream out>"
    "$r32 = newarray (java.lang.Object)[1]"
    "$r33 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong setExceptionCount>"
    "$l2 = virtualinvoke $r33.<java.util.concurrent.atomic.AtomicLong: long get()>()"
    "$r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"
    "$r32[0] = $r35"
    "virtualinvoke $r34.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"setExceptionCount=%d%n\", $r32)"
    "return"
    "r42 := @parameter0: java.lang.String[]"->"$r0 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$6";
    "$r0 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$6"->"specialinvoke $r0.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$6: void <init>()>()";
    "specialinvoke $r0.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$6: void <init>()>()"->"r1 = $r0";
    "r1 = $r0"->"$r2 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$7";
    "$r2 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$7"->"specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$7: void <init>()>()";
    "specialinvoke $r2.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$7: void <init>()>()"->"r3 = $r2";
    "r3 = $r2"->"$r4 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "r3 = $r2"->"$r41 := @caughtexception";
    "$r4 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)";
    "$r4 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r41 := @caughtexception";
    "$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"specialinvoke $r4.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r5)";
    "$r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r41 := @caughtexception";
    "specialinvoke $r4.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r5)"->"r43 = $r4";
    "specialinvoke $r4.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r5)"->"$r41 := @caughtexception";
    "r43 = $r4"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r43)";
    "r43 = $r4"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(0L, 0L, 0L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r43)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(0L, 0L, 0L)"->"$z0 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: boolean runAndReset()>()";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(0L, 0L, 0L)"->"$r41 := @caughtexception";
    "$z0 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: boolean runAndReset()>()"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0)";
    "$z0 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: boolean runAndReset()>()"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r43)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z0)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(0L, 0L, 0L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r43)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(0L, 0L, 0L)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r43)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(0L, 0L, 0L)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r43)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r43)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(1L, 1L, 0L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r43)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(1L, 1L, 0L)"->"$r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(1L, 1L, 0L)"->"$r41 := @caughtexception";
    "$r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r7 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: java.lang.Object get()>()";
    "$r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r41 := @caughtexception";
    "$r7 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: java.lang.Object get()>()"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equal(java.lang.Object,java.lang.Object)>($r6, $r7)";
    "$r7 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: java.lang.Object get()>()"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equal(java.lang.Object,java.lang.Object)>($r6, $r7)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r43)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equal(java.lang.Object,java.lang.Object)>($r6, $r7)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r43)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r43)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r43)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(1L, 1L, 0L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r43)"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(1L, 1L, 0L)"->"$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(1L, 1L, 0L)"->"$r41 := @caughtexception";
    "$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r9 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: java.lang.Object get()>()";
    "$r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r41 := @caughtexception";
    "$r9 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: java.lang.Object get()>()"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equal(java.lang.Object,java.lang.Object)>($r8, $r9)";
    "$r9 = virtualinvoke r43.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: java.lang.Object get()>()"->"$r41 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equal(java.lang.Object,java.lang.Object)>($r8, $r9)"->"goto [?= $r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equal(java.lang.Object,java.lang.Object)>($r8, $r9)"->"$r41 := @caughtexception";
    "goto [?= $r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"->"$r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "goto [?= $r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"->"$r40 := @caughtexception";
    "$r41 := @caughtexception"->"r44 = $r41";
    "r44 = $r41"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r44)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r44)"->"$r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r44)"->"$r40 := @caughtexception";
    "$r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)";
    "$r10 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r40 := @caughtexception";
    "$r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"specialinvoke $r10.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r11)";
    "$r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r40 := @caughtexception";
    "specialinvoke $r10.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r11)"->"r45 = $r10";
    "specialinvoke $r10.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r11)"->"$r40 := @caughtexception";
    "r45 = $r10"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void cancel(java.util.concurrent.FutureTask,boolean)>(r45, 0)";
    "r45 = $r10"->"$r40 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void cancel(java.util.concurrent.FutureTask,boolean)>(r45, 0)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void cancel(java.util.concurrent.FutureTask,boolean)>(r45, 0)"->"$r40 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void cancel(java.util.concurrent.FutureTask,boolean)>(r45, 0)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)"->"$r40 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void cancel(java.util.concurrent.FutureTask,boolean)>(r45, 0)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void cancel(java.util.concurrent.FutureTask,boolean)>(r45, 0)"->"$r40 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r45)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)"->"$r40 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r45)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r45)"->"$r40 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)"->"$z1 = virtualinvoke r45.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: boolean runAndReset()>()";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(2L, 1L, 0L)"->"$r40 := @caughtexception";
    "$z1 = virtualinvoke r45.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: boolean runAndReset()>()"->"if $z1 != 0 goto $z2 = 0";
    "$z1 = virtualinvoke r45.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: boolean runAndReset()>()"->"$r40 := @caughtexception";
    "if $z1 != 0 goto $z2 = 0"->"$z2 = 1";
    "if $z1 != 0 goto $z2 = 0"->"$z2 = 0";
    "if $z1 != 0 goto $z2 = 0"->"$r40 := @caughtexception";
    "$z2 = 1"->"goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)]";
    "$z2 = 1"->"$r40 := @caughtexception";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)]"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)";
    "goto [?= staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)]"->"$r40 := @caughtexception";
    "$z2 = 0"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)";
    "$z2 = 0"->"$r40 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)"->"goto [?= $r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void check(boolean)>($z2)"->"$r40 := @caughtexception";
    "goto [?= $r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"->"$r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "goto [?= $r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"->"$r39 := @caughtexception";
    "$r40 := @caughtexception"->"r46 = $r40";
    "r46 = $r40"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r46)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r46)"->"$r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r46)"->"$r39 := @caughtexception";
    "$r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)";
    "$r12 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r39 := @caughtexception";
    "$r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"specialinvoke $r12.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r3, $r13)";
    "$r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r39 := @caughtexception";
    "specialinvoke $r12.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r3, $r13)"->"r47 = $r12";
    "specialinvoke $r12.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r3, $r13)"->"$r39 := @caughtexception";
    "r47 = $r12"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r47)";
    "r47 = $r12"->"$r39 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r47)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r47)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r47)"->"$r39 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r47)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r47)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r47)"->"$r39 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r47)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(3L, 1L, 1L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r47)"->"$r39 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(3L, 1L, 1L)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r47)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(3L, 1L, 1L)"->"$r39 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r47)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(3L, 1L, 1L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r47)"->"$r39 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(3L, 1L, 1L)"->"goto [?= $r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(3L, 1L, 1L)"->"$r39 := @caughtexception";
    "goto [?= $r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"->"$r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "goto [?= $r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"->"$r38 := @caughtexception";
    "$r39 := @caughtexception"->"r48 = $r39";
    "r48 = $r39"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r48)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r48)"->"$r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r48)"->"$r38 := @caughtexception";
    "$r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)";
    "$r14 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r38 := @caughtexception";
    "$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"specialinvoke $r14.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r15)";
    "$r15 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r38 := @caughtexception";
    "specialinvoke $r14.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r15)"->"r49 = $r14";
    "specialinvoke $r14.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r15)"->"$r38 := @caughtexception";
    "r49 = $r14"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r49)";
    "r49 = $r14"->"$r38 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r49)"->"$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r49)"->"$r38 := @caughtexception";
    "$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)"->"virtualinvoke r49.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void set(java.lang.Object)>($r16)";
    "$r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)"->"$r38 := @caughtexception";
    "virtualinvoke r49.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void set(java.lang.Object)>($r16)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r49)";
    "virtualinvoke r49.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void set(java.lang.Object)>($r16)"->"$r38 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r49)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 1L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r49)"->"$r38 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 1L)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r49)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 1L)"->"$r38 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r49)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 1L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r49)"->"$r38 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 1L)"->"$r17 = new java.lang.Throwable";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 1L)"->"$r38 := @caughtexception";
    "$r17 = new java.lang.Throwable"->"specialinvoke $r17.<java.lang.Throwable: void <init>()>()";
    "$r17 = new java.lang.Throwable"->"$r38 := @caughtexception";
    "specialinvoke $r17.<java.lang.Throwable: void <init>()>()"->"virtualinvoke r49.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void setException(java.lang.Throwable)>($r17)";
    "specialinvoke $r17.<java.lang.Throwable: void <init>()>()"->"$r38 := @caughtexception";
    "virtualinvoke r49.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void setException(java.lang.Throwable)>($r17)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r49)";
    "virtualinvoke r49.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void setException(java.lang.Throwable)>($r17)"->"$r38 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r49)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 2L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkDone(java.util.concurrent.FutureTask)>(r49)"->"$r38 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 2L)"->"goto [?= $r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(4L, 2L, 2L)"->"$r38 := @caughtexception";
    "goto [?= $r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"->"$r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "goto [?= $r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask]"->"$r37 := @caughtexception";
    "$r38 := @caughtexception"->"r50 = $r38";
    "r50 = $r38"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r50)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r50)"->"$r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r50)"->"$r37 := @caughtexception";
    "$r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)";
    "$r18 = new jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask"->"$r37 := @caughtexception";
    "$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r19)";
    "$r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(42L)"->"$r37 := @caughtexception";
    "specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r19)"->"r51 = $r18";
    "specialinvoke $r18.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void <init>(java.lang.Runnable,java.lang.Object)>(r1, $r19)"->"$r37 := @caughtexception";
    "r51 = $r18"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r51)";
    "r51 = $r18"->"$r37 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r51)"->"$r20 = new java.lang.Throwable";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkReady(java.util.concurrent.FutureTask)>(r51)"->"$r37 := @caughtexception";
    "$r20 = new java.lang.Throwable"->"specialinvoke $r20.<java.lang.Throwable: void <init>()>()";
    "$r20 = new java.lang.Throwable"->"$r37 := @caughtexception";
    "specialinvoke $r20.<java.lang.Throwable: void <init>()>()"->"virtualinvoke r51.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void setException(java.lang.Throwable)>($r20)";
    "specialinvoke $r20.<java.lang.Throwable: void <init>()>()"->"$r37 := @caughtexception";
    "virtualinvoke r51.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void setException(java.lang.Throwable)>($r20)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r51)";
    "virtualinvoke r51.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void setException(java.lang.Throwable)>($r20)"->"$r37 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r51)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 2L, 3L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r51)"->"$r37 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 2L, 3L)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r51)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 2L, 3L)"->"$r37 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r51)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 2L, 3L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void run(java.util.concurrent.FutureTask)>(r51)"->"$r37 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 2L, 3L)"->"$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 2L, 3L)"->"$r37 := @caughtexception";
    "$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)"->"virtualinvoke r51.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void set(java.lang.Object)>($r21)";
    "$r21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(99L)"->"$r37 := @caughtexception";
    "virtualinvoke r51.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void set(java.lang.Object)>($r21)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r51)";
    "virtualinvoke r51.<jsr166tests.jtreg.util.concurrent.FutureTask.Customized$MyFutureTask: void set(java.lang.Object)>($r21)"->"$r37 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r51)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 3L, 3L)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void checkThrew(java.util.concurrent.FutureTask)>(r51)"->"$r37 := @caughtexception";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 3L, 3L)"->"goto [?= $r24 = <java.lang.System: java.io.PrintStream out>]";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void equalCounts(long,long,long)>(5L, 3L, 3L)"->"$r37 := @caughtexception";
    "goto [?= $r24 = <java.lang.System: java.io.PrintStream out>]"->"$r24 = <java.lang.System: java.io.PrintStream out>";
    "$r37 := @caughtexception"->"r52 = $r37";
    "r52 = $r37"->"staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r52)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: void unexpected(java.lang.Throwable)>(r52)"->"$r24 = <java.lang.System: java.io.PrintStream out>";
    "$r24 = <java.lang.System: java.io.PrintStream out>"->"$r22 = newarray (java.lang.Object)[1]";
    "$r22 = newarray (java.lang.Object)[1]"->"$r23 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong doneCount>";
    "$r23 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong doneCount>"->"$l0 = virtualinvoke $r23.<java.util.concurrent.atomic.AtomicLong: long get()>()";
    "$l0 = virtualinvoke $r23.<java.util.concurrent.atomic.AtomicLong: long get()>()"->"$r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)";
    "$r25 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0)"->"$r22[0] = $r25";
    "$r22[0] = $r25"->"virtualinvoke $r24.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"doneCount=%d%n\", $r22)";
    "virtualinvoke $r24.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"doneCount=%d%n\", $r22)"->"$r29 = <java.lang.System: java.io.PrintStream out>";
    "$r29 = <java.lang.System: java.io.PrintStream out>"->"$r27 = newarray (java.lang.Object)[1]";
    "$r27 = newarray (java.lang.Object)[1]"->"$r28 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong setCount>";
    "$r28 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong setCount>"->"$l1 = virtualinvoke $r28.<java.util.concurrent.atomic.AtomicLong: long get()>()";
    "$l1 = virtualinvoke $r28.<java.util.concurrent.atomic.AtomicLong: long get()>()"->"$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)";
    "$r30 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1)"->"$r27[0] = $r30";
    "$r27[0] = $r30"->"virtualinvoke $r29.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"setCount=%d%n\", $r27)";
    "virtualinvoke $r29.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"setCount=%d%n\", $r27)"->"$r34 = <java.lang.System: java.io.PrintStream out>";
    "$r34 = <java.lang.System: java.io.PrintStream out>"->"$r32 = newarray (java.lang.Object)[1]";
    "$r32 = newarray (java.lang.Object)[1]"->"$r33 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong setExceptionCount>";
    "$r33 = <jsr166tests.jtreg.util.concurrent.FutureTask.Customized: java.util.concurrent.atomic.AtomicLong setExceptionCount>"->"$l2 = virtualinvoke $r33.<java.util.concurrent.atomic.AtomicLong: long get()>()";
    "$l2 = virtualinvoke $r33.<java.util.concurrent.atomic.AtomicLong: long get()>()"->"$r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)";
    "$r35 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2)"->"$r32[0] = $r35";
    "$r32[0] = $r35"->"virtualinvoke $r34.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"setExceptionCount=%d%n\", $r32)";
    "virtualinvoke $r34.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>(\"setExceptionCount=%d%n\", $r32)"->"return";
}
