digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.List;
$z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();
if $z0 != 0 goto $z4 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z4 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4);
$r1 = new java.lang.String;
specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1);
if $i0 != 0 goto $z5 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z5 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z5 = 0;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5);
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i1 = interfaceinvoke r0.<java.util.List: int lastIndexOf(java.lang.Object)>($r2);
$i2 = interfaceinvoke r0.<java.util.List: int size()>();
$i3 = $i2 - 1;
if $i1 != $i3 goto $z6 = 0;
"
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z6 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)];
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z6 = 0;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6);
$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$i4 = lengthof $r3;
$i5 = interfaceinvoke r0.<java.util.List: int size()>();
if $i4 != $i5 goto $z7 = 0;
"
    "Block 10:
[preds: 9 ] [succs: 12 ]
$z7 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)];
"
    "Block 11:
[preds: 9 ] [succs: 12 ]
$z7 = 0;
"
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7);
$r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0;
"
    "Block 13:
[preds: 12 ] [succs: 15 ]
$z8 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)];
"
    "Block 14:
[preds: 12 ] [succs: 15 ]
$z8 = 0;
"
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8);
$i6 = interfaceinvoke r0.<java.util.List: int size()>();
$r6 = newarray (java.lang.String)[$i6];
$r7 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
r8 = (java.lang.String[]) $r7;
$r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();
if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0;
"
    "Block 16:
[preds: 15 ] [succs: 18 ]
$z9 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)];
"
    "Block 17:
[preds: 15 ] [succs: 18 ]
$z9 = 0;
"
    "Block 18:
[preds: 16 17 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9);
$r10 = r8[0];
$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z1);
$i7 = lengthof r8;
$i8 = $i7 - 1;
$r11 = r8[$i8];
$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z2);
$i9 = interfaceinvoke r0.<java.util.List: int size()>();
$i10 = $i9 / 2;
$r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i10);
$r13 = (java.lang.String) $r12;
$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z3);
$i11 = interfaceinvoke r0.<java.util.List: int size()>();
$i12 = $i11 / 2;
$i13 = interfaceinvoke r0.<java.util.List: int size()>();
$i14 = $i13 / 2;
$r14 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>($i12, $i14);
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r14);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.List;
$z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();
if $z0 != 0 goto $z4 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.util.List;
$z0 = interfaceinvoke r0.<java.util.List: boolean isEmpty()>();
if $z0 != 0 goto $z4 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z4 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z4 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4)];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4);
$r1 = new java.lang.String;
specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1);
if $i0 != 0 goto $z5 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z4 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4);
$r1 = new java.lang.String;
specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1);
if $i0 != 0 goto $z5 = 0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4);
$r1 = new java.lang.String;
specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1);
if $i0 != 0 goto $z5 = 0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$z5 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z4);
$r1 = new java.lang.String;
specialinvoke $r1.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i0 = interfaceinvoke r0.<java.util.List: int indexOf(java.lang.Object)>($r1);
if $i0 != 0 goto $z5 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z5 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z5 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5)];
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5);
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i1 = interfaceinvoke r0.<java.util.List: int lastIndexOf(java.lang.Object)>($r2);
$i2 = interfaceinvoke r0.<java.util.List: int size()>();
$i3 = $i2 - 1;
if $i1 != $i3 goto $z6 = 0;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z5 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5);
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i1 = interfaceinvoke r0.<java.util.List: int lastIndexOf(java.lang.Object)>($r2);
$i2 = interfaceinvoke r0.<java.util.List: int size()>();
$i3 = $i2 - 1;
if $i1 != $i3 goto $z6 = 0;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5);
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i1 = interfaceinvoke r0.<java.util.List: int lastIndexOf(java.lang.Object)>($r2);
$i2 = interfaceinvoke r0.<java.util.List: int size()>();
$i3 = $i2 - 1;
if $i1 != $i3 goto $z6 = 0;
"->"Block 7:
[preds: 6 ] [succs: 9 ]
$z6 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)];
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z5);
$r2 = new java.lang.String;
specialinvoke $r2.<java.lang.String: void <init>(java.lang.String)>(\"foo\");
$i1 = interfaceinvoke r0.<java.util.List: int lastIndexOf(java.lang.Object)>($r2);
$i2 = interfaceinvoke r0.<java.util.List: int size()>();
$i3 = $i2 - 1;
if $i1 != $i3 goto $z6 = 0;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
$z6 = 0;
";
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z6 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6)];
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6);
$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$i4 = lengthof $r3;
$i5 = interfaceinvoke r0.<java.util.List: int size()>();
if $i4 != $i5 goto $z7 = 0;
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z6 = 0;
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6);
$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$i4 = lengthof $r3;
$i5 = interfaceinvoke r0.<java.util.List: int size()>();
if $i4 != $i5 goto $z7 = 0;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6);
$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$i4 = lengthof $r3;
$i5 = interfaceinvoke r0.<java.util.List: int size()>();
if $i4 != $i5 goto $z7 = 0;
"->"Block 10:
[preds: 9 ] [succs: 12 ]
$z7 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)];
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z6);
$r3 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$i4 = lengthof $r3;
$i5 = interfaceinvoke r0.<java.util.List: int size()>();
if $i4 != $i5 goto $z7 = 0;
"->"Block 11:
[preds: 9 ] [succs: 12 ]
$z7 = 0;
";
    "Block 10:
[preds: 9 ] [succs: 12 ]
$z7 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7)];
"->"Block 12:
[preds: 10 11 ] [succs: 13 14 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7);
$r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0;
";
    "Block 11:
[preds: 9 ] [succs: 12 ]
$z7 = 0;
"->"Block 12:
[preds: 10 11 ] [succs: 13 14 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7);
$r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0;
";
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7);
$r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0;
"->"Block 13:
[preds: 12 ] [succs: 15 ]
$z8 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)];
";
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z7);
$r4 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray()>();
$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();
if $r5 != class \"[Ljava/lang/Object;\" goto $z8 = 0;
"->"Block 14:
[preds: 12 ] [succs: 15 ]
$z8 = 0;
";
    "Block 13:
[preds: 12 ] [succs: 15 ]
$z8 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8)];
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8);
$i6 = interfaceinvoke r0.<java.util.List: int size()>();
$r6 = newarray (java.lang.String)[$i6];
$r7 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
r8 = (java.lang.String[]) $r7;
$r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();
if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0;
";
    "Block 14:
[preds: 12 ] [succs: 15 ]
$z8 = 0;
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8);
$i6 = interfaceinvoke r0.<java.util.List: int size()>();
$r6 = newarray (java.lang.String)[$i6];
$r7 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
r8 = (java.lang.String[]) $r7;
$r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();
if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8);
$i6 = interfaceinvoke r0.<java.util.List: int size()>();
$r6 = newarray (java.lang.String)[$i6];
$r7 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
r8 = (java.lang.String[]) $r7;
$r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();
if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0;
"->"Block 16:
[preds: 15 ] [succs: 18 ]
$z9 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)];
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z8);
$i6 = interfaceinvoke r0.<java.util.List: int size()>();
$r6 = newarray (java.lang.String)[$i6];
$r7 = interfaceinvoke r0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);
r8 = (java.lang.String[]) $r7;
$r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();
if $r9 != class \"[Ljava/lang/String;\" goto $z9 = 0;
"->"Block 17:
[preds: 15 ] [succs: 18 ]
$z9 = 0;
";
    "Block 16:
[preds: 15 ] [succs: 18 ]
$z9 = 1;
goto [?= staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9)];
"->"Block 18:
[preds: 16 17 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9);
$r10 = r8[0];
$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z1);
$i7 = lengthof r8;
$i8 = $i7 - 1;
$r11 = r8[$i8];
$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z2);
$i9 = interfaceinvoke r0.<java.util.List: int size()>();
$i10 = $i9 / 2;
$r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i10);
$r13 = (java.lang.String) $r12;
$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z3);
$i11 = interfaceinvoke r0.<java.util.List: int size()>();
$i12 = $i11 / 2;
$i13 = interfaceinvoke r0.<java.util.List: int size()>();
$i14 = $i13 / 2;
$r14 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>($i12, $i14);
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r14);
return;
";
    "Block 17:
[preds: 15 ] [succs: 18 ]
$z9 = 0;
"->"Block 18:
[preds: 16 17 ] [succs: ]
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z9);
$r10 = r8[0];
$z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z1);
$i7 = lengthof r8;
$i8 = $i7 - 1;
$r11 = r8[$i8];
$z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z2);
$i9 = interfaceinvoke r0.<java.util.List: int size()>();
$i10 = $i9 / 2;
$r12 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i10);
$r13 = (java.lang.String) $r12;
$z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(\"foo\");
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void check(boolean)>($z3);
$i11 = interfaceinvoke r0.<java.util.List: int size()>();
$i12 = $i11 / 2;
$i13 = interfaceinvoke r0.<java.util.List: int size()>();
$i14 = $i13 / 2;
$r14 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>($i12, $i14);
staticinvoke <jsr166tests.jtreg.util.Collections.NCopies: void checkEmpty(java.util.List)>($r14);
return;
";
}
