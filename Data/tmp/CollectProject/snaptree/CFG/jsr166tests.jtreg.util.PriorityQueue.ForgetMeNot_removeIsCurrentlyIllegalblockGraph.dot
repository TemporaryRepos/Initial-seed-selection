digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.Iterator;
i0 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 2 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = newarray (jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$Fun)[1];
$r1 = new jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$2;
specialinvoke $r1.<jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$2: void <init>(java.util.Iterator)>(r2);
$r0[0] = $r1;
staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void THROWS(java.lang.Class,jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$Fun[])>(class \"Ljava/lang/IllegalStateException;\", $r0);
i0 = i0 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.util.Iterator;
i0 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 2 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 2 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = newarray (jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$Fun)[1];
$r1 = new jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$2;
specialinvoke $r1.<jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$2: void <init>(java.util.Iterator)>(r2);
$r0[0] = $r1;
staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void THROWS(java.lang.Class,jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$Fun[])>(class \"Ljava/lang/IllegalStateException;\", $r0);
i0 = i0 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 2 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = newarray (jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$Fun)[1];
$r1 = new jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$2;
specialinvoke $r1.<jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$2: void <init>(java.util.Iterator)>(r2);
$r0[0] = $r1;
staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void THROWS(java.lang.Class,jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot$Fun[])>(class \"Ljava/lang/IllegalStateException;\", $r0);
i0 = i0 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i0 >= 2 goto return;
";
}
