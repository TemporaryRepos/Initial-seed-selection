digraph "unitGraph" {
    "r0 := @parameter0: java.util.concurrent.ThreadPoolExecutor"
    "i1 := @parameter1: int"
    "$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()"
    "if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>()"
    "staticinvoke <java.lang.Thread: void yield()>()"
    "goto [?= $i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()]"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>()"
    "return"
    "r0 := @parameter0: java.util.concurrent.ThreadPoolExecutor"->"i1 := @parameter1: int";
    "i1 := @parameter1: int"->"$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()";
    "$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()"->"if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>()";
    "if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>()"->"staticinvoke <java.lang.Thread: void yield()>()";
    "if $i0 == i1 goto staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>()"->"staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>()";
    "staticinvoke <java.lang.Thread: void yield()>()"->"goto [?= $i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()]";
    "goto [?= $i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()]"->"$i0 = virtualinvoke r0.<java.util.concurrent.ThreadPoolExecutor: int getPoolSize()>()";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.ThreadPoolExecutor.ModifyCorePoolSize: void pass()>()"->"return";
}
