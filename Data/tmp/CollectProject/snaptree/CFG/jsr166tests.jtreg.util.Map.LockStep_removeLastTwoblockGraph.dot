digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @this: jsr166tests.jtreg.util.Map.LockStep;
r0 := @parameter0: java.util.List;
$r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);
r2 = (java.util.Map) $r1;
i0 = interfaceinvoke r2.<java.util.Map: int size()>();
$r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();
r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
i2 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
i2 = i2 + 1;
goto [?= $i1 = i0 - 2];
"
    "Block 3:
[preds: 1 ] [succs: 4 ]
r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 4:
[preds: 3 11 ] [succs: 5 12 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Map) $r8;
$r10 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>();
r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();
"
    "Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
if r12 == r14 goto interfaceinvoke r11.<java.util.Iterator: void remove()>();
"
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
if r12 != r5 goto (branch);
"
    "Block 9:
[preds: 7 8 ] [succs: 10 ]
interfaceinvoke r11.<java.util.Iterator: void remove()>();
"
    "Block 10:
[preds: 8 9 ] [succs: 6 ]
goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 11:
[preds: 6 ] [succs: 4 ]
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 12:
[preds: 4 ] [succs: ]
virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r7 := @this: jsr166tests.jtreg.util.Map.LockStep;
r0 := @parameter0: java.util.List;
$r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);
r2 = (java.util.Map) $r1;
i0 = interfaceinvoke r2.<java.util.Map: int size()>();
$r3 = interfaceinvoke r2.<java.util.Map: java.util.Set keySet()>();
r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();
i2 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
"->"Block 2:
[preds: 1 ] [succs: 1 ]
interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
i2 = i2 + 1;
goto [?= $i1 = i0 - 2];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
"->"Block 3:
[preds: 1 ] [succs: 4 ]
r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
i2 = i2 + 1;
goto [?= $i1 = i0 - 2];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
$i1 = i0 - 2;
if i2 >= $i1 goto r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
";
    "Block 3:
[preds: 1 ] [succs: 4 ]
r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();
r6 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();
"->"Block 4:
[preds: 3 11 ] [succs: 5 12 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
";
    "Block 4:
[preds: 3 11 ] [succs: 5 12 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
"->"Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Map) $r8;
$r10 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>();
r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();
";
    "Block 4:
[preds: 3 11 ] [succs: 5 12 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
"->"Block 12:
[preds: 4 ] [succs: ]
virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
return;
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
$r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();
r9 = (java.util.Map) $r8;
$r10 = interfaceinvoke r9.<java.util.Map: java.util.Set keySet()>();
r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();
"->"Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
";
    "Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"->"Block 7:
[preds: 6 ] [succs: 8 9 ]
r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
if r12 == r14 goto interfaceinvoke r11.<java.util.Iterator: void remove()>();
";
    "Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
"->"Block 11:
[preds: 6 ] [succs: 4 ]
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
if r12 == r14 goto interfaceinvoke r11.<java.util.Iterator: void remove()>();
"->"Block 8:
[preds: 7 ] [succs: 9 10 ]
if r12 != r5 goto (branch);
";
    "Block 7:
[preds: 6 ] [succs: 8 9 ]
r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();
if r12 == r14 goto interfaceinvoke r11.<java.util.Iterator: void remove()>();
"->"Block 9:
[preds: 7 8 ] [succs: 10 ]
interfaceinvoke r11.<java.util.Iterator: void remove()>();
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
if r12 != r5 goto (branch);
"->"Block 9:
[preds: 7 8 ] [succs: 10 ]
interfaceinvoke r11.<java.util.Iterator: void remove()>();
";
    "Block 8:
[preds: 7 ] [succs: 9 10 ]
if r12 != r5 goto (branch);
"->"Block 10:
[preds: 8 9 ] [succs: 6 ]
goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 9:
[preds: 7 8 ] [succs: 10 ]
interfaceinvoke r11.<java.util.Iterator: void remove()>();
"->"Block 10:
[preds: 8 9 ] [succs: 6 ]
goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 10:
[preds: 8 9 ] [succs: 6 ]
goto [?= $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>()];
"->"Block 6:
[preds: 5 10 ] [succs: 7 11 ]
$z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();
if $z1 == 0 goto (branch);
";
    "Block 11:
[preds: 6 ] [succs: 4 ]
goto [?= $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>()];
"->"Block 4:
[preds: 3 11 ] [succs: 5 12 ]
$z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();
if $z0 == 0 goto virtualinvoke r7.<jsr166tests.jtreg.util.Map.LockStep: void mapsEqual(java.util.List)>(r0);
";
}
