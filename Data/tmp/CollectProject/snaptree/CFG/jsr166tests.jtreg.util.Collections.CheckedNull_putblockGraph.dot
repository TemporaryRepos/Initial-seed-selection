digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: jsr166tests.jtreg.util.Collections.CheckedNull;
r0 := @parameter0: java.util.Map;
r2 := @parameter1: java.lang.Object;
r3 := @parameter2: java.lang.Object;
i0 = interfaceinvoke r0.<java.util.Map: int size()>();
$z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
if $z0 != 0 goto $z8 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z8 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z8 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z1 != 0 goto $z9 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z9 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z9 = 0;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9);
$r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(null, $r4);
$z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$z3 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$i1 = interfaceinvoke r0.<java.util.Map: int size()>();
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r5, $r6);
$r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r7);
$z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
if $z4 != 0 goto $z10 = 0;
"
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z10 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)];
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z10 = 0;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10);
$z5 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z5 != 0 goto $z11 = 0;
"
    "Block 10:
[preds: 9 ] [succs: 12 ]
$z11 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)];
"
    "Block 11:
[preds: 9 ] [succs: 12 ]
$z11 = 0;
"
    "Block 12:
[preds: 10 11 ] [succs: ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11);
$r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, r3);
interfaceinvoke r0.<java.util.Map: void putAll(java.util.Map)>($r8);
$z6 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6);
$z7 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7);
$i3 = interfaceinvoke r0.<java.util.Map: int size()>();
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
$i4 = i0 + 1;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r9, $r10);
$r11 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r11);
$i5 = interfaceinvoke r0.<java.util.Map: int size()>();
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r12, $r13);
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: jsr166tests.jtreg.util.Collections.CheckedNull;
r0 := @parameter0: java.util.Map;
r2 := @parameter1: java.lang.Object;
r3 := @parameter2: java.lang.Object;
i0 = interfaceinvoke r0.<java.util.Map: int size()>();
$z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
if $z0 != 0 goto $z8 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$z8 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r1 := @this: jsr166tests.jtreg.util.Collections.CheckedNull;
r0 := @parameter0: java.util.Map;
r2 := @parameter1: java.lang.Object;
r3 := @parameter2: java.lang.Object;
i0 = interfaceinvoke r0.<java.util.Map: int size()>();
$z0 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
if $z0 != 0 goto $z8 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z8 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$z8 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8)];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z1 != 0 goto $z9 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z8 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z1 != 0 goto $z9 = 0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z1 != 0 goto $z9 = 0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$z9 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z8);
$z1 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z1 != 0 goto $z9 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z9 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$z9 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9)];
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9);
$r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(null, $r4);
$z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$z3 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$i1 = interfaceinvoke r0.<java.util.Map: int size()>();
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r5, $r6);
$r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r7);
$z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
if $z4 != 0 goto $z10 = 0;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z9 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9);
$r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(null, $r4);
$z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$z3 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$i1 = interfaceinvoke r0.<java.util.Map: int size()>();
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r5, $r6);
$r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r7);
$z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
if $z4 != 0 goto $z10 = 0;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9);
$r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(null, $r4);
$z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$z3 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$i1 = interfaceinvoke r0.<java.util.Map: int size()>();
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r5, $r6);
$r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r7);
$z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
if $z4 != 0 goto $z10 = 0;
"->"Block 7:
[preds: 6 ] [succs: 9 ]
$z10 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)];
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z9);
$r4 = interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(null, $r4);
$z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z2);
$z3 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z3);
$i1 = interfaceinvoke r0.<java.util.Map: int size()>();
$r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);
$i2 = i0 + 1;
$r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r5, $r6);
$r7 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r7);
$z4 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
if $z4 != 0 goto $z10 = 0;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
$z10 = 0;
";
    "Block 7:
[preds: 6 ] [succs: 9 ]
$z10 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10)];
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10);
$z5 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z5 != 0 goto $z11 = 0;
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z10 = 0;
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10);
$z5 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z5 != 0 goto $z11 = 0;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10);
$z5 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z5 != 0 goto $z11 = 0;
"->"Block 10:
[preds: 9 ] [succs: 12 ]
$z11 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)];
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z10);
$z5 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
if $z5 != 0 goto $z11 = 0;
"->"Block 11:
[preds: 9 ] [succs: 12 ]
$z11 = 0;
";
    "Block 10:
[preds: 9 ] [succs: 12 ]
$z11 = 1;
goto [?= virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11)];
"->"Block 12:
[preds: 10 11 ] [succs: ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11);
$r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, r3);
interfaceinvoke r0.<java.util.Map: void putAll(java.util.Map)>($r8);
$z6 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6);
$z7 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7);
$i3 = interfaceinvoke r0.<java.util.Map: int size()>();
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
$i4 = i0 + 1;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r9, $r10);
$r11 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r11);
$i5 = interfaceinvoke r0.<java.util.Map: int size()>();
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r12, $r13);
return;
";
    "Block 11:
[preds: 9 ] [succs: 12 ]
$z11 = 0;
"->"Block 12:
[preds: 10 11 ] [succs: ]
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z11);
$r8 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(r2, r3);
interfaceinvoke r0.<java.util.Map: void putAll(java.util.Map)>($r8);
$z6 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z6);
$z7 = interfaceinvoke r0.<java.util.Map: boolean containsValue(java.lang.Object)>(r3);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z7);
$i3 = interfaceinvoke r0.<java.util.Map: int size()>();
$r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);
$i4 = i0 + 1;
$r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r9, $r10);
$r11 = interfaceinvoke r0.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>(r3, $r11);
$i5 = interfaceinvoke r0.<java.util.Map: int size()>();
$r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);
$r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);
virtualinvoke r1.<jsr166tests.jtreg.util.Collections.CheckedNull: void equal(java.lang.Object,java.lang.Object)>($r12, $r13);
return;
";
}
