digraph "unitGraph" {
    "r1 := @parameter0: java.util.Iterator"
    "r0 := @parameter1: java.util.Queue"
    "i0 = interfaceinvoke r0.<java.util.Queue: int size()>()"
    "interfaceinvoke r1.<java.util.Iterator: void remove()>()"
    "staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void removeIsCurrentlyIllegal(java.util.Iterator)>(r1)"
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"
    "$i1 = interfaceinvoke r0.<java.util.Queue: int size()>()"
    "$i2 = $i1 + 1"
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"
    "staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void equal(java.lang.Object,java.lang.Object)>($r2, $r3)"
    "return"
    "r1 := @parameter0: java.util.Iterator"->"r0 := @parameter1: java.util.Queue";
    "r0 := @parameter1: java.util.Queue"->"i0 = interfaceinvoke r0.<java.util.Queue: int size()>()";
    "i0 = interfaceinvoke r0.<java.util.Queue: int size()>()"->"interfaceinvoke r1.<java.util.Iterator: void remove()>()";
    "interfaceinvoke r1.<java.util.Iterator: void remove()>()"->"staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void removeIsCurrentlyIllegal(java.util.Iterator)>(r1)";
    "staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void removeIsCurrentlyIllegal(java.util.Iterator)>(r1)"->"$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)";
    "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)"->"$i1 = interfaceinvoke r0.<java.util.Queue: int size()>()";
    "$i1 = interfaceinvoke r0.<java.util.Queue: int size()>()"->"$i2 = $i1 + 1";
    "$i2 = $i1 + 1"->"$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)";
    "$r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2)"->"staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void equal(java.lang.Object,java.lang.Object)>($r2, $r3)";
    "staticinvoke <jsr166tests.jtreg.util.PriorityQueue.ForgetMeNot: void equal(java.lang.Object,java.lang.Object)>($r2, $r3)"->"return";
}
