digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter;
r2 := @parameter1: java.lang.Class;
r1 = virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter: java.lang.Throwable result()>();
if r1 != null goto (branch);
"
    "Block 1:
[preds: 0 ] [succs: 2 8 ]
if r2 == null goto staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
"
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$z0 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);
if $z0 != 0 goto staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatch in thread \");
$r5 = virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter: java.lang.String getName()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
if r2 != null goto $r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
"
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r12 = \"<null>\";
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)];
"
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
"
    "Block 7:
[preds: 5 6 ] [succs: 9 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void fail(java.lang.String)>($r11);
goto [?= return];
"
    "Block 8:
[preds: 1 3 ] [succs: 9 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"
    "Block 9:
[preds: 7 8 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter;
r2 := @parameter1: java.lang.Class;
r1 = virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter: java.lang.Throwable result()>();
if r1 != null goto (branch);
"->"Block 1:
[preds: 0 ] [succs: 2 8 ]
if r2 == null goto staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter;
r2 := @parameter1: java.lang.Class;
r1 = virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter: java.lang.Throwable result()>();
if r1 != null goto (branch);
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 ] [succs: 2 8 ]
if r2 == null goto staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"->"Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
";
    "Block 1:
[preds: 0 ] [succs: 2 8 ]
if r2 == null goto staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"->"Block 8:
[preds: 1 3 ] [succs: 9 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
"->"Block 3:
[preds: 2 ] [succs: 4 8 ]
$z0 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);
if $z0 != 0 goto staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
";
    "Block 2:
[preds: 0 1 ] [succs: 3 4 ]
if r2 == null goto $r3 = new java.lang.StringBuilder;
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatch in thread \");
$r5 = virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter: java.lang.String getName()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
if r2 != null goto $r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$z0 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);
if $z0 != 0 goto staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatch in thread \");
$r5 = virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter: java.lang.String getName()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
if r2 != null goto $r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
";
    "Block 3:
[preds: 2 ] [succs: 4 8 ]
$z0 = virtualinvoke r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);
if $z0 != 0 goto staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"->"Block 8:
[preds: 1 3 ] [succs: 9 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatch in thread \");
$r5 = virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter: java.lang.String getName()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
if r2 != null goto $r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
"->"Block 5:
[preds: 4 ] [succs: 7 ]
$r12 = \"<null>\";
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)];
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$r3 = new java.lang.StringBuilder;
specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();
$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Mismatch in thread \");
$r5 = virtualinvoke r0.<jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic$Awaiter: java.lang.String getName()>();
$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \");
$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);
$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \");
if r2 != null goto $r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
"->"Block 6:
[preds: 4 ] [succs: 7 ]
$r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
";
    "Block 5:
[preds: 4 ] [succs: 7 ]
$r12 = \"<null>\";
goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)];
"->"Block 7:
[preds: 5 6 ] [succs: 9 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void fail(java.lang.String)>($r11);
goto [?= return];
";
    "Block 6:
[preds: 4 ] [succs: 7 ]
$r12 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();
"->"Block 7:
[preds: 5 6 ] [succs: 9 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void fail(java.lang.String)>($r11);
goto [?= return];
";
    "Block 7:
[preds: 5 6 ] [succs: 9 ]
$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);
$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void fail(java.lang.String)>($r11);
goto [?= return];
"->"Block 9:
[preds: 7 8 ] [succs: ]
return;
";
    "Block 8:
[preds: 1 3 ] [succs: 9 ]
staticinvoke <jsr166tests.jtreg.util.concurrent.CyclicBarrier.Basic: void pass()>();
"->"Block 9:
[preds: 7 8 ] [succs: ]
return;
";
}
