digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.lang.Object[];
i1 := @parameter1: int;
i0 := @parameter2: int;
i4 = 0;
"
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
i2 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(i1);
$r1 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
i3 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(i1);
r3 = r2[i2];
$r4 = r2[i3];
r2[i2] = $r4;
r2[i3] = r3;
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 3:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r2 := @parameter0: java.lang.Object[];
i1 := @parameter1: int;
i0 := @parameter2: int;
i4 = 0;
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto return;
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
i2 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(i1);
$r1 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
i3 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(i1);
r3 = r2[i2];
$r4 = r2[i3];
r2[i2] = $r4;
r2[i3] = r3;
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto return;
"->"Block 3:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 1 ]
$r0 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
i2 = virtualinvoke $r0.<java.util.Random: int nextInt(int)>(i1);
$r1 = <jsr166tests.loops.MapMicroBenchmark: java.util.Random rng>;
i3 = virtualinvoke $r1.<java.util.Random: int nextInt(int)>(i1);
r3 = r2[i2];
$r4 = r2[i3];
r2[i2] = $r4;
r2[i3] = r3;
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 2 ] [succs: 2 3 ]
if i4 >= i0 goto return;
";
}
