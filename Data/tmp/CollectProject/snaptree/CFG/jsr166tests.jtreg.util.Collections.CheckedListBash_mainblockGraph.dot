digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r35 := @parameter0: java.lang.String[];
b0 = 100;
b1 = 100;
i28 = 0;
"
    "Block 1:
[preds: 0 43 ] [succs: 2 44 ]
if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r36 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r36, b1);
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r37, b1);
r38 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r38.<java.util.List: boolean retainAll(java.util.Collection)>(r37);
r39 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r37);
r40 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r37);
interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r36);
r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r41.<java.util.List: boolean addAll(java.util.Collection)>(r37);
$z11 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r40);
if $z11 == 0 goto $z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
"
    "Block 3:
[preds: 2 ] [succs: 4 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 2 failed\");
"
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"
    "Block 5:
[preds: 4 ] [succs: 6 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 3 failed\");
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
"
    "Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 4 failed\");
"
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"
    "Block 9:
[preds: 8 ] [succs: 10 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 5 failed\");
"
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"
    "Block 11:
[preds: 10 ] [succs: 12 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 6 failed\");
"
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
"
    "Block 13:
[preds: 12 ] [succs: 14 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 7 failed\");
"
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r40);
$z19 = interfaceinvoke r38.<java.util.List: boolean containsAll(java.util.Collection)>(r41);
if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
"
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$z29 = interfaceinvoke r41.<java.util.List: boolean containsAll(java.util.Collection)>(r38);
if $z29 != 0 goto r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 16:
[preds: 14 15 ] [succs: 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
"
    "Block 17:
[preds: 15 16 ] [succs: 18 ]
r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 18:
[preds: 17 19 ] [succs: 19 20 ]
$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();
if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
"
    "Block 19:
[preds: 18 ] [succs: 18 ]
$r34 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r38.<java.util.List: boolean remove(java.lang.Object)>($r34);
goto [?= $z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 20:
[preds: 18 ] [succs: 21 22 ]
$z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
if $z20 != 0 goto r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 21:
[preds: 20 ] [succs: 22 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Copy nonempty after deleting all elements.\");
"
    "Block 22:
[preds: 20 21 ] [succs: 23 ]
r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 23:
[preds: 22 26 ] [succs: 24 27 ]
$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();
if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
"
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();
$z27 = interfaceinvoke r41.<java.util.List: boolean contains(java.lang.Object)>(r44);
if $z27 != 0 goto interfaceinvoke r43.<java.util.Iterator: void remove()>();
"
    "Block 25:
[preds: 24 ] [succs: 26 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List doesn\'t contain one of its elements.\");
"
    "Block 26:
[preds: 24 25 ] [succs: 23 ]
interfaceinvoke r43.<java.util.Iterator: void remove()>();
goto [?= $z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 27:
[preds: 23 ] [succs: 28 29 ]
$z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
if $z21 != 0 goto interfaceinvoke r36.<java.util.List: void clear()>();
"
    "Block 28:
[preds: 27 ] [succs: 29 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List nonempty after deleting all elements.\");
"
    "Block 29:
[preds: 27 28 ] [succs: 30 31 ]
interfaceinvoke r36.<java.util.List: void clear()>();
$i23 = interfaceinvoke r36.<java.util.List: int size()>();
if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
"
    "Block 30:
[preds: 29 ] [succs: 31 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Clear didn\'t reduce size to zero.\");
"
    "Block 31:
[preds: 29 30 ] [succs: 32 33 ]
interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
$z23 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
"
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$z26 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36);
if $z26 != 0 goto i29 = 0;
"
    "Block 33:
[preds: 31 32 ] [succs: 34 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
"
    "Block 34:
[preds: 32 33 ] [succs: 35 ]
i29 = 0;
i30 = interfaceinvoke r36.<java.util.List: int size()>();
"
    "Block 35:
[preds: 34 36 ] [succs: 36 37 ]
if i29 >= i30 goto i31 = 0;
"
    "Block 36:
[preds: 35 ] [succs: 35 ]
$i26 = i30 - i29;
$i27 = $i26 - 1;
$r31 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i29);
$r32 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i27, $r31);
interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i29, $r32);
i29 = i29 + 1;
goto [?= (branch)];
"
    "Block 37:
[preds: 35 ] [succs: 38 ]
i31 = 0;
i32 = interfaceinvoke r36.<java.util.List: int size()>();
"
    "Block 38:
[preds: 37 39 ] [succs: 39 40 ]
if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
"
    "Block 39:
[preds: 38 ] [succs: 38 ]
$i24 = i32 - i31;
$i25 = $i24 - 1;
$r28 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i31);
$r29 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i25, $r28);
interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i31, $r29);
i31 = i31 + 1;
goto [?= (branch)];
"
    "Block 40:
[preds: 38 ] [succs: 41 42 ]
$z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z24 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\");
"
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
$z25 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36);
if $z25 != 0 goto i28 = i28 + 1;
"
    "Block 42:
[preds: 40 41 ] [succs: 43 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\");
"
    "Block 43:
[preds: 41 42 ] [succs: 1 ]
i28 = i28 + 1;
goto [?= (branch)];
"
    "Block 44:
[preds: 1 ] [succs: 45 ]
r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
i33 = 0;
"
    "Block 45:
[preds: 44 46 ] [succs: 46 47 ]
if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>();
"
    "Block 46:
[preds: 45 ] [succs: 45 ]
$r27 = new java.lang.Integer;
specialinvoke $r27.<java.lang.Integer: void <init>(int)>(i33);
interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>($r27);
i33 = i33 + 1;
goto [?= (branch)];
"
    "Block 47:
[preds: 45 ] [succs: 48 49 ]
$i2 = interfaceinvoke r45.<java.util.List: int size()>();
if $i2 == b1 goto r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
"
    "Block 48:
[preds: 47 ] [succs: 49 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Size of [0..n-1] != n\");
"
    "Block 49:
[preds: 47 48 ] [succs: 50 ]
r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
r47 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 50:
[preds: 49 51 52 ] [succs: 51 53 ]
$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 51:
[preds: 50 ] [succs: 52 50 ]
$r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();
$r26 = (java.lang.Integer) $r25;
$i21 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();
$i22 = $i21 % 2;
if $i22 != 1 goto $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
"
    "Block 52:
[preds: 51 ] [succs: 50 ]
interfaceinvoke r47.<java.util.Iterator: void remove()>();
goto [?= $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 53:
[preds: 50 ] [succs: 54 ]
r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 54:
[preds: 53 55 56 ] [succs: 55 57 ]
$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
"
    "Block 55:
[preds: 54 ] [succs: 56 54 ]
$r23 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();
$r24 = (java.lang.Integer) $r23;
$i19 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();
$i20 = $i19 % 2;
if $i20 != 1 goto $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
"
    "Block 56:
[preds: 55 ] [succs: 54 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all odd nubmers.\");
goto [?= $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 57:
[preds: 54 ] [succs: 58 ]
r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
i34 = 0;
"
    "Block 58:
[preds: 57 59 ] [succs: 59 60 ]
$i3 = b1 / 2;
if i34 >= $i3 goto i35 = 0;
"
    "Block 59:
[preds: 58 ] [succs: 58 ]
interfaceinvoke r49.<java.util.List: java.lang.Object remove(int)>(i34);
i34 = i34 + 1;
goto [?= $i3 = b1 / 2];
"
    "Block 60:
[preds: 58 ] [succs: 61 ]
i35 = 0;
"
    "Block 61:
[preds: 60 64 ] [succs: 62 65 ]
$i4 = b1 / 2;
if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
"
    "Block 62:
[preds: 61 ] [succs: 63 64 ]
$r20 = interfaceinvoke r49.<java.util.List: java.lang.Object get(int)>(i35);
$r21 = (java.lang.Integer) $r20;
$i17 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$i18 = $i17 % 2;
if $i18 == 1 goto i35 = i35 + 1;
"
    "Block 63:
[preds: 62 ] [succs: 64 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all even nubmers.\");
"
    "Block 64:
[preds: 62 63 ] [succs: 61 ]
i35 = i35 + 1;
goto [?= $i4 = b1 / 2];
"
    "Block 65:
[preds: 61 ] [succs: 66 ]
r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
i36 = 0;
"
    "Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$i5 = b1 / 2;
if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
"
    "Block 67:
[preds: 66 ] [succs: 66 ]
$i16 = 2 * i36;
$r19 = interfaceinvoke r46.<java.util.List: java.lang.Object get(int)>(i36);
interfaceinvoke r50.<java.util.List: void add(int,java.lang.Object)>($i16, $r19);
i36 = i36 + 1;
goto [?= $i5 = b1 / 2];
"
    "Block 68:
[preds: 66 ] [succs: 69 70 ]
$z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
if $z0 != 0 goto r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
"
    "Block 69:
[preds: 68 ] [succs: 70 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints from odds and evens.\");
"
    "Block 70:
[preds: 68 69 ] [succs: 71 ]
r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
$i6 = interfaceinvoke r51.<java.util.List: int size()>();
r52 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator(int)>($i6);
$i7 = interfaceinvoke r46.<java.util.List: int size()>();
r53 = interfaceinvoke r46.<java.util.List: java.util.ListIterator listIterator(int)>($i7);
"
    "Block 71:
[preds: 70 72 ] [succs: 72 73 ]
$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>();
if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"
    "Block 72:
[preds: 71 ] [succs: 71 ]
interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>();
$r17 = interfaceinvoke r53.<java.util.ListIterator: java.lang.Object previous()>();
interfaceinvoke r52.<java.util.ListIterator: void add(java.lang.Object)>($r17);
interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>();
goto [?= $z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()];
"
    "Block 73:
[preds: 71 ] [succs: 74 ]
r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"
    "Block 74:
[preds: 73 75 ] [succs: 75 76 ]
$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>();
if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"
    "Block 75:
[preds: 74 ] [succs: 74 ]
$r14 = interfaceinvoke r54.<java.util.ListIterator: java.lang.Object next()>();
r55 = (java.lang.Integer) $r14;
$r15 = new java.lang.Integer;
$i15 = virtualinvoke r55.<java.lang.Integer: int intValue()>();
specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i15);
interfaceinvoke r54.<java.util.ListIterator: void set(java.lang.Object)>($r15);
goto [?= $z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()];
"
    "Block 76:
[preds: 74 ] [succs: 77 ]
r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
r57 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>();
"
    "Block 77:
[preds: 76 78 79 ] [succs: 78 80 ]
$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
"
    "Block 78:
[preds: 77 ] [succs: 79 77 ]
$r12 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();
$r13 = interfaceinvoke r56.<java.util.ListIterator: java.lang.Object next()>();
if $r12 != $r13 goto $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
"
    "Block 79:
[preds: 78 ] [succs: 77 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Iterator.set failed to change value.\");
goto [?= $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 80:
[preds: 77 ] [succs: 81 82 ]
$z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
if $z2 != 0 goto r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"
    "Block 81:
[preds: 80 ] [succs: 82 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints with ListIterator.\");
"
    "Block 82:
[preds: 80 81 ] [succs: 83 ]
r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
i37 = 0;
"
    "Block 83:
[preds: 82 91 ] [succs: 84 92 ]
$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();
if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
"
    "Block 84:
[preds: 83 ] [succs: 85 86 ]
r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();
$i8 = interfaceinvoke r51.<java.util.List: int indexOf(java.lang.Object)>(r59);
$i9 = interfaceinvoke r51.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i8 == $i9 goto $i10 = interfaceinvoke r51.<java.util.List: int size()>();
"
    "Block 85:
[preds: 84 ] [succs: 86 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Apparent duplicate detected.\");
"
    "Block 86:
[preds: 84 85 ] [succs: 87 88 ]
$i10 = interfaceinvoke r51.<java.util.List: int size()>();
$r10 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(i37, $i10);
$i11 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
"
    "Block 87:
[preds: 86 ] [succs: 88 89 ]
$i12 = i37 + 1;
$i13 = interfaceinvoke r51.<java.util.List: int size()>();
$r11 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>($i12, $i13);
$i14 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i14 == -1 goto $i38 = i37 + 1;
"
    "Block 88:
[preds: 86 87 ] [succs: 89 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
"
    "Block 89:
[preds: 87 88 ] [succs: 90 91 ]
$i38 = i37 + 1;
$r60 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(0, $i38);
$i39 = interfaceinvoke $r60.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i39 == i37 goto i37 = i37 + 1;
"
    "Block 90:
[preds: 89 ] [succs: 91 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/lastIndexOf is screwy.\");
"
    "Block 91:
[preds: 89 90 ] [succs: 83 ]
i37 = i37 + 1;
goto [?= $z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()];
"
    "Block 92:
[preds: 83 ] [succs: 93 94 ]
r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r61, b1);
$r0 = newarray (java.lang.Integer)[0];
$r1 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r0);
$r2 = (java.lang.Integer[]) $r1;
r62 = (java.lang.Integer[]) $r2;
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r62);
$z3 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r3);
if $z3 != 0 goto r63 = newarray (java.lang.Integer)[b1];
"
    "Block 93:
[preds: 92 ] [succs: 94 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (1)\");
"
    "Block 94:
[preds: 92 93 ] [succs: 95 96 ]
r63 = newarray (java.lang.Integer)[b1];
$r4 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r63);
$r5 = (java.lang.Integer[]) $r4;
r64 = (java.lang.Integer[]) $r5;
if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
"
    "Block 95:
[preds: 94 ] [succs: 96 97 ]
$r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r63);
$z5 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r9);
if $z5 != 0 goto $i40 = b1 + 1;
"
    "Block 96:
[preds: 94 95 ] [succs: 97 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
"
    "Block 97:
[preds: 95 96 ] [succs: 98 100 ]
$i40 = b1 + 1;
r65 = newarray (java.lang.Integer)[$i40];
$r66 = new java.lang.Integer;
specialinvoke $r66.<java.lang.Integer: void <init>(int)>(69);
r65[b1] = $r66;
$r67 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r65);
$r68 = (java.lang.Integer[]) $r67;
r69 = (java.lang.Integer[]) $r68;
if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
"
    "Block 98:
[preds: 97 ] [succs: 99 100 ]
$r6 = r65[b1];
if $r6 != null goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
"
    "Block 99:
[preds: 98 ] [succs: 100 101 ]
$r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r65);
$r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, b1);
$z4 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r8);
if $z4 != 0 goto return;
"
    "Block 100:
[preds: 97 98 99 ] [succs: 101 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
"
    "Block 101:
[preds: 99 100 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r35 := @parameter0: java.lang.String[];
b0 = 100;
b1 = 100;
i28 = 0;
"->"Block 1:
[preds: 0 43 ] [succs: 2 44 ]
if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
";
    "Block 1:
[preds: 0 43 ] [succs: 2 44 ]
if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
r36 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r36, b1);
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r37, b1);
r38 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r38.<java.util.List: boolean retainAll(java.util.Collection)>(r37);
r39 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r37);
r40 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r37);
interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r36);
r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r41.<java.util.List: boolean addAll(java.util.Collection)>(r37);
$z11 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r40);
if $z11 == 0 goto $z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
";
    "Block 1:
[preds: 0 43 ] [succs: 2 44 ]
if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
"->"Block 44:
[preds: 1 ] [succs: 45 ]
r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
i33 = 0;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r36 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r36, b1);
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r37, b1);
r38 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r38.<java.util.List: boolean retainAll(java.util.Collection)>(r37);
r39 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r37);
r40 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r37);
interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r36);
r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r41.<java.util.List: boolean addAll(java.util.Collection)>(r37);
$z11 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r40);
if $z11 == 0 goto $z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
"->"Block 3:
[preds: 2 ] [succs: 4 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 2 failed\");
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
r36 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r36, b1);
r37 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r37, b1);
r38 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r38.<java.util.List: boolean retainAll(java.util.Collection)>(r37);
r39 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r37);
r40 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r37);
interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r36);
r41 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r36);
interfaceinvoke r41.<java.util.List: boolean addAll(java.util.Collection)>(r37);
$z11 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r40);
if $z11 == 0 goto $z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
";
    "Block 3:
[preds: 2 ] [succs: 4 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 2 failed\");
"->"Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"->"Block 5:
[preds: 4 ] [succs: 6 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 3 failed\");
";
    "Block 4:
[preds: 2 3 ] [succs: 5 6 ]
$z12 = interfaceinvoke r39.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z12 == 0 goto $z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
";
    "Block 5:
[preds: 4 ] [succs: 6 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 3 failed\");
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
"->"Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 4 failed\");
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
$z13 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z13 == 0 goto $z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
";
    "Block 7:
[preds: 6 ] [succs: 8 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 4 failed\");
"->"Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"->"Block 9:
[preds: 8 ] [succs: 10 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 5 failed\");
";
    "Block 8:
[preds: 6 7 ] [succs: 9 10 ]
$z14 = interfaceinvoke r40.<java.util.List: boolean removeAll(java.util.Collection)>(r38);
if $z14 == 0 goto $z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
";
    "Block 9:
[preds: 8 ] [succs: 10 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 5 failed\");
"->"Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"->"Block 11:
[preds: 10 ] [succs: 12 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 6 failed\");
";
    "Block 10:
[preds: 8 9 ] [succs: 11 12 ]
$z15 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z15 == 0 goto $z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
"->"Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
";
    "Block 11:
[preds: 10 ] [succs: 12 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 6 failed\");
"->"Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
";
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
"->"Block 13:
[preds: 12 ] [succs: 14 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 7 failed\");
";
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
$z16 = interfaceinvoke r38.<java.util.List: boolean removeAll(java.util.Collection)>(r39);
if $z16 == 0 goto interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r40);
$z19 = interfaceinvoke r38.<java.util.List: boolean containsAll(java.util.Collection)>(r41);
if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
";
    "Block 13:
[preds: 12 ] [succs: 14 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 7 failed\");
"->"Block 14:
[preds: 12 13 ] [succs: 15 16 ]
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r40);
$z19 = interfaceinvoke r38.<java.util.List: boolean containsAll(java.util.Collection)>(r41);
if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r40);
$z19 = interfaceinvoke r38.<java.util.List: boolean containsAll(java.util.Collection)>(r41);
if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
"->"Block 15:
[preds: 14 ] [succs: 16 17 ]
$z29 = interfaceinvoke r41.<java.util.List: boolean containsAll(java.util.Collection)>(r38);
if $z29 != 0 goto r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 14:
[preds: 12 13 ] [succs: 15 16 ]
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r39);
interfaceinvoke r38.<java.util.List: boolean addAll(java.util.Collection)>(r40);
$z19 = interfaceinvoke r38.<java.util.List: boolean containsAll(java.util.Collection)>(r41);
if $z19 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
"->"Block 16:
[preds: 14 15 ] [succs: 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$z29 = interfaceinvoke r41.<java.util.List: boolean containsAll(java.util.Collection)>(r38);
if $z29 != 0 goto r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"->"Block 16:
[preds: 14 15 ] [succs: 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
";
    "Block 15:
[preds: 14 ] [succs: 16 17 ]
$z29 = interfaceinvoke r41.<java.util.List: boolean containsAll(java.util.Collection)>(r38);
if $z29 != 0 goto r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"->"Block 17:
[preds: 15 16 ] [succs: 18 ]
r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 16:
[preds: 14 15 ] [succs: 17 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List algebra identity 1 failed\");
"->"Block 17:
[preds: 15 16 ] [succs: 18 ]
r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 17:
[preds: 15 16 ] [succs: 18 ]
r42 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"->"Block 18:
[preds: 17 19 ] [succs: 19 20 ]
$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();
if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
";
    "Block 18:
[preds: 17 19 ] [succs: 19 20 ]
$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();
if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
"->"Block 19:
[preds: 18 ] [succs: 18 ]
$r34 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r38.<java.util.List: boolean remove(java.lang.Object)>($r34);
goto [?= $z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 18:
[preds: 17 19 ] [succs: 19 20 ]
$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();
if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
"->"Block 20:
[preds: 18 ] [succs: 21 22 ]
$z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
if $z20 != 0 goto r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 19:
[preds: 18 ] [succs: 18 ]
$r34 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke r38.<java.util.List: boolean remove(java.lang.Object)>($r34);
goto [?= $z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>()];
"->"Block 18:
[preds: 17 19 ] [succs: 19 20 ]
$z30 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();
if $z30 == 0 goto $z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
";
    "Block 20:
[preds: 18 ] [succs: 21 22 ]
$z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
if $z20 != 0 goto r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"->"Block 21:
[preds: 20 ] [succs: 22 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Copy nonempty after deleting all elements.\");
";
    "Block 20:
[preds: 18 ] [succs: 21 22 ]
$z20 = interfaceinvoke r38.<java.util.List: boolean isEmpty()>();
if $z20 != 0 goto r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"->"Block 22:
[preds: 20 21 ] [succs: 23 ]
r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 21:
[preds: 20 ] [succs: 22 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Copy nonempty after deleting all elements.\");
"->"Block 22:
[preds: 20 21 ] [succs: 23 ]
r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 22:
[preds: 20 21 ] [succs: 23 ]
r43 = interfaceinvoke r41.<java.util.List: java.util.Iterator iterator()>();
"->"Block 23:
[preds: 22 26 ] [succs: 24 27 ]
$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();
if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
";
    "Block 23:
[preds: 22 26 ] [succs: 24 27 ]
$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();
if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
"->"Block 24:
[preds: 23 ] [succs: 25 26 ]
r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();
$z27 = interfaceinvoke r41.<java.util.List: boolean contains(java.lang.Object)>(r44);
if $z27 != 0 goto interfaceinvoke r43.<java.util.Iterator: void remove()>();
";
    "Block 23:
[preds: 22 26 ] [succs: 24 27 ]
$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();
if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
"->"Block 27:
[preds: 23 ] [succs: 28 29 ]
$z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
if $z21 != 0 goto interfaceinvoke r36.<java.util.List: void clear()>();
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();
$z27 = interfaceinvoke r41.<java.util.List: boolean contains(java.lang.Object)>(r44);
if $z27 != 0 goto interfaceinvoke r43.<java.util.Iterator: void remove()>();
"->"Block 25:
[preds: 24 ] [succs: 26 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List doesn\'t contain one of its elements.\");
";
    "Block 24:
[preds: 23 ] [succs: 25 26 ]
r44 = interfaceinvoke r43.<java.util.Iterator: java.lang.Object next()>();
$z27 = interfaceinvoke r41.<java.util.List: boolean contains(java.lang.Object)>(r44);
if $z27 != 0 goto interfaceinvoke r43.<java.util.Iterator: void remove()>();
"->"Block 26:
[preds: 24 25 ] [succs: 23 ]
interfaceinvoke r43.<java.util.Iterator: void remove()>();
goto [?= $z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 25:
[preds: 24 ] [succs: 26 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List doesn\'t contain one of its elements.\");
"->"Block 26:
[preds: 24 25 ] [succs: 23 ]
interfaceinvoke r43.<java.util.Iterator: void remove()>();
goto [?= $z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 26:
[preds: 24 25 ] [succs: 23 ]
interfaceinvoke r43.<java.util.Iterator: void remove()>();
goto [?= $z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>()];
"->"Block 23:
[preds: 22 26 ] [succs: 24 27 ]
$z31 = interfaceinvoke r43.<java.util.Iterator: boolean hasNext()>();
if $z31 == 0 goto $z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
";
    "Block 27:
[preds: 23 ] [succs: 28 29 ]
$z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
if $z21 != 0 goto interfaceinvoke r36.<java.util.List: void clear()>();
"->"Block 28:
[preds: 27 ] [succs: 29 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List nonempty after deleting all elements.\");
";
    "Block 27:
[preds: 23 ] [succs: 28 29 ]
$z21 = interfaceinvoke r41.<java.util.List: boolean isEmpty()>();
if $z21 != 0 goto interfaceinvoke r36.<java.util.List: void clear()>();
"->"Block 29:
[preds: 27 28 ] [succs: 30 31 ]
interfaceinvoke r36.<java.util.List: void clear()>();
$i23 = interfaceinvoke r36.<java.util.List: int size()>();
if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
";
    "Block 28:
[preds: 27 ] [succs: 29 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"List nonempty after deleting all elements.\");
"->"Block 29:
[preds: 27 28 ] [succs: 30 31 ]
interfaceinvoke r36.<java.util.List: void clear()>();
$i23 = interfaceinvoke r36.<java.util.List: int size()>();
if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
";
    "Block 29:
[preds: 27 28 ] [succs: 30 31 ]
interfaceinvoke r36.<java.util.List: void clear()>();
$i23 = interfaceinvoke r36.<java.util.List: int size()>();
if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
"->"Block 30:
[preds: 29 ] [succs: 31 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Clear didn\'t reduce size to zero.\");
";
    "Block 29:
[preds: 27 28 ] [succs: 30 31 ]
interfaceinvoke r36.<java.util.List: void clear()>();
$i23 = interfaceinvoke r36.<java.util.List: int size()>();
if $i23 == 0 goto interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
"->"Block 31:
[preds: 29 30 ] [succs: 32 33 ]
interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
$z23 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
";
    "Block 30:
[preds: 29 ] [succs: 31 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Clear didn\'t reduce size to zero.\");
"->"Block 31:
[preds: 29 30 ] [succs: 32 33 ]
interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
$z23 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
";
    "Block 31:
[preds: 29 30 ] [succs: 32 33 ]
interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
$z23 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
"->"Block 32:
[preds: 31 ] [succs: 33 34 ]
$z26 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36);
if $z26 != 0 goto i29 = 0;
";
    "Block 31:
[preds: 29 30 ] [succs: 32 33 ]
interfaceinvoke r36.<java.util.List: boolean addAll(int,java.util.Collection)>(0, r37);
$z23 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z23 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
"->"Block 33:
[preds: 31 32 ] [succs: 34 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$z26 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36);
if $z26 != 0 goto i29 = 0;
"->"Block 33:
[preds: 31 32 ] [succs: 34 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
";
    "Block 32:
[preds: 31 ] [succs: 33 34 ]
$z26 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36);
if $z26 != 0 goto i29 = 0;
"->"Block 34:
[preds: 32 33 ] [succs: 35 ]
i29 = 0;
i30 = interfaceinvoke r36.<java.util.List: int size()>();
";
    "Block 33:
[preds: 31 32 ] [succs: 34 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"addAll(int, Collection) doesn\'t work.\");
"->"Block 34:
[preds: 32 33 ] [succs: 35 ]
i29 = 0;
i30 = interfaceinvoke r36.<java.util.List: int size()>();
";
    "Block 34:
[preds: 32 33 ] [succs: 35 ]
i29 = 0;
i30 = interfaceinvoke r36.<java.util.List: int size()>();
"->"Block 35:
[preds: 34 36 ] [succs: 36 37 ]
if i29 >= i30 goto i31 = 0;
";
    "Block 35:
[preds: 34 36 ] [succs: 36 37 ]
if i29 >= i30 goto i31 = 0;
"->"Block 36:
[preds: 35 ] [succs: 35 ]
$i26 = i30 - i29;
$i27 = $i26 - 1;
$r31 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i29);
$r32 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i27, $r31);
interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i29, $r32);
i29 = i29 + 1;
goto [?= (branch)];
";
    "Block 35:
[preds: 34 36 ] [succs: 36 37 ]
if i29 >= i30 goto i31 = 0;
"->"Block 37:
[preds: 35 ] [succs: 38 ]
i31 = 0;
i32 = interfaceinvoke r36.<java.util.List: int size()>();
";
    "Block 36:
[preds: 35 ] [succs: 35 ]
$i26 = i30 - i29;
$i27 = $i26 - 1;
$r31 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i29);
$r32 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i27, $r31);
interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i29, $r32);
i29 = i29 + 1;
goto [?= (branch)];
"->"Block 35:
[preds: 34 36 ] [succs: 36 37 ]
if i29 >= i30 goto i31 = 0;
";
    "Block 37:
[preds: 35 ] [succs: 38 ]
i31 = 0;
i32 = interfaceinvoke r36.<java.util.List: int size()>();
"->"Block 38:
[preds: 37 39 ] [succs: 39 40 ]
if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
";
    "Block 38:
[preds: 37 39 ] [succs: 39 40 ]
if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
"->"Block 39:
[preds: 38 ] [succs: 38 ]
$i24 = i32 - i31;
$i25 = $i24 - 1;
$r28 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i31);
$r29 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i25, $r28);
interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i31, $r29);
i31 = i31 + 1;
goto [?= (branch)];
";
    "Block 38:
[preds: 37 39 ] [succs: 39 40 ]
if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
"->"Block 40:
[preds: 38 ] [succs: 41 42 ]
$z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z24 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\");
";
    "Block 39:
[preds: 38 ] [succs: 38 ]
$i24 = i32 - i31;
$i25 = $i24 - 1;
$r28 = interfaceinvoke r36.<java.util.List: java.lang.Object get(int)>(i31);
$r29 = interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i25, $r28);
interfaceinvoke r36.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i31, $r29);
i31 = i31 + 1;
goto [?= (branch)];
"->"Block 38:
[preds: 37 39 ] [succs: 39 40 ]
if i31 >= i32 goto $z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
";
    "Block 40:
[preds: 38 ] [succs: 41 42 ]
$z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z24 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\");
"->"Block 41:
[preds: 40 ] [succs: 42 43 ]
$z25 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36);
if $z25 != 0 goto i28 = i28 + 1;
";
    "Block 40:
[preds: 38 ] [succs: 41 42 ]
$z24 = interfaceinvoke r36.<java.util.List: boolean equals(java.lang.Object)>(r37);
if $z24 == 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\");
"->"Block 42:
[preds: 40 41 ] [succs: 43 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\");
";
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
$z25 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36);
if $z25 != 0 goto i28 = i28 + 1;
"->"Block 42:
[preds: 40 41 ] [succs: 43 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\");
";
    "Block 41:
[preds: 40 ] [succs: 42 43 ]
$z25 = interfaceinvoke r37.<java.util.List: boolean equals(java.lang.Object)>(r36);
if $z25 != 0 goto i28 = i28 + 1;
"->"Block 43:
[preds: 41 42 ] [succs: 1 ]
i28 = i28 + 1;
goto [?= (branch)];
";
    "Block 42:
[preds: 40 41 ] [succs: 43 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"set(int, Object) doesn\'t work\");
"->"Block 43:
[preds: 41 42 ] [succs: 1 ]
i28 = i28 + 1;
goto [?= (branch)];
";
    "Block 43:
[preds: 41 42 ] [succs: 1 ]
i28 = i28 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 43 ] [succs: 2 44 ]
if i28 >= b0 goto r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
";
    "Block 44:
[preds: 1 ] [succs: 45 ]
r45 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
i33 = 0;
"->"Block 45:
[preds: 44 46 ] [succs: 46 47 ]
if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>();
";
    "Block 45:
[preds: 44 46 ] [succs: 46 47 ]
if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>();
"->"Block 46:
[preds: 45 ] [succs: 45 ]
$r27 = new java.lang.Integer;
specialinvoke $r27.<java.lang.Integer: void <init>(int)>(i33);
interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>($r27);
i33 = i33 + 1;
goto [?= (branch)];
";
    "Block 45:
[preds: 44 46 ] [succs: 46 47 ]
if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>();
"->"Block 47:
[preds: 45 ] [succs: 48 49 ]
$i2 = interfaceinvoke r45.<java.util.List: int size()>();
if $i2 == b1 goto r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
";
    "Block 46:
[preds: 45 ] [succs: 45 ]
$r27 = new java.lang.Integer;
specialinvoke $r27.<java.lang.Integer: void <init>(int)>(i33);
interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>($r27);
i33 = i33 + 1;
goto [?= (branch)];
"->"Block 45:
[preds: 44 46 ] [succs: 46 47 ]
if i33 >= b1 goto $i2 = interfaceinvoke r45.<java.util.List: int size()>();
";
    "Block 47:
[preds: 45 ] [succs: 48 49 ]
$i2 = interfaceinvoke r45.<java.util.List: int size()>();
if $i2 == b1 goto r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
"->"Block 48:
[preds: 47 ] [succs: 49 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Size of [0..n-1] != n\");
";
    "Block 47:
[preds: 45 ] [succs: 48 49 ]
$i2 = interfaceinvoke r45.<java.util.List: int size()>();
if $i2 == b1 goto r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
"->"Block 49:
[preds: 47 48 ] [succs: 50 ]
r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
r47 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 48:
[preds: 47 ] [succs: 49 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Size of [0..n-1] != n\");
"->"Block 49:
[preds: 47 48 ] [succs: 50 ]
r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
r47 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 49:
[preds: 47 48 ] [succs: 50 ]
r46 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
r47 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
"->"Block 50:
[preds: 49 51 52 ] [succs: 51 53 ]
$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 50:
[preds: 49 51 52 ] [succs: 51 53 ]
$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
"->"Block 51:
[preds: 50 ] [succs: 52 50 ]
$r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();
$r26 = (java.lang.Integer) $r25;
$i21 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();
$i22 = $i21 % 2;
if $i22 != 1 goto $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
";
    "Block 50:
[preds: 49 51 52 ] [succs: 51 53 ]
$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
"->"Block 53:
[preds: 50 ] [succs: 54 ]
r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 51:
[preds: 50 ] [succs: 52 50 ]
$r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();
$r26 = (java.lang.Integer) $r25;
$i21 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();
$i22 = $i21 % 2;
if $i22 != 1 goto $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
"->"Block 52:
[preds: 51 ] [succs: 50 ]
interfaceinvoke r47.<java.util.Iterator: void remove()>();
goto [?= $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 51:
[preds: 50 ] [succs: 52 50 ]
$r25 = interfaceinvoke r47.<java.util.Iterator: java.lang.Object next()>();
$r26 = (java.lang.Integer) $r25;
$i21 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();
$i22 = $i21 % 2;
if $i22 != 1 goto $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
"->"Block 50:
[preds: 49 51 52 ] [succs: 51 53 ]
$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 52:
[preds: 51 ] [succs: 50 ]
interfaceinvoke r47.<java.util.Iterator: void remove()>();
goto [?= $z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>()];
"->"Block 50:
[preds: 49 51 52 ] [succs: 51 53 ]
$z32 = interfaceinvoke r47.<java.util.Iterator: boolean hasNext()>();
if $z32 == 0 goto r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 53:
[preds: 50 ] [succs: 54 ]
r48 = interfaceinvoke r46.<java.util.List: java.util.Iterator iterator()>();
"->"Block 54:
[preds: 53 55 56 ] [succs: 55 57 ]
$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
";
    "Block 54:
[preds: 53 55 56 ] [succs: 55 57 ]
$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
"->"Block 55:
[preds: 54 ] [succs: 56 54 ]
$r23 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();
$r24 = (java.lang.Integer) $r23;
$i19 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();
$i20 = $i19 % 2;
if $i20 != 1 goto $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
";
    "Block 54:
[preds: 53 55 56 ] [succs: 55 57 ]
$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
"->"Block 57:
[preds: 54 ] [succs: 58 ]
r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
i34 = 0;
";
    "Block 55:
[preds: 54 ] [succs: 56 54 ]
$r23 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();
$r24 = (java.lang.Integer) $r23;
$i19 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();
$i20 = $i19 % 2;
if $i20 != 1 goto $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
"->"Block 56:
[preds: 55 ] [succs: 54 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all odd nubmers.\");
goto [?= $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 55:
[preds: 54 ] [succs: 56 54 ]
$r23 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();
$r24 = (java.lang.Integer) $r23;
$i19 = virtualinvoke $r24.<java.lang.Integer: int intValue()>();
$i20 = $i19 % 2;
if $i20 != 1 goto $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
"->"Block 54:
[preds: 53 55 56 ] [succs: 55 57 ]
$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
";
    "Block 56:
[preds: 55 ] [succs: 54 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all odd nubmers.\");
goto [?= $z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>()];
"->"Block 54:
[preds: 53 55 56 ] [succs: 55 57 ]
$z33 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();
if $z33 == 0 goto r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
";
    "Block 57:
[preds: 54 ] [succs: 58 ]
r49 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r45);
i34 = 0;
"->"Block 58:
[preds: 57 59 ] [succs: 59 60 ]
$i3 = b1 / 2;
if i34 >= $i3 goto i35 = 0;
";
    "Block 58:
[preds: 57 59 ] [succs: 59 60 ]
$i3 = b1 / 2;
if i34 >= $i3 goto i35 = 0;
"->"Block 59:
[preds: 58 ] [succs: 58 ]
interfaceinvoke r49.<java.util.List: java.lang.Object remove(int)>(i34);
i34 = i34 + 1;
goto [?= $i3 = b1 / 2];
";
    "Block 58:
[preds: 57 59 ] [succs: 59 60 ]
$i3 = b1 / 2;
if i34 >= $i3 goto i35 = 0;
"->"Block 60:
[preds: 58 ] [succs: 61 ]
i35 = 0;
";
    "Block 59:
[preds: 58 ] [succs: 58 ]
interfaceinvoke r49.<java.util.List: java.lang.Object remove(int)>(i34);
i34 = i34 + 1;
goto [?= $i3 = b1 / 2];
"->"Block 58:
[preds: 57 59 ] [succs: 59 60 ]
$i3 = b1 / 2;
if i34 >= $i3 goto i35 = 0;
";
    "Block 60:
[preds: 58 ] [succs: 61 ]
i35 = 0;
"->"Block 61:
[preds: 60 64 ] [succs: 62 65 ]
$i4 = b1 / 2;
if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
";
    "Block 61:
[preds: 60 64 ] [succs: 62 65 ]
$i4 = b1 / 2;
if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
"->"Block 62:
[preds: 61 ] [succs: 63 64 ]
$r20 = interfaceinvoke r49.<java.util.List: java.lang.Object get(int)>(i35);
$r21 = (java.lang.Integer) $r20;
$i17 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$i18 = $i17 % 2;
if $i18 == 1 goto i35 = i35 + 1;
";
    "Block 61:
[preds: 60 64 ] [succs: 62 65 ]
$i4 = b1 / 2;
if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
"->"Block 65:
[preds: 61 ] [succs: 66 ]
r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
i36 = 0;
";
    "Block 62:
[preds: 61 ] [succs: 63 64 ]
$r20 = interfaceinvoke r49.<java.util.List: java.lang.Object get(int)>(i35);
$r21 = (java.lang.Integer) $r20;
$i17 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$i18 = $i17 % 2;
if $i18 == 1 goto i35 = i35 + 1;
"->"Block 63:
[preds: 62 ] [succs: 64 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all even nubmers.\");
";
    "Block 62:
[preds: 61 ] [succs: 63 64 ]
$r20 = interfaceinvoke r49.<java.util.List: java.lang.Object get(int)>(i35);
$r21 = (java.lang.Integer) $r20;
$i17 = virtualinvoke $r21.<java.lang.Integer: int intValue()>();
$i18 = $i17 % 2;
if $i18 == 1 goto i35 = i35 + 1;
"->"Block 64:
[preds: 62 63 ] [succs: 61 ]
i35 = i35 + 1;
goto [?= $i4 = b1 / 2];
";
    "Block 63:
[preds: 62 ] [succs: 64 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to remove all even nubmers.\");
"->"Block 64:
[preds: 62 63 ] [succs: 61 ]
i35 = i35 + 1;
goto [?= $i4 = b1 / 2];
";
    "Block 64:
[preds: 62 63 ] [succs: 61 ]
i35 = i35 + 1;
goto [?= $i4 = b1 / 2];
"->"Block 61:
[preds: 60 64 ] [succs: 62 65 ]
$i4 = b1 / 2;
if i35 >= $i4 goto r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
";
    "Block 65:
[preds: 61 ] [succs: 66 ]
r50 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
i36 = 0;
"->"Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$i5 = b1 / 2;
if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
";
    "Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$i5 = b1 / 2;
if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
"->"Block 67:
[preds: 66 ] [succs: 66 ]
$i16 = 2 * i36;
$r19 = interfaceinvoke r46.<java.util.List: java.lang.Object get(int)>(i36);
interfaceinvoke r50.<java.util.List: void add(int,java.lang.Object)>($i16, $r19);
i36 = i36 + 1;
goto [?= $i5 = b1 / 2];
";
    "Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$i5 = b1 / 2;
if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
"->"Block 68:
[preds: 66 ] [succs: 69 70 ]
$z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
if $z0 != 0 goto r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
";
    "Block 67:
[preds: 66 ] [succs: 66 ]
$i16 = 2 * i36;
$r19 = interfaceinvoke r46.<java.util.List: java.lang.Object get(int)>(i36);
interfaceinvoke r50.<java.util.List: void add(int,java.lang.Object)>($i16, $r19);
i36 = i36 + 1;
goto [?= $i5 = b1 / 2];
"->"Block 66:
[preds: 65 67 ] [succs: 67 68 ]
$i5 = b1 / 2;
if i36 >= $i5 goto $z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
";
    "Block 68:
[preds: 66 ] [succs: 69 70 ]
$z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
if $z0 != 0 goto r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
"->"Block 69:
[preds: 68 ] [succs: 70 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints from odds and evens.\");
";
    "Block 68:
[preds: 66 ] [succs: 69 70 ]
$z0 = interfaceinvoke r50.<java.util.List: boolean equals(java.lang.Object)>(r45);
if $z0 != 0 goto r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
"->"Block 70:
[preds: 68 69 ] [succs: 71 ]
r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
$i6 = interfaceinvoke r51.<java.util.List: int size()>();
r52 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator(int)>($i6);
$i7 = interfaceinvoke r46.<java.util.List: int size()>();
r53 = interfaceinvoke r46.<java.util.List: java.util.ListIterator listIterator(int)>($i7);
";
    "Block 69:
[preds: 68 ] [succs: 70 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints from odds and evens.\");
"->"Block 70:
[preds: 68 69 ] [succs: 71 ]
r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
$i6 = interfaceinvoke r51.<java.util.List: int size()>();
r52 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator(int)>($i6);
$i7 = interfaceinvoke r46.<java.util.List: int size()>();
r53 = interfaceinvoke r46.<java.util.List: java.util.ListIterator listIterator(int)>($i7);
";
    "Block 70:
[preds: 68 69 ] [succs: 71 ]
r51 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List clone(java.util.List)>(r49);
$i6 = interfaceinvoke r51.<java.util.List: int size()>();
r52 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator(int)>($i6);
$i7 = interfaceinvoke r46.<java.util.List: int size()>();
r53 = interfaceinvoke r46.<java.util.List: java.util.ListIterator listIterator(int)>($i7);
"->"Block 71:
[preds: 70 72 ] [succs: 72 73 ]
$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>();
if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
";
    "Block 71:
[preds: 70 72 ] [succs: 72 73 ]
$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>();
if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 72:
[preds: 71 ] [succs: 71 ]
interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>();
$r17 = interfaceinvoke r53.<java.util.ListIterator: java.lang.Object previous()>();
interfaceinvoke r52.<java.util.ListIterator: void add(java.lang.Object)>($r17);
interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>();
goto [?= $z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()];
";
    "Block 71:
[preds: 70 72 ] [succs: 72 73 ]
$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>();
if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 73:
[preds: 71 ] [succs: 74 ]
r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
";
    "Block 72:
[preds: 71 ] [succs: 71 ]
interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>();
$r17 = interfaceinvoke r53.<java.util.ListIterator: java.lang.Object previous()>();
interfaceinvoke r52.<java.util.ListIterator: void add(java.lang.Object)>($r17);
interfaceinvoke r52.<java.util.ListIterator: java.lang.Object previous()>();
goto [?= $z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>()];
"->"Block 71:
[preds: 70 72 ] [succs: 72 73 ]
$z34 = interfaceinvoke r53.<java.util.ListIterator: boolean hasPrevious()>();
if $z34 == 0 goto r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
";
    "Block 73:
[preds: 71 ] [succs: 74 ]
r54 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 74:
[preds: 73 75 ] [succs: 75 76 ]
$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>();
if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
";
    "Block 74:
[preds: 73 75 ] [succs: 75 76 ]
$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>();
if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 75:
[preds: 74 ] [succs: 74 ]
$r14 = interfaceinvoke r54.<java.util.ListIterator: java.lang.Object next()>();
r55 = (java.lang.Integer) $r14;
$r15 = new java.lang.Integer;
$i15 = virtualinvoke r55.<java.lang.Integer: int intValue()>();
specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i15);
interfaceinvoke r54.<java.util.ListIterator: void set(java.lang.Object)>($r15);
goto [?= $z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()];
";
    "Block 74:
[preds: 73 75 ] [succs: 75 76 ]
$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>();
if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 76:
[preds: 74 ] [succs: 77 ]
r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
r57 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>();
";
    "Block 75:
[preds: 74 ] [succs: 74 ]
$r14 = interfaceinvoke r54.<java.util.ListIterator: java.lang.Object next()>();
r55 = (java.lang.Integer) $r14;
$r15 = new java.lang.Integer;
$i15 = virtualinvoke r55.<java.lang.Integer: int intValue()>();
specialinvoke $r15.<java.lang.Integer: void <init>(int)>($i15);
interfaceinvoke r54.<java.util.ListIterator: void set(java.lang.Object)>($r15);
goto [?= $z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>()];
"->"Block 74:
[preds: 73 75 ] [succs: 75 76 ]
$z1 = interfaceinvoke r54.<java.util.ListIterator: boolean hasNext()>();
if $z1 == 0 goto r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
";
    "Block 76:
[preds: 74 ] [succs: 77 ]
r56 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
r57 = interfaceinvoke r45.<java.util.List: java.util.Iterator iterator()>();
"->"Block 77:
[preds: 76 78 79 ] [succs: 78 80 ]
$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
";
    "Block 77:
[preds: 76 78 79 ] [succs: 78 80 ]
$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
"->"Block 78:
[preds: 77 ] [succs: 79 77 ]
$r12 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();
$r13 = interfaceinvoke r56.<java.util.ListIterator: java.lang.Object next()>();
if $r12 != $r13 goto $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
";
    "Block 77:
[preds: 76 78 79 ] [succs: 78 80 ]
$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
"->"Block 80:
[preds: 77 ] [succs: 81 82 ]
$z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
if $z2 != 0 goto r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
";
    "Block 78:
[preds: 77 ] [succs: 79 77 ]
$r12 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();
$r13 = interfaceinvoke r56.<java.util.ListIterator: java.lang.Object next()>();
if $r12 != $r13 goto $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
"->"Block 79:
[preds: 78 ] [succs: 77 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Iterator.set failed to change value.\");
goto [?= $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 78:
[preds: 77 ] [succs: 79 77 ]
$r12 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();
$r13 = interfaceinvoke r56.<java.util.ListIterator: java.lang.Object next()>();
if $r12 != $r13 goto $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
"->"Block 77:
[preds: 76 78 79 ] [succs: 78 80 ]
$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
";
    "Block 79:
[preds: 78 ] [succs: 77 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Iterator.set failed to change value.\");
goto [?= $z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>()];
"->"Block 77:
[preds: 76 78 79 ] [succs: 78 80 ]
$z35 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();
if $z35 == 0 goto $z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
";
    "Block 80:
[preds: 77 ] [succs: 81 82 ]
$z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
if $z2 != 0 goto r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 81:
[preds: 80 ] [succs: 82 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints with ListIterator.\");
";
    "Block 80:
[preds: 77 ] [succs: 81 82 ]
$z2 = interfaceinvoke r51.<java.util.List: boolean equals(java.lang.Object)>(r45);
if $z2 != 0 goto r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
"->"Block 82:
[preds: 80 81 ] [succs: 83 ]
r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
i37 = 0;
";
    "Block 81:
[preds: 80 ] [succs: 82 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Failed to reconstruct ints with ListIterator.\");
"->"Block 82:
[preds: 80 81 ] [succs: 83 ]
r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
i37 = 0;
";
    "Block 82:
[preds: 80 81 ] [succs: 83 ]
r58 = interfaceinvoke r51.<java.util.List: java.util.ListIterator listIterator()>();
i37 = 0;
"->"Block 83:
[preds: 82 91 ] [succs: 84 92 ]
$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();
if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
";
    "Block 83:
[preds: 82 91 ] [succs: 84 92 ]
$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();
if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
"->"Block 84:
[preds: 83 ] [succs: 85 86 ]
r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();
$i8 = interfaceinvoke r51.<java.util.List: int indexOf(java.lang.Object)>(r59);
$i9 = interfaceinvoke r51.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i8 == $i9 goto $i10 = interfaceinvoke r51.<java.util.List: int size()>();
";
    "Block 83:
[preds: 82 91 ] [succs: 84 92 ]
$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();
if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
"->"Block 92:
[preds: 83 ] [succs: 93 94 ]
r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r61, b1);
$r0 = newarray (java.lang.Integer)[0];
$r1 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r0);
$r2 = (java.lang.Integer[]) $r1;
r62 = (java.lang.Integer[]) $r2;
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r62);
$z3 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r3);
if $z3 != 0 goto r63 = newarray (java.lang.Integer)[b1];
";
    "Block 84:
[preds: 83 ] [succs: 85 86 ]
r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();
$i8 = interfaceinvoke r51.<java.util.List: int indexOf(java.lang.Object)>(r59);
$i9 = interfaceinvoke r51.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i8 == $i9 goto $i10 = interfaceinvoke r51.<java.util.List: int size()>();
"->"Block 85:
[preds: 84 ] [succs: 86 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Apparent duplicate detected.\");
";
    "Block 84:
[preds: 83 ] [succs: 85 86 ]
r59 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();
$i8 = interfaceinvoke r51.<java.util.List: int indexOf(java.lang.Object)>(r59);
$i9 = interfaceinvoke r51.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i8 == $i9 goto $i10 = interfaceinvoke r51.<java.util.List: int size()>();
"->"Block 86:
[preds: 84 85 ] [succs: 87 88 ]
$i10 = interfaceinvoke r51.<java.util.List: int size()>();
$r10 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(i37, $i10);
$i11 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
";
    "Block 85:
[preds: 84 ] [succs: 86 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Apparent duplicate detected.\");
"->"Block 86:
[preds: 84 85 ] [succs: 87 88 ]
$i10 = interfaceinvoke r51.<java.util.List: int size()>();
$r10 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(i37, $i10);
$i11 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
";
    "Block 86:
[preds: 84 85 ] [succs: 87 88 ]
$i10 = interfaceinvoke r51.<java.util.List: int size()>();
$r10 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(i37, $i10);
$i11 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
"->"Block 87:
[preds: 86 ] [succs: 88 89 ]
$i12 = i37 + 1;
$i13 = interfaceinvoke r51.<java.util.List: int size()>();
$r11 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>($i12, $i13);
$i14 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i14 == -1 goto $i38 = i37 + 1;
";
    "Block 86:
[preds: 84 85 ] [succs: 87 88 ]
$i10 = interfaceinvoke r51.<java.util.List: int size()>();
$r10 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(i37, $i10);
$i11 = interfaceinvoke $r10.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i11 != 0 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
"->"Block 88:
[preds: 86 87 ] [succs: 89 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
";
    "Block 87:
[preds: 86 ] [succs: 88 89 ]
$i12 = i37 + 1;
$i13 = interfaceinvoke r51.<java.util.List: int size()>();
$r11 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>($i12, $i13);
$i14 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i14 == -1 goto $i38 = i37 + 1;
"->"Block 88:
[preds: 86 87 ] [succs: 89 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
";
    "Block 87:
[preds: 86 ] [succs: 88 89 ]
$i12 = i37 + 1;
$i13 = interfaceinvoke r51.<java.util.List: int size()>();
$r11 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>($i12, $i13);
$i14 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>(r59);
if $i14 == -1 goto $i38 = i37 + 1;
"->"Block 89:
[preds: 87 88 ] [succs: 90 91 ]
$i38 = i37 + 1;
$r60 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(0, $i38);
$i39 = interfaceinvoke $r60.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i39 == i37 goto i37 = i37 + 1;
";
    "Block 88:
[preds: 86 87 ] [succs: 89 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/indexOf is screwy.\");
"->"Block 89:
[preds: 87 88 ] [succs: 90 91 ]
$i38 = i37 + 1;
$r60 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(0, $i38);
$i39 = interfaceinvoke $r60.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i39 == i37 goto i37 = i37 + 1;
";
    "Block 89:
[preds: 87 88 ] [succs: 90 91 ]
$i38 = i37 + 1;
$r60 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(0, $i38);
$i39 = interfaceinvoke $r60.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i39 == i37 goto i37 = i37 + 1;
"->"Block 90:
[preds: 89 ] [succs: 91 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/lastIndexOf is screwy.\");
";
    "Block 89:
[preds: 87 88 ] [succs: 90 91 ]
$i38 = i37 + 1;
$r60 = interfaceinvoke r51.<java.util.List: java.util.List subList(int,int)>(0, $i38);
$i39 = interfaceinvoke $r60.<java.util.List: int lastIndexOf(java.lang.Object)>(r59);
if $i39 == i37 goto i37 = i37 + 1;
"->"Block 91:
[preds: 89 90 ] [succs: 83 ]
i37 = i37 + 1;
goto [?= $z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 90:
[preds: 89 ] [succs: 91 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"subList/lastIndexOf is screwy.\");
"->"Block 91:
[preds: 89 90 ] [succs: 83 ]
i37 = i37 + 1;
goto [?= $z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()];
";
    "Block 91:
[preds: 89 90 ] [succs: 83 ]
i37 = i37 + 1;
goto [?= $z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>()];
"->"Block 83:
[preds: 82 91 ] [succs: 84 92 ]
$z36 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();
if $z36 == 0 goto r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
";
    "Block 92:
[preds: 83 ] [succs: 93 94 ]
r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r61, b1);
$r0 = newarray (java.lang.Integer)[0];
$r1 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r0);
$r2 = (java.lang.Integer[]) $r1;
r62 = (java.lang.Integer[]) $r2;
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r62);
$z3 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r3);
if $z3 != 0 goto r63 = newarray (java.lang.Integer)[b1];
"->"Block 93:
[preds: 92 ] [succs: 94 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (1)\");
";
    "Block 92:
[preds: 83 ] [succs: 93 94 ]
r61 = staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.List newList()>();
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void AddRandoms(java.util.List,int)>(r61, b1);
$r0 = newarray (java.lang.Integer)[0];
$r1 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r0);
$r2 = (java.lang.Integer[]) $r1;
r62 = (java.lang.Integer[]) $r2;
$r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r62);
$z3 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r3);
if $z3 != 0 goto r63 = newarray (java.lang.Integer)[b1];
"->"Block 94:
[preds: 92 93 ] [succs: 95 96 ]
r63 = newarray (java.lang.Integer)[b1];
$r4 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r63);
$r5 = (java.lang.Integer[]) $r4;
r64 = (java.lang.Integer[]) $r5;
if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
";
    "Block 93:
[preds: 92 ] [succs: 94 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (1)\");
"->"Block 94:
[preds: 92 93 ] [succs: 95 96 ]
r63 = newarray (java.lang.Integer)[b1];
$r4 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r63);
$r5 = (java.lang.Integer[]) $r4;
r64 = (java.lang.Integer[]) $r5;
if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
";
    "Block 94:
[preds: 92 93 ] [succs: 95 96 ]
r63 = newarray (java.lang.Integer)[b1];
$r4 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r63);
$r5 = (java.lang.Integer[]) $r4;
r64 = (java.lang.Integer[]) $r5;
if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
"->"Block 95:
[preds: 94 ] [succs: 96 97 ]
$r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r63);
$z5 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r9);
if $z5 != 0 goto $i40 = b1 + 1;
";
    "Block 94:
[preds: 92 93 ] [succs: 95 96 ]
r63 = newarray (java.lang.Integer)[b1];
$r4 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r63);
$r5 = (java.lang.Integer[]) $r4;
r64 = (java.lang.Integer[]) $r5;
if r63 != r64 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
"->"Block 96:
[preds: 94 95 ] [succs: 97 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
";
    "Block 95:
[preds: 94 ] [succs: 96 97 ]
$r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r63);
$z5 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r9);
if $z5 != 0 goto $i40 = b1 + 1;
"->"Block 96:
[preds: 94 95 ] [succs: 97 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
";
    "Block 95:
[preds: 94 ] [succs: 96 97 ]
$r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r63);
$z5 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r9);
if $z5 != 0 goto $i40 = b1 + 1;
"->"Block 97:
[preds: 95 96 ] [succs: 98 100 ]
$i40 = b1 + 1;
r65 = newarray (java.lang.Integer)[$i40];
$r66 = new java.lang.Integer;
specialinvoke $r66.<java.lang.Integer: void <init>(int)>(69);
r65[b1] = $r66;
$r67 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r65);
$r68 = (java.lang.Integer[]) $r67;
r69 = (java.lang.Integer[]) $r68;
if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
";
    "Block 96:
[preds: 94 95 ] [succs: 97 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (2)\");
"->"Block 97:
[preds: 95 96 ] [succs: 98 100 ]
$i40 = b1 + 1;
r65 = newarray (java.lang.Integer)[$i40];
$r66 = new java.lang.Integer;
specialinvoke $r66.<java.lang.Integer: void <init>(int)>(69);
r65[b1] = $r66;
$r67 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r65);
$r68 = (java.lang.Integer[]) $r67;
r69 = (java.lang.Integer[]) $r68;
if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
";
    "Block 97:
[preds: 95 96 ] [succs: 98 100 ]
$i40 = b1 + 1;
r65 = newarray (java.lang.Integer)[$i40];
$r66 = new java.lang.Integer;
specialinvoke $r66.<java.lang.Integer: void <init>(int)>(69);
r65[b1] = $r66;
$r67 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r65);
$r68 = (java.lang.Integer[]) $r67;
r69 = (java.lang.Integer[]) $r68;
if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
"->"Block 98:
[preds: 97 ] [succs: 99 100 ]
$r6 = r65[b1];
if $r6 != null goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
";
    "Block 97:
[preds: 95 96 ] [succs: 98 100 ]
$i40 = b1 + 1;
r65 = newarray (java.lang.Integer)[$i40];
$r66 = new java.lang.Integer;
specialinvoke $r66.<java.lang.Integer: void <init>(int)>(69);
r65[b1] = $r66;
$r67 = interfaceinvoke r61.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r65);
$r68 = (java.lang.Integer[]) $r67;
r69 = (java.lang.Integer[]) $r68;
if r65 != r69 goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
"->"Block 100:
[preds: 97 98 99 ] [succs: 101 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
";
    "Block 98:
[preds: 97 ] [succs: 99 100 ]
$r6 = r65[b1];
if $r6 != null goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
"->"Block 99:
[preds: 98 ] [succs: 100 101 ]
$r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r65);
$r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, b1);
$z4 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r8);
if $z4 != 0 goto return;
";
    "Block 98:
[preds: 97 ] [succs: 99 100 ]
$r6 = r65[b1];
if $r6 != null goto staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
"->"Block 100:
[preds: 97 98 99 ] [succs: 101 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
";
    "Block 99:
[preds: 98 ] [succs: 100 101 ]
$r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r65);
$r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, b1);
$z4 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r8);
if $z4 != 0 goto return;
"->"Block 100:
[preds: 97 98 99 ] [succs: 101 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
";
    "Block 99:
[preds: 98 ] [succs: 100 101 ]
$r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r65);
$r8 = interfaceinvoke $r7.<java.util.List: java.util.List subList(int,int)>(0, b1);
$z4 = interfaceinvoke r61.<java.util.List: boolean equals(java.lang.Object)>($r8);
if $z4 != 0 goto return;
"->"Block 101:
[preds: 99 100 ] [succs: ]
return;
";
    "Block 100:
[preds: 97 98 99 ] [succs: 101 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"toArray(Object[]) is hosed (3)\");
"->"Block 101:
[preds: 99 100 ] [succs: ]
return;
";
}
