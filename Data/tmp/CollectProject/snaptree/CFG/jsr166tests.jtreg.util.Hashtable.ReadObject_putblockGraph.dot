digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @this: jsr166tests.jtreg.util.Hashtable.ReadObject;
r4 := @parameter0: java.lang.Object;
r0 := @parameter1: java.lang.Object;
$z0 = r0 instanceof jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper;
if $z0 == 0 goto $r1 = new jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper;
"
    "Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.RuntimeException;
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Hashtable.put bug: value is already wrapped\");
throw $r6;
"
    "Block 2:
[preds: 0 ] [succs: ]
$r1 = new jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper;
specialinvoke $r1.<jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper: void <init>(jsr166tests.jtreg.util.Hashtable.ReadObject,java.lang.Object)>(r2, r0);
r3 = $r1;
specialinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r3);
return r0;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @this: jsr166tests.jtreg.util.Hashtable.ReadObject;
r4 := @parameter0: java.lang.Object;
r0 := @parameter1: java.lang.Object;
$z0 = r0 instanceof jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper;
if $z0 == 0 goto $r1 = new jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper;
"->"Block 1:
[preds: 0 ] [succs: ]
$r6 = new java.lang.RuntimeException;
specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>(\"Hashtable.put bug: value is already wrapped\");
throw $r6;
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r2 := @this: jsr166tests.jtreg.util.Hashtable.ReadObject;
r4 := @parameter0: java.lang.Object;
r0 := @parameter1: java.lang.Object;
$z0 = r0 instanceof jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper;
if $z0 == 0 goto $r1 = new jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper;
"->"Block 2:
[preds: 0 ] [succs: ]
$r1 = new jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper;
specialinvoke $r1.<jsr166tests.jtreg.util.Hashtable.ReadObject$ValueWrapper: void <init>(jsr166tests.jtreg.util.Hashtable.ReadObject,java.lang.Object)>(r2, r0);
r3 = $r1;
specialinvoke r2.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r3);
return r0;
";
}
