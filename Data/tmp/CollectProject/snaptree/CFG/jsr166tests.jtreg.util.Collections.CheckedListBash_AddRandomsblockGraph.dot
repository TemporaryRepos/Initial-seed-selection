digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @parameter0: java.util.List;
i0 := @parameter1: int;
i6 = 0;
"
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i6 >= i0 goto return;
"
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r0 = <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.Random rnd>;
$i1 = virtualinvoke $r0.<java.util.Random: int nextInt()>();
i2 = $i1 % i0;
$r1 = new java.lang.Integer;
if i2 >= 0 goto $i7 = i2;
"
    "Block 3:
[preds: 2 ] [succs: 5 ]
$i7 = neg i2;
goto [?= specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i7)];
"
    "Block 4:
[preds: 2 ] [succs: 5 ]
$i7 = i2;
"
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i7);
r2 = $r1;
i3 = interfaceinvoke r3.<java.util.List: int size()>();
$z0 = interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);
if $z0 != 0 goto i4 = interfaceinvoke r3.<java.util.List: int size()>();
"
    "Block 6:
[preds: 5 ] [succs: 7 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Add failed.\");
"
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
i4 = interfaceinvoke r3.<java.util.List: int size()>();
$i5 = i4 - i3;
if $i5 == 1 goto i6 = i6 + 1;
"
    "Block 8:
[preds: 7 ] [succs: 9 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Add didn\'t increase size by 1.\");
"
    "Block 9:
[preds: 7 8 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 1 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r3 := @parameter0: java.util.List;
i0 := @parameter1: int;
i6 = 0;
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i6 >= i0 goto return;
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i6 >= i0 goto return;
"->"Block 2:
[preds: 1 ] [succs: 3 4 ]
$r0 = <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.Random rnd>;
$i1 = virtualinvoke $r0.<java.util.Random: int nextInt()>();
i2 = $i1 % i0;
$r1 = new java.lang.Integer;
if i2 >= 0 goto $i7 = i2;
";
    "Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i6 >= i0 goto return;
"->"Block 10:
[preds: 1 ] [succs: ]
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r0 = <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.Random rnd>;
$i1 = virtualinvoke $r0.<java.util.Random: int nextInt()>();
i2 = $i1 % i0;
$r1 = new java.lang.Integer;
if i2 >= 0 goto $i7 = i2;
"->"Block 3:
[preds: 2 ] [succs: 5 ]
$i7 = neg i2;
goto [?= specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i7)];
";
    "Block 2:
[preds: 1 ] [succs: 3 4 ]
$r0 = <jsr166tests.jtreg.util.Collections.CheckedListBash: java.util.Random rnd>;
$i1 = virtualinvoke $r0.<java.util.Random: int nextInt()>();
i2 = $i1 % i0;
$r1 = new java.lang.Integer;
if i2 >= 0 goto $i7 = i2;
"->"Block 4:
[preds: 2 ] [succs: 5 ]
$i7 = i2;
";
    "Block 3:
[preds: 2 ] [succs: 5 ]
$i7 = neg i2;
goto [?= specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i7)];
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i7);
r2 = $r1;
i3 = interfaceinvoke r3.<java.util.List: int size()>();
$z0 = interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);
if $z0 != 0 goto i4 = interfaceinvoke r3.<java.util.List: int size()>();
";
    "Block 4:
[preds: 2 ] [succs: 5 ]
$i7 = i2;
"->"Block 5:
[preds: 3 4 ] [succs: 6 7 ]
specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i7);
r2 = $r1;
i3 = interfaceinvoke r3.<java.util.List: int size()>();
$z0 = interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);
if $z0 != 0 goto i4 = interfaceinvoke r3.<java.util.List: int size()>();
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i7);
r2 = $r1;
i3 = interfaceinvoke r3.<java.util.List: int size()>();
$z0 = interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);
if $z0 != 0 goto i4 = interfaceinvoke r3.<java.util.List: int size()>();
"->"Block 6:
[preds: 5 ] [succs: 7 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Add failed.\");
";
    "Block 5:
[preds: 3 4 ] [succs: 6 7 ]
specialinvoke $r1.<java.lang.Integer: void <init>(int)>($i7);
r2 = $r1;
i3 = interfaceinvoke r3.<java.util.List: int size()>();
$z0 = interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r2);
if $z0 != 0 goto i4 = interfaceinvoke r3.<java.util.List: int size()>();
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
i4 = interfaceinvoke r3.<java.util.List: int size()>();
$i5 = i4 - i3;
if $i5 == 1 goto i6 = i6 + 1;
";
    "Block 6:
[preds: 5 ] [succs: 7 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Add failed.\");
"->"Block 7:
[preds: 5 6 ] [succs: 8 9 ]
i4 = interfaceinvoke r3.<java.util.List: int size()>();
$i5 = i4 - i3;
if $i5 == 1 goto i6 = i6 + 1;
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
i4 = interfaceinvoke r3.<java.util.List: int size()>();
$i5 = i4 - i3;
if $i5 == 1 goto i6 = i6 + 1;
"->"Block 8:
[preds: 7 ] [succs: 9 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Add didn\'t increase size by 1.\");
";
    "Block 7:
[preds: 5 6 ] [succs: 8 9 ]
i4 = interfaceinvoke r3.<java.util.List: int size()>();
$i5 = i4 - i3;
if $i5 == 1 goto i6 = i6 + 1;
"->"Block 9:
[preds: 7 8 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 7 ] [succs: 9 ]
staticinvoke <jsr166tests.jtreg.util.Collections.CheckedListBash: void fail(java.lang.String)>(\"Add didn\'t increase size by 1.\");
"->"Block 9:
[preds: 7 8 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 9:
[preds: 7 8 ] [succs: 1 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 9 ] [succs: 2 10 ]
if i6 >= i0 goto return;
";
}
