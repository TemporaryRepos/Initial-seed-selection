digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 ]
r11 := @parameter0: java.lang.String[];
$r0 = newarray (java.util.concurrent.Semaphore)[3];
$r1 = new java.util.concurrent.Semaphore;
specialinvoke $r1.<java.util.concurrent.Semaphore: void <init>(int)>(0);
$r0[0] = $r1;
$r2 = new java.util.concurrent.Semaphore;
specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 0);
$r0[1] = $r2;
$r3 = new java.util.concurrent.Semaphore;
specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 1);
$r0[2] = $r3;
r4 = $r0;
i0 = lengthof r4;
i4 = 0;
"
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"
    "Block 2:
[preds: 1 ] [succs: 3 ]
r6 = r4[i4];
$r7 = newarray (int)[2];
$r7[0] = 0;
$r7[1] = 1;
r8 = $r7;
i1 = lengthof r8;
i5 = 0;
"
    "Block 3:
[preds: 2 9 ] [succs: 4 10 ]
if i5 >= i1 goto i4 = i4 + 1;
"
    "Block 4:
[preds: 3 ] [succs: 5 ]
i2 = r8[i5];
i6 = 0;
"
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i6 >= 3 goto i5 = i5 + 1;
"
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$l3 = (long) i2;
$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$z0 = virtualinvoke r6.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l3, $r9);
if $z0 == 0 goto i6 = i6 + 1;
"
    "Block 7:
[preds: 6 ] [succs: ]
$r10 = new java.lang.Error;
specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"Acquired Semaphore with no permits!\");
throw $r10;
"
    "Block 8:
[preds: 6 ] [succs: 5 ]
i6 = i6 + 1;
goto [?= (branch)];
"
    "Block 9:
[preds: 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"
    "Block 10:
[preds: 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
"
    "Block 11:
[preds: 1 ] [succs: ]
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Done!\");
return;
"
    "Block 0:
[preds: ] [succs: 1 ]
r11 := @parameter0: java.lang.String[];
$r0 = newarray (java.util.concurrent.Semaphore)[3];
$r1 = new java.util.concurrent.Semaphore;
specialinvoke $r1.<java.util.concurrent.Semaphore: void <init>(int)>(0);
$r0[0] = $r1;
$r2 = new java.util.concurrent.Semaphore;
specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 0);
$r0[1] = $r2;
$r3 = new java.util.concurrent.Semaphore;
specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int,boolean)>(0, 1);
$r0[2] = $r3;
r4 = $r0;
i0 = lengthof r4;
i4 = 0;
"->"Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 2:
[preds: 1 ] [succs: 3 ]
r6 = r4[i4];
$r7 = newarray (int)[2];
$r7[0] = 0;
$r7[1] = 1;
r8 = $r7;
i1 = lengthof r8;
i5 = 0;
";
    "Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
"->"Block 11:
[preds: 1 ] [succs: ]
$r5 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(\"Done!\");
return;
";
    "Block 2:
[preds: 1 ] [succs: 3 ]
r6 = r4[i4];
$r7 = newarray (int)[2];
$r7[0] = 0;
$r7[1] = 1;
r8 = $r7;
i1 = lengthof r8;
i5 = 0;
"->"Block 3:
[preds: 2 9 ] [succs: 4 10 ]
if i5 >= i1 goto i4 = i4 + 1;
";
    "Block 3:
[preds: 2 9 ] [succs: 4 10 ]
if i5 >= i1 goto i4 = i4 + 1;
"->"Block 4:
[preds: 3 ] [succs: 5 ]
i2 = r8[i5];
i6 = 0;
";
    "Block 3:
[preds: 2 9 ] [succs: 4 10 ]
if i5 >= i1 goto i4 = i4 + 1;
"->"Block 10:
[preds: 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
";
    "Block 4:
[preds: 3 ] [succs: 5 ]
i2 = r8[i5];
i6 = 0;
"->"Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i6 >= 3 goto i5 = i5 + 1;
";
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i6 >= 3 goto i5 = i5 + 1;
"->"Block 6:
[preds: 5 ] [succs: 7 8 ]
$l3 = (long) i2;
$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$z0 = virtualinvoke r6.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l3, $r9);
if $z0 == 0 goto i6 = i6 + 1;
";
    "Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i6 >= 3 goto i5 = i5 + 1;
"->"Block 9:
[preds: 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$l3 = (long) i2;
$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$z0 = virtualinvoke r6.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l3, $r9);
if $z0 == 0 goto i6 = i6 + 1;
"->"Block 7:
[preds: 6 ] [succs: ]
$r10 = new java.lang.Error;
specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>(\"Acquired Semaphore with no permits!\");
throw $r10;
";
    "Block 6:
[preds: 5 ] [succs: 7 8 ]
$l3 = (long) i2;
$r9 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
$z0 = virtualinvoke r6.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>($l3, $r9);
if $z0 == 0 goto i6 = i6 + 1;
"->"Block 8:
[preds: 6 ] [succs: 5 ]
i6 = i6 + 1;
goto [?= (branch)];
";
    "Block 8:
[preds: 6 ] [succs: 5 ]
i6 = i6 + 1;
goto [?= (branch)];
"->"Block 5:
[preds: 4 8 ] [succs: 6 9 ]
if i6 >= 3 goto i5 = i5 + 1;
";
    "Block 9:
[preds: 5 ] [succs: 3 ]
i5 = i5 + 1;
goto [?= (branch)];
"->"Block 3:
[preds: 2 9 ] [succs: 4 10 ]
if i5 >= i1 goto i4 = i4 + 1;
";
    "Block 10:
[preds: 3 ] [succs: 1 ]
i4 = i4 + 1;
goto [?= (branch)];
"->"Block 1:
[preds: 0 10 ] [succs: 2 11 ]
if i4 >= i0 goto $r5 = <java.lang.System: java.io.PrintStream out>;
";
}
