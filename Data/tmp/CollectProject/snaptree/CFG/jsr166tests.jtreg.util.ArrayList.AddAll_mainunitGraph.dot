digraph "unitGraph" {
    "r36 := @parameter0: java.lang.String[]"
    "i0 = 0"
    "if i0 >= 1 goto i2 = 0"
    "$r30 = new java.util.WeakHashMap"
    "specialinvoke $r30.<java.util.WeakHashMap: void <init>(int)>(100000)"
    "r37 = $r30"
    "i1 = 0"
    "if i1 >= 100000 goto $r31 = new java.util.ArrayList"
    "$r33 = new java.lang.Object"
    "specialinvoke $r33.<java.lang.Object: void <init>()>()"
    "$r34 = <java.lang.Boolean: java.lang.Boolean TRUE>"
    "interfaceinvoke r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34)"
    "i1 = i1 + 1"
    "goto [?= (branch)]"
    "$r31 = new java.util.ArrayList"
    "specialinvoke $r31.<java.util.ArrayList: void <init>()>()"
    "$r32 = interfaceinvoke r37.<java.util.Map: java.util.Set keySet()>()"
    "virtualinvoke $r31.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r32)"
    "i0 = i0 + 1"
    "i2 = 0"
    "if i2 >= 1 goto i4 = 0"
    "$r24 = new java.util.WeakHashMap"
    "specialinvoke $r24.<java.util.WeakHashMap: void <init>(int)>(100000)"
    "r38 = $r24"
    "i3 = 0"
    "if i3 >= 100000 goto $r25 = new java.util.LinkedList"
    "$r27 = new java.lang.Object"
    "specialinvoke $r27.<java.lang.Object: void <init>()>()"
    "$r28 = <java.lang.Boolean: java.lang.Boolean TRUE>"
    "interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28)"
    "i3 = i3 + 1"
    "$r25 = new java.util.LinkedList"
    "specialinvoke $r25.<java.util.LinkedList: void <init>()>()"
    "$r26 = interfaceinvoke r38.<java.util.Map: java.util.Set keySet()>()"
    "virtualinvoke $r25.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r26)"
    "i2 = i2 + 1"
    "i4 = 0"
    "if i4 >= 1 goto i6 = 0"
    "$r18 = new java.util.WeakHashMap"
    "specialinvoke $r18.<java.util.WeakHashMap: void <init>(int)>(100000)"
    "r39 = $r18"
    "i5 = 0"
    "if i5 >= 100000 goto $r19 = new java.util.Vector"
    "$r21 = new java.lang.Object"
    "specialinvoke $r21.<java.lang.Object: void <init>()>()"
    "$r22 = <java.lang.Boolean: java.lang.Boolean TRUE>"
    "interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22)"
    "i5 = i5 + 1"
    "$r19 = new java.util.Vector"
    "specialinvoke $r19.<java.util.Vector: void <init>()>()"
    "$r20 = interfaceinvoke r39.<java.util.Map: java.util.Set keySet()>()"
    "virtualinvoke $r19.<java.util.Vector: boolean addAll(java.util.Collection)>($r20)"
    "i4 = i4 + 1"
    "i6 = 0"
    "if i6 >= 1 goto i8 = 0"
    "$r12 = new java.util.WeakHashMap"
    "specialinvoke $r12.<java.util.WeakHashMap: void <init>(int)>(100000)"
    "r40 = $r12"
    "i7 = 0"
    "if i7 >= 100000 goto $r13 = new java.util.ArrayList"
    "$r15 = new java.lang.Object"
    "specialinvoke $r15.<java.lang.Object: void <init>()>()"
    "$r16 = <java.lang.Boolean: java.lang.Boolean TRUE>"
    "interfaceinvoke r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16)"
    "i7 = i7 + 1"
    "$r13 = new java.util.ArrayList"
    "specialinvoke $r13.<java.util.ArrayList: void <init>()>()"
    "r41 = $r13"
    "interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"inka\")"
    "interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")"
    "interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"doo\")"
    "$r14 = interfaceinvoke r40.<java.util.Map: java.util.Set keySet()>()"
    "interfaceinvoke r41.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r14)"
    "i6 = i6 + 1"
    "i8 = 0"
    "if i8 >= 1 goto i10 = 0"
    "$r6 = new java.util.WeakHashMap"
    "specialinvoke $r6.<java.util.WeakHashMap: void <init>(int)>(100000)"
    "r42 = $r6"
    "i9 = 0"
    "if i9 >= 100000 goto $r7 = new java.util.LinkedList"
    "$r9 = new java.lang.Object"
    "specialinvoke $r9.<java.lang.Object: void <init>()>()"
    "$r10 = <java.lang.Boolean: java.lang.Boolean TRUE>"
    "interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10)"
    "i9 = i9 + 1"
    "$r7 = new java.util.LinkedList"
    "specialinvoke $r7.<java.util.LinkedList: void <init>()>()"
    "r43 = $r7"
    "interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"inka\")"
    "interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")"
    "interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"doo\")"
    "$r8 = interfaceinvoke r42.<java.util.Map: java.util.Set keySet()>()"
    "interfaceinvoke r43.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r8)"
    "i8 = i8 + 1"
    "i10 = 0"
    "if i10 >= 1 goto return"
    "$r0 = new java.util.WeakHashMap"
    "specialinvoke $r0.<java.util.WeakHashMap: void <init>(int)>(100000)"
    "r44 = $r0"
    "i11 = 0"
    "if i11 >= 100000 goto $r1 = new java.util.ArrayList"
    "$r3 = new java.lang.Object"
    "specialinvoke $r3.<java.lang.Object: void <init>()>()"
    "$r4 = <java.lang.Boolean: java.lang.Boolean TRUE>"
    "interfaceinvoke r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4)"
    "i11 = i11 + 1"
    "$r1 = new java.util.ArrayList"
    "specialinvoke $r1.<java.util.ArrayList: void <init>()>()"
    "r45 = $r1"
    "interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"inka\")"
    "interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")"
    "interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"doo\")"
    "$r2 = interfaceinvoke r44.<java.util.Map: java.util.Set keySet()>()"
    "interfaceinvoke r45.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r2)"
    "i10 = i10 + 1"
    "return"
    "r36 := @parameter0: java.lang.String[]"->"i0 = 0";
    "i0 = 0"->"if i0 >= 1 goto i2 = 0";
    "if i0 >= 1 goto i2 = 0"->"$r30 = new java.util.WeakHashMap";
    "if i0 >= 1 goto i2 = 0"->"i2 = 0";
    "$r30 = new java.util.WeakHashMap"->"specialinvoke $r30.<java.util.WeakHashMap: void <init>(int)>(100000)";
    "specialinvoke $r30.<java.util.WeakHashMap: void <init>(int)>(100000)"->"r37 = $r30";
    "r37 = $r30"->"i1 = 0";
    "i1 = 0"->"if i1 >= 100000 goto $r31 = new java.util.ArrayList";
    "if i1 >= 100000 goto $r31 = new java.util.ArrayList"->"$r33 = new java.lang.Object";
    "if i1 >= 100000 goto $r31 = new java.util.ArrayList"->"$r31 = new java.util.ArrayList";
    "$r33 = new java.lang.Object"->"specialinvoke $r33.<java.lang.Object: void <init>()>()";
    "specialinvoke $r33.<java.lang.Object: void <init>()>()"->"$r34 = <java.lang.Boolean: java.lang.Boolean TRUE>";
    "$r34 = <java.lang.Boolean: java.lang.Boolean TRUE>"->"interfaceinvoke r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34)";
    "interfaceinvoke r37.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, $r34)"->"i1 = i1 + 1";
    "i1 = i1 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i1 >= 100000 goto $r31 = new java.util.ArrayList";
    "$r31 = new java.util.ArrayList"->"specialinvoke $r31.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r31.<java.util.ArrayList: void <init>()>()"->"$r32 = interfaceinvoke r37.<java.util.Map: java.util.Set keySet()>()";
    "$r32 = interfaceinvoke r37.<java.util.Map: java.util.Set keySet()>()"->"virtualinvoke $r31.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r32)";
    "virtualinvoke $r31.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r32)"->"i0 = i0 + 1";
    "i0 = i0 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i0 >= 1 goto i2 = 0";
    "i2 = 0"->"if i2 >= 1 goto i4 = 0";
    "if i2 >= 1 goto i4 = 0"->"$r24 = new java.util.WeakHashMap";
    "if i2 >= 1 goto i4 = 0"->"i4 = 0";
    "$r24 = new java.util.WeakHashMap"->"specialinvoke $r24.<java.util.WeakHashMap: void <init>(int)>(100000)";
    "specialinvoke $r24.<java.util.WeakHashMap: void <init>(int)>(100000)"->"r38 = $r24";
    "r38 = $r24"->"i3 = 0";
    "i3 = 0"->"if i3 >= 100000 goto $r25 = new java.util.LinkedList";
    "if i3 >= 100000 goto $r25 = new java.util.LinkedList"->"$r27 = new java.lang.Object";
    "if i3 >= 100000 goto $r25 = new java.util.LinkedList"->"$r25 = new java.util.LinkedList";
    "$r27 = new java.lang.Object"->"specialinvoke $r27.<java.lang.Object: void <init>()>()";
    "specialinvoke $r27.<java.lang.Object: void <init>()>()"->"$r28 = <java.lang.Boolean: java.lang.Boolean TRUE>";
    "$r28 = <java.lang.Boolean: java.lang.Boolean TRUE>"->"interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28)";
    "interfaceinvoke r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r28)"->"i3 = i3 + 1";
    "i3 = i3 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i3 >= 100000 goto $r25 = new java.util.LinkedList";
    "$r25 = new java.util.LinkedList"->"specialinvoke $r25.<java.util.LinkedList: void <init>()>()";
    "specialinvoke $r25.<java.util.LinkedList: void <init>()>()"->"$r26 = interfaceinvoke r38.<java.util.Map: java.util.Set keySet()>()";
    "$r26 = interfaceinvoke r38.<java.util.Map: java.util.Set keySet()>()"->"virtualinvoke $r25.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r26)";
    "virtualinvoke $r25.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r26)"->"i2 = i2 + 1";
    "i2 = i2 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i2 >= 1 goto i4 = 0";
    "i4 = 0"->"if i4 >= 1 goto i6 = 0";
    "if i4 >= 1 goto i6 = 0"->"$r18 = new java.util.WeakHashMap";
    "if i4 >= 1 goto i6 = 0"->"i6 = 0";
    "$r18 = new java.util.WeakHashMap"->"specialinvoke $r18.<java.util.WeakHashMap: void <init>(int)>(100000)";
    "specialinvoke $r18.<java.util.WeakHashMap: void <init>(int)>(100000)"->"r39 = $r18";
    "r39 = $r18"->"i5 = 0";
    "i5 = 0"->"if i5 >= 100000 goto $r19 = new java.util.Vector";
    "if i5 >= 100000 goto $r19 = new java.util.Vector"->"$r21 = new java.lang.Object";
    "if i5 >= 100000 goto $r19 = new java.util.Vector"->"$r19 = new java.util.Vector";
    "$r21 = new java.lang.Object"->"specialinvoke $r21.<java.lang.Object: void <init>()>()";
    "specialinvoke $r21.<java.lang.Object: void <init>()>()"->"$r22 = <java.lang.Boolean: java.lang.Boolean TRUE>";
    "$r22 = <java.lang.Boolean: java.lang.Boolean TRUE>"->"interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22)";
    "interfaceinvoke r39.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r21, $r22)"->"i5 = i5 + 1";
    "i5 = i5 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i5 >= 100000 goto $r19 = new java.util.Vector";
    "$r19 = new java.util.Vector"->"specialinvoke $r19.<java.util.Vector: void <init>()>()";
    "specialinvoke $r19.<java.util.Vector: void <init>()>()"->"$r20 = interfaceinvoke r39.<java.util.Map: java.util.Set keySet()>()";
    "$r20 = interfaceinvoke r39.<java.util.Map: java.util.Set keySet()>()"->"virtualinvoke $r19.<java.util.Vector: boolean addAll(java.util.Collection)>($r20)";
    "virtualinvoke $r19.<java.util.Vector: boolean addAll(java.util.Collection)>($r20)"->"i4 = i4 + 1";
    "i4 = i4 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i4 >= 1 goto i6 = 0";
    "i6 = 0"->"if i6 >= 1 goto i8 = 0";
    "if i6 >= 1 goto i8 = 0"->"$r12 = new java.util.WeakHashMap";
    "if i6 >= 1 goto i8 = 0"->"i8 = 0";
    "$r12 = new java.util.WeakHashMap"->"specialinvoke $r12.<java.util.WeakHashMap: void <init>(int)>(100000)";
    "specialinvoke $r12.<java.util.WeakHashMap: void <init>(int)>(100000)"->"r40 = $r12";
    "r40 = $r12"->"i7 = 0";
    "i7 = 0"->"if i7 >= 100000 goto $r13 = new java.util.ArrayList";
    "if i7 >= 100000 goto $r13 = new java.util.ArrayList"->"$r15 = new java.lang.Object";
    "if i7 >= 100000 goto $r13 = new java.util.ArrayList"->"$r13 = new java.util.ArrayList";
    "$r15 = new java.lang.Object"->"specialinvoke $r15.<java.lang.Object: void <init>()>()";
    "specialinvoke $r15.<java.lang.Object: void <init>()>()"->"$r16 = <java.lang.Boolean: java.lang.Boolean TRUE>";
    "$r16 = <java.lang.Boolean: java.lang.Boolean TRUE>"->"interfaceinvoke r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16)";
    "interfaceinvoke r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16)"->"i7 = i7 + 1";
    "i7 = i7 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i7 >= 100000 goto $r13 = new java.util.ArrayList";
    "$r13 = new java.util.ArrayList"->"specialinvoke $r13.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r13.<java.util.ArrayList: void <init>()>()"->"r41 = $r13";
    "r41 = $r13"->"interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"inka\")";
    "interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"inka\")"->"interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")";
    "interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")"->"interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"doo\")";
    "interfaceinvoke r41.<java.util.List: boolean add(java.lang.Object)>(\"doo\")"->"$r14 = interfaceinvoke r40.<java.util.Map: java.util.Set keySet()>()";
    "$r14 = interfaceinvoke r40.<java.util.Map: java.util.Set keySet()>()"->"interfaceinvoke r41.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r14)";
    "interfaceinvoke r41.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r14)"->"i6 = i6 + 1";
    "i6 = i6 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i6 >= 1 goto i8 = 0";
    "i8 = 0"->"if i8 >= 1 goto i10 = 0";
    "if i8 >= 1 goto i10 = 0"->"$r6 = new java.util.WeakHashMap";
    "if i8 >= 1 goto i10 = 0"->"i10 = 0";
    "$r6 = new java.util.WeakHashMap"->"specialinvoke $r6.<java.util.WeakHashMap: void <init>(int)>(100000)";
    "specialinvoke $r6.<java.util.WeakHashMap: void <init>(int)>(100000)"->"r42 = $r6";
    "r42 = $r6"->"i9 = 0";
    "i9 = 0"->"if i9 >= 100000 goto $r7 = new java.util.LinkedList";
    "if i9 >= 100000 goto $r7 = new java.util.LinkedList"->"$r9 = new java.lang.Object";
    "if i9 >= 100000 goto $r7 = new java.util.LinkedList"->"$r7 = new java.util.LinkedList";
    "$r9 = new java.lang.Object"->"specialinvoke $r9.<java.lang.Object: void <init>()>()";
    "specialinvoke $r9.<java.lang.Object: void <init>()>()"->"$r10 = <java.lang.Boolean: java.lang.Boolean TRUE>";
    "$r10 = <java.lang.Boolean: java.lang.Boolean TRUE>"->"interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10)";
    "interfaceinvoke r42.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10)"->"i9 = i9 + 1";
    "i9 = i9 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i9 >= 100000 goto $r7 = new java.util.LinkedList";
    "$r7 = new java.util.LinkedList"->"specialinvoke $r7.<java.util.LinkedList: void <init>()>()";
    "specialinvoke $r7.<java.util.LinkedList: void <init>()>()"->"r43 = $r7";
    "r43 = $r7"->"interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"inka\")";
    "interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"inka\")"->"interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")";
    "interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")"->"interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"doo\")";
    "interfaceinvoke r43.<java.util.List: boolean add(java.lang.Object)>(\"doo\")"->"$r8 = interfaceinvoke r42.<java.util.Map: java.util.Set keySet()>()";
    "$r8 = interfaceinvoke r42.<java.util.Map: java.util.Set keySet()>()"->"interfaceinvoke r43.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r8)";
    "interfaceinvoke r43.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r8)"->"i8 = i8 + 1";
    "i8 = i8 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i8 >= 1 goto i10 = 0";
    "i10 = 0"->"if i10 >= 1 goto return";
    "if i10 >= 1 goto return"->"$r0 = new java.util.WeakHashMap";
    "if i10 >= 1 goto return"->"return";
    "$r0 = new java.util.WeakHashMap"->"specialinvoke $r0.<java.util.WeakHashMap: void <init>(int)>(100000)";
    "specialinvoke $r0.<java.util.WeakHashMap: void <init>(int)>(100000)"->"r44 = $r0";
    "r44 = $r0"->"i11 = 0";
    "i11 = 0"->"if i11 >= 100000 goto $r1 = new java.util.ArrayList";
    "if i11 >= 100000 goto $r1 = new java.util.ArrayList"->"$r3 = new java.lang.Object";
    "if i11 >= 100000 goto $r1 = new java.util.ArrayList"->"$r1 = new java.util.ArrayList";
    "$r3 = new java.lang.Object"->"specialinvoke $r3.<java.lang.Object: void <init>()>()";
    "specialinvoke $r3.<java.lang.Object: void <init>()>()"->"$r4 = <java.lang.Boolean: java.lang.Boolean TRUE>";
    "$r4 = <java.lang.Boolean: java.lang.Boolean TRUE>"->"interfaceinvoke r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4)";
    "interfaceinvoke r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r4)"->"i11 = i11 + 1";
    "i11 = i11 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i11 >= 100000 goto $r1 = new java.util.ArrayList";
    "$r1 = new java.util.ArrayList"->"specialinvoke $r1.<java.util.ArrayList: void <init>()>()";
    "specialinvoke $r1.<java.util.ArrayList: void <init>()>()"->"r45 = $r1";
    "r45 = $r1"->"interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"inka\")";
    "interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"inka\")"->"interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")";
    "interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"dinka\")"->"interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"doo\")";
    "interfaceinvoke r45.<java.util.List: boolean add(java.lang.Object)>(\"doo\")"->"$r2 = interfaceinvoke r44.<java.util.Map: java.util.Set keySet()>()";
    "$r2 = interfaceinvoke r44.<java.util.Map: java.util.Set keySet()>()"->"interfaceinvoke r45.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r2)";
    "interfaceinvoke r45.<java.util.List: boolean addAll(int,java.util.Collection)>(1, $r2)"->"i10 = i10 + 1";
    "i10 = i10 + 1"->"goto [?= (branch)]";
    "goto [?= (branch)]"->"if i10 >= 1 goto return";
}
