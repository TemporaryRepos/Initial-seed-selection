digraph "unitGraph" {
    "r0 := @this: jsr166tests.jtreg.util.Collections.CheckedNull"
    "r1 := @parameter0: java.util.Collection"
    "$z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>()"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z0)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, null)"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, \"foo\")"
    "$z1 = interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(\"bar\")"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1)"
    "$r2 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"
    "$r3 = new jsr166tests.jtreg.util.Collections.CheckedNull$2"
    "specialinvoke $r3.<jsr166tests.jtreg.util.Collections.CheckedNull$2: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Collection)>(r0, r1)"
    "$r2[0] = $r3"
    "$r4 = new jsr166tests.jtreg.util.Collections.CheckedNull$3"
    "specialinvoke $r4.<jsr166tests.jtreg.util.Collections.CheckedNull$3: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Collection)>(r0, r1)"
    "$r2[1] = $r4"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r2)"
    "goto [?= return]"
    "$r5 := @caughtexception"
    "r6 = $r5"
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void unexpected(java.lang.Throwable)>(r6)"
    "return"
    "r0 := @this: jsr166tests.jtreg.util.Collections.CheckedNull"->"r1 := @parameter0: java.util.Collection";
    "r1 := @parameter0: java.util.Collection"->"$z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>()";
    "r1 := @parameter0: java.util.Collection"->"$r5 := @caughtexception";
    "$z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>()"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z0)";
    "$z0 = interfaceinvoke r1.<java.util.Collection: boolean isEmpty()>()"->"$r5 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z0)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, null)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z0)"->"$r5 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, null)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, \"foo\")";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, null)"->"$r5 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, \"foo\")"->"$z1 = interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(\"bar\")";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, \"foo\")"->"$r5 := @caughtexception";
    "$z1 = interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(\"bar\")"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1)";
    "$z1 = interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(\"bar\")"->"$r5 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, null)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void check(boolean)>($z1)"->"$r5 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, null)"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, \"foo\")";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, null)"->"$r5 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, \"foo\")"->"$r2 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void add(java.util.Collection,java.lang.Object)>(r1, \"foo\")"->"$r5 := @caughtexception";
    "$r2 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"->"$r3 = new jsr166tests.jtreg.util.Collections.CheckedNull$2";
    "$r2 = newarray (jsr166tests.jtreg.util.Collections.CheckedNull$F)[2]"->"$r5 := @caughtexception";
    "$r3 = new jsr166tests.jtreg.util.Collections.CheckedNull$2"->"specialinvoke $r3.<jsr166tests.jtreg.util.Collections.CheckedNull$2: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Collection)>(r0, r1)";
    "$r3 = new jsr166tests.jtreg.util.Collections.CheckedNull$2"->"$r5 := @caughtexception";
    "specialinvoke $r3.<jsr166tests.jtreg.util.Collections.CheckedNull$2: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Collection)>(r0, r1)"->"$r2[0] = $r3";
    "specialinvoke $r3.<jsr166tests.jtreg.util.Collections.CheckedNull$2: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Collection)>(r0, r1)"->"$r5 := @caughtexception";
    "$r2[0] = $r3"->"$r4 = new jsr166tests.jtreg.util.Collections.CheckedNull$3";
    "$r2[0] = $r3"->"$r5 := @caughtexception";
    "$r4 = new jsr166tests.jtreg.util.Collections.CheckedNull$3"->"specialinvoke $r4.<jsr166tests.jtreg.util.Collections.CheckedNull$3: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Collection)>(r0, r1)";
    "$r4 = new jsr166tests.jtreg.util.Collections.CheckedNull$3"->"$r5 := @caughtexception";
    "specialinvoke $r4.<jsr166tests.jtreg.util.Collections.CheckedNull$3: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Collection)>(r0, r1)"->"$r2[1] = $r4";
    "specialinvoke $r4.<jsr166tests.jtreg.util.Collections.CheckedNull$3: void <init>(jsr166tests.jtreg.util.Collections.CheckedNull,java.util.Collection)>(r0, r1)"->"$r5 := @caughtexception";
    "$r2[1] = $r4"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r2)";
    "$r2[1] = $r4"->"$r5 := @caughtexception";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r2)"->"goto [?= return]";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void equalCCE(jsr166tests.jtreg.util.Collections.CheckedNull$F[])>($r2)"->"$r5 := @caughtexception";
    "goto [?= return]"->"return";
    "$r5 := @caughtexception"->"r6 = $r5";
    "r6 = $r5"->"virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void unexpected(java.lang.Throwable)>(r6)";
    "virtualinvoke r0.<jsr166tests.jtreg.util.Collections.CheckedNull: void unexpected(java.lang.Throwable)>(r6)"->"return";
}
