digraph "unitGraph" {
    "r5 := @parameter0: java.lang.String[]"
    "$r0 = new java.util.concurrent.SynchronousQueue"
    "specialinvoke $r0.<java.util.concurrent.SynchronousQueue: void <init>()>()"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r0)"
    "$r1 = new java.util.concurrent.ArrayBlockingQueue"
    "specialinvoke $r1.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(1, 0)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r1)"
    "$r2 = new java.util.concurrent.ArrayBlockingQueue"
    "specialinvoke $r2.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(1, 1)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r2)"
    "$r3 = new java.util.concurrent.LinkedBlockingQueue"
    "specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(1)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r3)"
    "$r4 = new java.util.concurrent.LinkedBlockingDeque"
    "specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>(int)>(1)"
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r4)"
    "return"
    "r5 := @parameter0: java.lang.String[]"->"$r0 = new java.util.concurrent.SynchronousQueue";
    "$r0 = new java.util.concurrent.SynchronousQueue"->"specialinvoke $r0.<java.util.concurrent.SynchronousQueue: void <init>()>()";
    "specialinvoke $r0.<java.util.concurrent.SynchronousQueue: void <init>()>()"->"staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r0)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r0)"->"$r1 = new java.util.concurrent.ArrayBlockingQueue";
    "$r1 = new java.util.concurrent.ArrayBlockingQueue"->"specialinvoke $r1.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(1, 0)";
    "specialinvoke $r1.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(1, 0)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r1)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r1)"->"$r2 = new java.util.concurrent.ArrayBlockingQueue";
    "$r2 = new java.util.concurrent.ArrayBlockingQueue"->"specialinvoke $r2.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(1, 1)";
    "specialinvoke $r2.<java.util.concurrent.ArrayBlockingQueue: void <init>(int,boolean)>(1, 1)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r2)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r2)"->"$r3 = new java.util.concurrent.LinkedBlockingQueue";
    "$r3 = new java.util.concurrent.LinkedBlockingQueue"->"specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(1)";
    "specialinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void <init>(int)>(1)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r3)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r3)"->"$r4 = new java.util.concurrent.LinkedBlockingDeque";
    "$r4 = new java.util.concurrent.LinkedBlockingDeque"->"specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>(int)>(1)";
    "specialinvoke $r4.<java.util.concurrent.LinkedBlockingDeque: void <init>(int)>(1)"->"staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r4)";
    "staticinvoke <jsr166tests.jtreg.util.concurrent.BlockingQueue.Interrupt: void testQueue(java.util.concurrent.BlockingQueue)>($r4)"->"return";
}
