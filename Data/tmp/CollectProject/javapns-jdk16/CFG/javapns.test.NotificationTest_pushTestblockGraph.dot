digraph "unitGraph" {
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
r1 = r0[0];
r2 = r0[1];
r3 = r0[2];
$i0 = lengthof r0;
if $i0 < 4 goto $z5 = 0;
"
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r10 = r0[3];
$z5 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"production\");
goto [?= z0 = $z5];
"
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z5 = 0;
"
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z5;
$i1 = lengthof r0;
if $i1 < 4 goto $z6 = 0;
"
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r9 = r0[3];
$z6 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"simulation\");
goto [?= z1 = $z6];
"
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z6 = 0;
"
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
z1 = $z6;
$i2 = lengthof r0;
if $i2 < 5 goto $z7 = 0;
"
    "Block 7:
[preds: 6 ] [succs: 9 ]
$r8 = r0[4];
$z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"complex\");
goto [?= z2 = $z7];
"
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z7 = 0;
"
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
z2 = $z7;
$i3 = lengthof r0;
if $i3 < 5 goto $z8 = 0;
"
    "Block 10:
[preds: 9 ] [succs: 12 ]
$r7 = r0[4];
$z8 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"threads\");
goto [?= z3 = $z8];
"
    "Block 11:
[preds: 9 ] [succs: 12 ]
$z8 = 0;
"
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
z3 = $z8;
$i4 = lengthof r0;
if $i4 < 6 goto $i8 = 100;
"
    "Block 13:
[preds: 12 ] [succs: 15 ]
$r6 = r0[5];
$i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
goto [?= i5 = $i8];
"
    "Block 14:
[preds: 12 ] [succs: 15 ]
$i8 = 100;
"
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
i5 = $i8;
$i6 = lengthof r0;
if $i6 < 7 goto $i9 = 10;
"
    "Block 16:
[preds: 15 ] [succs: 18 ]
$r5 = r0[6];
$i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
goto [?= i7 = $i9];
"
    "Block 17:
[preds: 15 ] [succs: 18 ]
$i9 = 10;
"
    "Block 18:
[preds: 16 17 ] [succs: 19 21 ]
i7 = $i9;
if z2 != 0 goto $z9 = 0;
"
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
if z3 != 0 goto $z9 = 0;
"
    "Block 20:
[preds: 19 ] [succs: 22 ]
$z9 = 1;
goto [?= z4 = $z9];
"
    "Block 21:
[preds: 18 19 ] [succs: 22 ]
$z9 = 0;
"
    "Block 22:
[preds: 20 21 ] [succs: 23 24 ]
z4 = $z9;
staticinvoke <javapns.test.NotificationTest: void verifyKeystore(java.lang.Object,java.lang.String,boolean)>(r1, r2, z0);
if z4 == 0 goto (branch);
"
    "Block 23:
[preds: 22 ] [succs: 28 ]
r11 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications test(java.lang.Object,java.lang.String,boolean,java.lang.Object)>(r1, r2, z0, r3);
staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r11);
goto [?= return];
"
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
if z2 == 0 goto (branch);
"
    "Block 25:
[preds: 24 ] [succs: 28 ]
$r4 = staticinvoke <javapns.test.NotificationTest: javapns.notification.Payload createComplexPayload()>();
r12 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications payload(javapns.notification.Payload,java.lang.Object,java.lang.String,boolean,java.lang.Object)>($r4, r1, r2, z0, r3);
staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r12);
goto [?= return];
"
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
if z3 == 0 goto return;
"
    "Block 27:
[preds: 26 ] [succs: 28 ]
staticinvoke <javapns.test.NotificationTest: void pushSimplePayloadUsingThreads(java.lang.String,java.lang.String,boolean,java.lang.String,boolean,int,int)>(r1, r2, z0, r3, z1, i5, i7);
"
    "Block 28:
[preds: 23 25 26 27 ] [succs: ]
return;
"
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
r1 = r0[0];
r2 = r0[1];
r3 = r0[2];
$i0 = lengthof r0;
if $i0 < 4 goto $z5 = 0;
"->"Block 1:
[preds: 0 ] [succs: 3 ]
$r10 = r0[3];
$z5 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"production\");
goto [?= z0 = $z5];
";
    "Block 0:
[preds: ] [succs: 1 2 ]
r0 := @parameter0: java.lang.String[];
r1 = r0[0];
r2 = r0[1];
r3 = r0[2];
$i0 = lengthof r0;
if $i0 < 4 goto $z5 = 0;
"->"Block 2:
[preds: 0 ] [succs: 3 ]
$z5 = 0;
";
    "Block 1:
[preds: 0 ] [succs: 3 ]
$r10 = r0[3];
$z5 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"production\");
goto [?= z0 = $z5];
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z5;
$i1 = lengthof r0;
if $i1 < 4 goto $z6 = 0;
";
    "Block 2:
[preds: 0 ] [succs: 3 ]
$z5 = 0;
"->"Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z5;
$i1 = lengthof r0;
if $i1 < 4 goto $z6 = 0;
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z5;
$i1 = lengthof r0;
if $i1 < 4 goto $z6 = 0;
"->"Block 4:
[preds: 3 ] [succs: 6 ]
$r9 = r0[3];
$z6 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"simulation\");
goto [?= z1 = $z6];
";
    "Block 3:
[preds: 1 2 ] [succs: 4 5 ]
z0 = $z5;
$i1 = lengthof r0;
if $i1 < 4 goto $z6 = 0;
"->"Block 5:
[preds: 3 ] [succs: 6 ]
$z6 = 0;
";
    "Block 4:
[preds: 3 ] [succs: 6 ]
$r9 = r0[3];
$z6 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"simulation\");
goto [?= z1 = $z6];
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
z1 = $z6;
$i2 = lengthof r0;
if $i2 < 5 goto $z7 = 0;
";
    "Block 5:
[preds: 3 ] [succs: 6 ]
$z6 = 0;
"->"Block 6:
[preds: 4 5 ] [succs: 7 8 ]
z1 = $z6;
$i2 = lengthof r0;
if $i2 < 5 goto $z7 = 0;
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
z1 = $z6;
$i2 = lengthof r0;
if $i2 < 5 goto $z7 = 0;
"->"Block 7:
[preds: 6 ] [succs: 9 ]
$r8 = r0[4];
$z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"complex\");
goto [?= z2 = $z7];
";
    "Block 6:
[preds: 4 5 ] [succs: 7 8 ]
z1 = $z6;
$i2 = lengthof r0;
if $i2 < 5 goto $z7 = 0;
"->"Block 8:
[preds: 6 ] [succs: 9 ]
$z7 = 0;
";
    "Block 7:
[preds: 6 ] [succs: 9 ]
$r8 = r0[4];
$z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"complex\");
goto [?= z2 = $z7];
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
z2 = $z7;
$i3 = lengthof r0;
if $i3 < 5 goto $z8 = 0;
";
    "Block 8:
[preds: 6 ] [succs: 9 ]
$z7 = 0;
"->"Block 9:
[preds: 7 8 ] [succs: 10 11 ]
z2 = $z7;
$i3 = lengthof r0;
if $i3 < 5 goto $z8 = 0;
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
z2 = $z7;
$i3 = lengthof r0;
if $i3 < 5 goto $z8 = 0;
"->"Block 10:
[preds: 9 ] [succs: 12 ]
$r7 = r0[4];
$z8 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"threads\");
goto [?= z3 = $z8];
";
    "Block 9:
[preds: 7 8 ] [succs: 10 11 ]
z2 = $z7;
$i3 = lengthof r0;
if $i3 < 5 goto $z8 = 0;
"->"Block 11:
[preds: 9 ] [succs: 12 ]
$z8 = 0;
";
    "Block 10:
[preds: 9 ] [succs: 12 ]
$r7 = r0[4];
$z8 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"threads\");
goto [?= z3 = $z8];
"->"Block 12:
[preds: 10 11 ] [succs: 13 14 ]
z3 = $z8;
$i4 = lengthof r0;
if $i4 < 6 goto $i8 = 100;
";
    "Block 11:
[preds: 9 ] [succs: 12 ]
$z8 = 0;
"->"Block 12:
[preds: 10 11 ] [succs: 13 14 ]
z3 = $z8;
$i4 = lengthof r0;
if $i4 < 6 goto $i8 = 100;
";
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
z3 = $z8;
$i4 = lengthof r0;
if $i4 < 6 goto $i8 = 100;
"->"Block 13:
[preds: 12 ] [succs: 15 ]
$r6 = r0[5];
$i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
goto [?= i5 = $i8];
";
    "Block 12:
[preds: 10 11 ] [succs: 13 14 ]
z3 = $z8;
$i4 = lengthof r0;
if $i4 < 6 goto $i8 = 100;
"->"Block 14:
[preds: 12 ] [succs: 15 ]
$i8 = 100;
";
    "Block 13:
[preds: 12 ] [succs: 15 ]
$r6 = r0[5];
$i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);
goto [?= i5 = $i8];
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
i5 = $i8;
$i6 = lengthof r0;
if $i6 < 7 goto $i9 = 10;
";
    "Block 14:
[preds: 12 ] [succs: 15 ]
$i8 = 100;
"->"Block 15:
[preds: 13 14 ] [succs: 16 17 ]
i5 = $i8;
$i6 = lengthof r0;
if $i6 < 7 goto $i9 = 10;
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
i5 = $i8;
$i6 = lengthof r0;
if $i6 < 7 goto $i9 = 10;
"->"Block 16:
[preds: 15 ] [succs: 18 ]
$r5 = r0[6];
$i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
goto [?= i7 = $i9];
";
    "Block 15:
[preds: 13 14 ] [succs: 16 17 ]
i5 = $i8;
$i6 = lengthof r0;
if $i6 < 7 goto $i9 = 10;
"->"Block 17:
[preds: 15 ] [succs: 18 ]
$i9 = 10;
";
    "Block 16:
[preds: 15 ] [succs: 18 ]
$r5 = r0[6];
$i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);
goto [?= i7 = $i9];
"->"Block 18:
[preds: 16 17 ] [succs: 19 21 ]
i7 = $i9;
if z2 != 0 goto $z9 = 0;
";
    "Block 17:
[preds: 15 ] [succs: 18 ]
$i9 = 10;
"->"Block 18:
[preds: 16 17 ] [succs: 19 21 ]
i7 = $i9;
if z2 != 0 goto $z9 = 0;
";
    "Block 18:
[preds: 16 17 ] [succs: 19 21 ]
i7 = $i9;
if z2 != 0 goto $z9 = 0;
"->"Block 19:
[preds: 18 ] [succs: 20 21 ]
if z3 != 0 goto $z9 = 0;
";
    "Block 18:
[preds: 16 17 ] [succs: 19 21 ]
i7 = $i9;
if z2 != 0 goto $z9 = 0;
"->"Block 21:
[preds: 18 19 ] [succs: 22 ]
$z9 = 0;
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
if z3 != 0 goto $z9 = 0;
"->"Block 20:
[preds: 19 ] [succs: 22 ]
$z9 = 1;
goto [?= z4 = $z9];
";
    "Block 19:
[preds: 18 ] [succs: 20 21 ]
if z3 != 0 goto $z9 = 0;
"->"Block 21:
[preds: 18 19 ] [succs: 22 ]
$z9 = 0;
";
    "Block 20:
[preds: 19 ] [succs: 22 ]
$z9 = 1;
goto [?= z4 = $z9];
"->"Block 22:
[preds: 20 21 ] [succs: 23 24 ]
z4 = $z9;
staticinvoke <javapns.test.NotificationTest: void verifyKeystore(java.lang.Object,java.lang.String,boolean)>(r1, r2, z0);
if z4 == 0 goto (branch);
";
    "Block 21:
[preds: 18 19 ] [succs: 22 ]
$z9 = 0;
"->"Block 22:
[preds: 20 21 ] [succs: 23 24 ]
z4 = $z9;
staticinvoke <javapns.test.NotificationTest: void verifyKeystore(java.lang.Object,java.lang.String,boolean)>(r1, r2, z0);
if z4 == 0 goto (branch);
";
    "Block 22:
[preds: 20 21 ] [succs: 23 24 ]
z4 = $z9;
staticinvoke <javapns.test.NotificationTest: void verifyKeystore(java.lang.Object,java.lang.String,boolean)>(r1, r2, z0);
if z4 == 0 goto (branch);
"->"Block 23:
[preds: 22 ] [succs: 28 ]
r11 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications test(java.lang.Object,java.lang.String,boolean,java.lang.Object)>(r1, r2, z0, r3);
staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r11);
goto [?= return];
";
    "Block 22:
[preds: 20 21 ] [succs: 23 24 ]
z4 = $z9;
staticinvoke <javapns.test.NotificationTest: void verifyKeystore(java.lang.Object,java.lang.String,boolean)>(r1, r2, z0);
if z4 == 0 goto (branch);
"->"Block 24:
[preds: 22 ] [succs: 25 26 ]
if z2 == 0 goto (branch);
";
    "Block 23:
[preds: 22 ] [succs: 28 ]
r11 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications test(java.lang.Object,java.lang.String,boolean,java.lang.Object)>(r1, r2, z0, r3);
staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r11);
goto [?= return];
"->"Block 28:
[preds: 23 25 26 27 ] [succs: ]
return;
";
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
if z2 == 0 goto (branch);
"->"Block 25:
[preds: 24 ] [succs: 28 ]
$r4 = staticinvoke <javapns.test.NotificationTest: javapns.notification.Payload createComplexPayload()>();
r12 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications payload(javapns.notification.Payload,java.lang.Object,java.lang.String,boolean,java.lang.Object)>($r4, r1, r2, z0, r3);
staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r12);
goto [?= return];
";
    "Block 24:
[preds: 22 ] [succs: 25 26 ]
if z2 == 0 goto (branch);
"->"Block 26:
[preds: 24 ] [succs: 27 28 ]
if z3 == 0 goto return;
";
    "Block 25:
[preds: 24 ] [succs: 28 ]
$r4 = staticinvoke <javapns.test.NotificationTest: javapns.notification.Payload createComplexPayload()>();
r12 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications payload(javapns.notification.Payload,java.lang.Object,java.lang.String,boolean,java.lang.Object)>($r4, r1, r2, z0, r3);
staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r12);
goto [?= return];
"->"Block 28:
[preds: 23 25 26 27 ] [succs: ]
return;
";
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
if z3 == 0 goto return;
"->"Block 27:
[preds: 26 ] [succs: 28 ]
staticinvoke <javapns.test.NotificationTest: void pushSimplePayloadUsingThreads(java.lang.String,java.lang.String,boolean,java.lang.String,boolean,int,int)>(r1, r2, z0, r3, z1, i5, i7);
";
    "Block 26:
[preds: 24 ] [succs: 27 28 ]
if z3 == 0 goto return;
"->"Block 28:
[preds: 23 25 26 27 ] [succs: ]
return;
";
    "Block 27:
[preds: 26 ] [succs: 28 ]
staticinvoke <javapns.test.NotificationTest: void pushSimplePayloadUsingThreads(java.lang.String,java.lang.String,boolean,java.lang.String,boolean,int,int)>(r1, r2, z0, r3, z1, i5, i7);
"->"Block 28:
[preds: 23 25 26 27 ] [succs: ]
return;
";
}
