digraph "unitGraph" {
    "r0 := @parameter0: java.lang.String[]"
    "r1 = r0[0]"
    "r2 = r0[1]"
    "r3 = r0[2]"
    "$i0 = lengthof r0"
    "if $i0 < 4 goto $z5 = 0"
    "$r10 = r0[3]"
    "$z5 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"production\")"
    "goto [?= z0 = $z5]"
    "$z5 = 0"
    "z0 = $z5"
    "$i1 = lengthof r0"
    "if $i1 < 4 goto $z6 = 0"
    "$r9 = r0[3]"
    "$z6 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"simulation\")"
    "goto [?= z1 = $z6]"
    "$z6 = 0"
    "z1 = $z6"
    "$i2 = lengthof r0"
    "if $i2 < 5 goto $z7 = 0"
    "$r8 = r0[4]"
    "$z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"complex\")"
    "goto [?= z2 = $z7]"
    "$z7 = 0"
    "z2 = $z7"
    "$i3 = lengthof r0"
    "if $i3 < 5 goto $z8 = 0"
    "$r7 = r0[4]"
    "$z8 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"threads\")"
    "goto [?= z3 = $z8]"
    "$z8 = 0"
    "z3 = $z8"
    "$i4 = lengthof r0"
    "if $i4 < 6 goto $i8 = 100"
    "$r6 = r0[5]"
    "$i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6)"
    "goto [?= i5 = $i8]"
    "$i8 = 100"
    "i5 = $i8"
    "$i6 = lengthof r0"
    "if $i6 < 7 goto $i9 = 10"
    "$r5 = r0[6]"
    "$i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5)"
    "goto [?= i7 = $i9]"
    "$i9 = 10"
    "i7 = $i9"
    "if z2 != 0 goto $z9 = 0"
    "if z3 != 0 goto $z9 = 0"
    "$z9 = 1"
    "goto [?= z4 = $z9]"
    "$z9 = 0"
    "z4 = $z9"
    "staticinvoke <javapns.test.NotificationTest: void verifyKeystore(java.lang.Object,java.lang.String,boolean)>(r1, r2, z0)"
    "if z4 == 0 goto (branch)"
    "r11 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications test(java.lang.Object,java.lang.String,boolean,java.lang.Object)>(r1, r2, z0, r3)"
    "staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r11)"
    "goto [?= return]"
    "if z2 == 0 goto (branch)"
    "$r4 = staticinvoke <javapns.test.NotificationTest: javapns.notification.Payload createComplexPayload()>()"
    "r12 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications payload(javapns.notification.Payload,java.lang.Object,java.lang.String,boolean,java.lang.Object)>($r4, r1, r2, z0, r3)"
    "staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r12)"
    "if z3 == 0 goto return"
    "staticinvoke <javapns.test.NotificationTest: void pushSimplePayloadUsingThreads(java.lang.String,java.lang.String,boolean,java.lang.String,boolean,int,int)>(r1, r2, z0, r3, z1, i5, i7)"
    "return"
    "r0 := @parameter0: java.lang.String[]"->"r1 = r0[0]";
    "r1 = r0[0]"->"r2 = r0[1]";
    "r2 = r0[1]"->"r3 = r0[2]";
    "r3 = r0[2]"->"$i0 = lengthof r0";
    "$i0 = lengthof r0"->"if $i0 < 4 goto $z5 = 0";
    "if $i0 < 4 goto $z5 = 0"->"$r10 = r0[3]";
    "if $i0 < 4 goto $z5 = 0"->"$z5 = 0";
    "$r10 = r0[3]"->"$z5 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"production\")";
    "$z5 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"production\")"->"goto [?= z0 = $z5]";
    "goto [?= z0 = $z5]"->"z0 = $z5";
    "$z5 = 0"->"z0 = $z5";
    "z0 = $z5"->"$i1 = lengthof r0";
    "$i1 = lengthof r0"->"if $i1 < 4 goto $z6 = 0";
    "if $i1 < 4 goto $z6 = 0"->"$r9 = r0[3]";
    "if $i1 < 4 goto $z6 = 0"->"$z6 = 0";
    "$r9 = r0[3]"->"$z6 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"simulation\")";
    "$z6 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"simulation\")"->"goto [?= z1 = $z6]";
    "goto [?= z1 = $z6]"->"z1 = $z6";
    "$z6 = 0"->"z1 = $z6";
    "z1 = $z6"->"$i2 = lengthof r0";
    "$i2 = lengthof r0"->"if $i2 < 5 goto $z7 = 0";
    "if $i2 < 5 goto $z7 = 0"->"$r8 = r0[4]";
    "if $i2 < 5 goto $z7 = 0"->"$z7 = 0";
    "$r8 = r0[4]"->"$z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"complex\")";
    "$z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"complex\")"->"goto [?= z2 = $z7]";
    "goto [?= z2 = $z7]"->"z2 = $z7";
    "$z7 = 0"->"z2 = $z7";
    "z2 = $z7"->"$i3 = lengthof r0";
    "$i3 = lengthof r0"->"if $i3 < 5 goto $z8 = 0";
    "if $i3 < 5 goto $z8 = 0"->"$r7 = r0[4]";
    "if $i3 < 5 goto $z8 = 0"->"$z8 = 0";
    "$r7 = r0[4]"->"$z8 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"threads\")";
    "$z8 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"threads\")"->"goto [?= z3 = $z8]";
    "goto [?= z3 = $z8]"->"z3 = $z8";
    "$z8 = 0"->"z3 = $z8";
    "z3 = $z8"->"$i4 = lengthof r0";
    "$i4 = lengthof r0"->"if $i4 < 6 goto $i8 = 100";
    "if $i4 < 6 goto $i8 = 100"->"$r6 = r0[5]";
    "if $i4 < 6 goto $i8 = 100"->"$i8 = 100";
    "$r6 = r0[5]"->"$i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6)";
    "$i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6)"->"goto [?= i5 = $i8]";
    "goto [?= i5 = $i8]"->"i5 = $i8";
    "$i8 = 100"->"i5 = $i8";
    "i5 = $i8"->"$i6 = lengthof r0";
    "$i6 = lengthof r0"->"if $i6 < 7 goto $i9 = 10";
    "if $i6 < 7 goto $i9 = 10"->"$r5 = r0[6]";
    "if $i6 < 7 goto $i9 = 10"->"$i9 = 10";
    "$r5 = r0[6]"->"$i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5)";
    "$i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5)"->"goto [?= i7 = $i9]";
    "goto [?= i7 = $i9]"->"i7 = $i9";
    "$i9 = 10"->"i7 = $i9";
    "i7 = $i9"->"if z2 != 0 goto $z9 = 0";
    "if z2 != 0 goto $z9 = 0"->"if z3 != 0 goto $z9 = 0";
    "if z2 != 0 goto $z9 = 0"->"$z9 = 0";
    "if z3 != 0 goto $z9 = 0"->"$z9 = 1";
    "if z3 != 0 goto $z9 = 0"->"$z9 = 0";
    "$z9 = 1"->"goto [?= z4 = $z9]";
    "goto [?= z4 = $z9]"->"z4 = $z9";
    "$z9 = 0"->"z4 = $z9";
    "z4 = $z9"->"staticinvoke <javapns.test.NotificationTest: void verifyKeystore(java.lang.Object,java.lang.String,boolean)>(r1, r2, z0)";
    "staticinvoke <javapns.test.NotificationTest: void verifyKeystore(java.lang.Object,java.lang.String,boolean)>(r1, r2, z0)"->"if z4 == 0 goto (branch)";
    "if z4 == 0 goto (branch)"->"r11 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications test(java.lang.Object,java.lang.String,boolean,java.lang.Object)>(r1, r2, z0, r3)";
    "if z4 == 0 goto (branch)"->"if z2 == 0 goto (branch)";
    "r11 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications test(java.lang.Object,java.lang.String,boolean,java.lang.Object)>(r1, r2, z0, r3)"->"staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r11)";
    "staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r11)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "if z2 == 0 goto (branch)"->"$r4 = staticinvoke <javapns.test.NotificationTest: javapns.notification.Payload createComplexPayload()>()";
    "if z2 == 0 goto (branch)"->"if z3 == 0 goto return";
    "$r4 = staticinvoke <javapns.test.NotificationTest: javapns.notification.Payload createComplexPayload()>()"->"r12 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications payload(javapns.notification.Payload,java.lang.Object,java.lang.String,boolean,java.lang.Object)>($r4, r1, r2, z0, r3)";
    "r12 = staticinvoke <javapns.Push: javapns.notification.PushedNotifications payload(javapns.notification.Payload,java.lang.Object,java.lang.String,boolean,java.lang.Object)>($r4, r1, r2, z0, r3)"->"staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r12)";
    "staticinvoke <javapns.test.NotificationTest: void printPushedNotifications(java.util.List)>(r12)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "if z3 == 0 goto return"->"staticinvoke <javapns.test.NotificationTest: void pushSimplePayloadUsingThreads(java.lang.String,java.lang.String,boolean,java.lang.String,boolean,int,int)>(r1, r2, z0, r3, z1, i5, i7)";
    "if z3 == 0 goto return"->"return";
    "staticinvoke <javapns.test.NotificationTest: void pushSimplePayloadUsingThreads(java.lang.String,java.lang.String,boolean,java.lang.String,boolean,int,int)>(r1, r2, z0, r3, z1, i5, i7)"->"return";
}
