digraph "unitGraph" {
    "r18 := @parameter0: java.lang.String[]"
    "$r0 = new io.github.classgraph.ClassGraph"
    "specialinvoke $r0.<io.github.classgraph.ClassGraph: void <init>()>()"
    "$r1 = newarray (java.lang.String)[1]"
    "$r1[0] = \"com.xyz.fig\""
    "$r2 = virtualinvoke $r0.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph acceptPackages(java.lang.String[])>($r1)"
    "$r3 = virtualinvoke $r2.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph ignoreFieldVisibility()>()"
    "$r4 = virtualinvoke $r3.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableFieldInfo()>()"
    "$r5 = virtualinvoke $r4.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph ignoreMethodVisibility()>()"
    "$r6 = virtualinvoke $r5.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableMethodInfo()>()"
    "$r7 = virtualinvoke $r6.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableAnnotationInfo()>()"
    "r8 = virtualinvoke $r7.<io.github.classgraph.ClassGraph: io.github.classgraph.ScanResult scan()>()"
    "r19 = null"
    "$r9 = <java.lang.System: java.io.PrintStream out>"
    "$r10 = virtualinvoke r8.<io.github.classgraph.ScanResult: io.github.classgraph.ClassInfoList getAllClasses()>()"
    "$r11 = virtualinvoke $r10.<io.github.classgraph.ClassInfoList: java.lang.String generateGraphVizDotFile(float,float)>(9.2F, 8.0F)"
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11)"
    "if r8 == null goto return"
    "if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"
    "virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"
    "goto [?= return]"
    "$r17 := @caughtexception"
    "r20 = $r17"
    "virtualinvoke r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r20)"
    "$r16 := @caughtexception"
    "r21 = $r16"
    "r19 = r21"
    "throw r21"
    "$r15 := @caughtexception"
    "r14 = $r15"
    "if r8 == null goto throw r14"
    "goto [?= throw r14]"
    "$r12 := @caughtexception"
    "r13 = $r12"
    "virtualinvoke r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r13)"
    "throw r14"
    "return"
    "r18 := @parameter0: java.lang.String[]"->"$r0 = new io.github.classgraph.ClassGraph";
    "$r0 = new io.github.classgraph.ClassGraph"->"specialinvoke $r0.<io.github.classgraph.ClassGraph: void <init>()>()";
    "specialinvoke $r0.<io.github.classgraph.ClassGraph: void <init>()>()"->"$r1 = newarray (java.lang.String)[1]";
    "$r1 = newarray (java.lang.String)[1]"->"$r1[0] = \"com.xyz.fig\"";
    "$r1[0] = \"com.xyz.fig\""->"$r2 = virtualinvoke $r0.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph acceptPackages(java.lang.String[])>($r1)";
    "$r2 = virtualinvoke $r0.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph acceptPackages(java.lang.String[])>($r1)"->"$r3 = virtualinvoke $r2.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph ignoreFieldVisibility()>()";
    "$r3 = virtualinvoke $r2.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph ignoreFieldVisibility()>()"->"$r4 = virtualinvoke $r3.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableFieldInfo()>()";
    "$r4 = virtualinvoke $r3.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableFieldInfo()>()"->"$r5 = virtualinvoke $r4.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph ignoreMethodVisibility()>()";
    "$r5 = virtualinvoke $r4.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph ignoreMethodVisibility()>()"->"$r6 = virtualinvoke $r5.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableMethodInfo()>()";
    "$r6 = virtualinvoke $r5.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableMethodInfo()>()"->"$r7 = virtualinvoke $r6.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableAnnotationInfo()>()";
    "$r7 = virtualinvoke $r6.<io.github.classgraph.ClassGraph: io.github.classgraph.ClassGraph enableAnnotationInfo()>()"->"r8 = virtualinvoke $r7.<io.github.classgraph.ClassGraph: io.github.classgraph.ScanResult scan()>()";
    "r8 = virtualinvoke $r7.<io.github.classgraph.ClassGraph: io.github.classgraph.ScanResult scan()>()"->"r19 = null";
    "r19 = null"->"$r16 := @caughtexception";
    "r19 = null"->"$r15 := @caughtexception";
    "r19 = null"->"$r9 = <java.lang.System: java.io.PrintStream out>";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r16 := @caughtexception";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r15 := @caughtexception";
    "$r9 = <java.lang.System: java.io.PrintStream out>"->"$r10 = virtualinvoke r8.<io.github.classgraph.ScanResult: io.github.classgraph.ClassInfoList getAllClasses()>()";
    "$r10 = virtualinvoke r8.<io.github.classgraph.ScanResult: io.github.classgraph.ClassInfoList getAllClasses()>()"->"$r16 := @caughtexception";
    "$r10 = virtualinvoke r8.<io.github.classgraph.ScanResult: io.github.classgraph.ClassInfoList getAllClasses()>()"->"$r15 := @caughtexception";
    "$r10 = virtualinvoke r8.<io.github.classgraph.ScanResult: io.github.classgraph.ClassInfoList getAllClasses()>()"->"$r11 = virtualinvoke $r10.<io.github.classgraph.ClassInfoList: java.lang.String generateGraphVizDotFile(float,float)>(9.2F, 8.0F)";
    "$r11 = virtualinvoke $r10.<io.github.classgraph.ClassInfoList: java.lang.String generateGraphVizDotFile(float,float)>(9.2F, 8.0F)"->"$r16 := @caughtexception";
    "$r11 = virtualinvoke $r10.<io.github.classgraph.ClassInfoList: java.lang.String generateGraphVizDotFile(float,float)>(9.2F, 8.0F)"->"$r15 := @caughtexception";
    "$r11 = virtualinvoke $r10.<io.github.classgraph.ClassInfoList: java.lang.String generateGraphVizDotFile(float,float)>(9.2F, 8.0F)"->"virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11)";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11)"->"$r16 := @caughtexception";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11)"->"$r15 := @caughtexception";
    "virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r11)"->"if r8 == null goto return";
    "if r8 == null goto return"->"if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()";
    "if r8 == null goto return"->"return";
    "if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()";
    "if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()";
    "if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"$r17 := @caughtexception";
    "virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"goto [?= return]";
    "virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"$r17 := @caughtexception";
    "goto [?= return]"->"return";
    "$r17 := @caughtexception"->"r20 = $r17";
    "r20 = $r17"->"virtualinvoke r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r20)";
    "virtualinvoke r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r20)"->"goto [?= return]";
    "goto [?= return]"->"return";
    "virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"goto [?= return]";
    "goto [?= return]"->"return";
    "$r16 := @caughtexception"->"r21 = $r16";
    "$r16 := @caughtexception"->"$r15 := @caughtexception";
    "r21 = $r16"->"r19 = r21";
    "r21 = $r16"->"$r15 := @caughtexception";
    "r19 = r21"->"throw r21";
    "r19 = r21"->"$r15 := @caughtexception";
    "throw r21"->"$r15 := @caughtexception";
    "$r15 := @caughtexception"->"r14 = $r15";
    "$r15 := @caughtexception"->"$r15 := @caughtexception";
    "r14 = $r15"->"if r8 == null goto throw r14";
    "r14 = $r15"->"$r15 := @caughtexception";
    "if r8 == null goto throw r14"->"if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()";
    "if r8 == null goto throw r14"->"throw r14";
    "if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()";
    "if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()";
    "if r19 == null goto virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"$r12 := @caughtexception";
    "virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"goto [?= throw r14]";
    "virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"$r12 := @caughtexception";
    "goto [?= throw r14]"->"throw r14";
    "$r12 := @caughtexception"->"r13 = $r12";
    "r13 = $r12"->"virtualinvoke r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r13)";
    "virtualinvoke r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>(r13)"->"goto [?= throw r14]";
    "goto [?= throw r14]"->"throw r14";
    "virtualinvoke r8.<io.github.classgraph.ScanResult: void close()>()"->"throw r14";
}
